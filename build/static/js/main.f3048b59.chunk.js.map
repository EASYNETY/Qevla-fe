{"version":3,"sources":["assets/img/brand/qevla_logo1.png","variables/charts.js","assets/img/theme/team-4-800x800.jpg","assets/img/theme/team-1-800x800.jpg","assets/img/icons/common/github.svg","assets/img/icons/common/google.svg","components/Navbars/AdminNavbar.js","components/Footers/AdminFooter.js","components/Sidebar/Sidebar.js","api-endpoints.js","services/auth_service.js","utils/static.js","services/http-service-oauth.js","utils/encryptor.js","utils/tools.js","utils/ui-messages.js","services/error-handler-service.js","actions/types.js","views/Drivers.js","components/Headers/Header.js","views/Index.js","components/Headers/UserHeader.js","views/Profile.js","views/Maps.js","components/Headers/Payment.js","views/PaymentModal.js","views/TransactionTable.js","views/Paymnt.js","views/SubAccountTable.js","views/Subaccounts.js","views/Login.js","components/Headers/DriverRegHeader.js","views/PasswordReset.js","views/PasswordResetRequest.js","views/Admins.js","routes.js","views/AddAdmin.js","views/AddDriver.js","layouts/Admin.js","components/Navbars/AuthNavbar.js","components/Footers/AuthFooter.js","layouts/Auth.js","reducers/auth.js","reducers/message.js","reducers/index.js","store.js","index.js","assets/img/brand/qevla_logo.png"],"names":["Chart","require","elements","Rectangle","prototype","draw","left","right","top","bottom","signX","signY","borderSkipped","ctx","this","_chart","vm","_view","borderWidth","horizontal","base","x","y","height","width","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","radius","lineTo","quadraticCurveTo","fill","stroke","fonts","colors","default","primary","secondary","info","success","danger","warning","chartExample1","options","scales","yAxes","gridLines","color","zeroLineColor","ticks","callback","value","tooltips","callbacks","label","item","data","datasets","datasetIndex","yLabel","content","length","data1","canvas","labels","data2","module","exports","chartOptions","defaults","global","responsive","maintainAspectRatio","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","layout","padding","legend","display","position","usePointStyle","point","line","tension","borderCapStyle","rectangle","arc","enabled","mode","intersect","doughnut","cutoutPercentage","legendCallback","chart","forEach","bgColor","scaleService","updateScaleDefaults","borderDash","borderDashOffset","drawBorder","drawTicks","zeroLineWidth","zeroLineBorderDash","zeroLineBorderDashOffset","beginAtZero","drawOnChartArea","parseOptions","parent","chartExample2","maxBarThickness","getFormValues","storedValues","localStorage","getItem","JSON","parse","email","message","name","telephone","AdminNavbar","props","_React$useState","React","useState","_React$useState2","_slicedToArray","user","useEffect","stringify","console","log","_jsx","_Fragment","children","Navbar","className","expand","id","_jsxs","Container","fluid","Link","to","brandText","Nav","navbar","UncontrolledDropdown","nav","DropdownToggle","Media","alt","src","first_name","DropdownMenu","DropdownItem","header","tag","divider","href","onClick","e","clear","window","location","Footer","Row","Col","xl","Date","getFullYear","rel","target","Sidebar","navbarBrandProps","_useState","_useState2","collapseOpen","setCollapseOpen","toggleCollapse","closeCollapse","routes","logo","innerLink","outterLink","type","NavbarBrand","_objectSpread","imgAlt","imgSrc","preventDefault","Collapse","isOpen","xs","Form","InputGroup","Input","placeholder","InputGroupAddon","addonType","InputGroupText","map","prop","key","NavItem","NavLink","path","NavLinkRRD","activeClassName","icon","createLinks","defaultProps","onboardingService","concat","process","authBaseUrl","authUrl","endpoints","addUser","getDrivers","getDriverById","getAdmins","updateDriverById","deleteDriverById","getDriverRegStatus","login","adminLogin","requestResetPassword","passwordReset","authService","signup","password","axios","post","addUSer","then","response","accessToken","setItem","Token","logout","removeItem","requestPasswordReset","getCurrentUser","responseCodes","metricValues","resendTime","bvnLength","transactionPinLength","pinValidationTimeout","maxFileSize","accountNumberLength","timeToPageReloadAfterSuccess","monthlyTurnoverMinimum","monthlyTurnoverMaximum","monthlyTurnoverStep","monthlyTurnoverMultiplier","corporateCodeMinLength","usernameMinLength","taxIdLength","minRegNumberLength","minPhoneNumberLength","minCorporateCodeLength","solePropietorBusinessTypeCode","minimumTransferLimit","origin","REACT_APP_BUILD_VERSION","myOauth2Axios","sessionStorage","create","baseURL","headers","timeout","interceptors","request","use","doGet","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee3","url","_config","resData","_yield$myOauth2Axios$2","wrap","_context3","prev","next","get","sent","abrupt","t0","handleMyErrors","stop","_x","_x2","apply","arguments","doPost","_ref4","_callee4","requestBody","config","_yield$myOauth2Axios$3","_args4","_context4","undefined","_x3","_x4","doPut","_ref5","_callee5","_yield$myOauth2Axios$4","_args5","_context5","put","_x5","_x6","isNullOrUndefined","val","grouper","array","asObject","reduce","objectsByKeyValue","obj","responseMessage","String","REACT_APP_MAXIMUM_BENEFICIARY_COUNT","toString","err","finalErrRes","responseCode","hasError","_err$response","_errRes$error_descrip","_errRes$error","_errRes$error2","_err$message","_err$message2","errRes","error_description","includes","error","Error","Array","isArray","_errResDataString","errResData","errResDataString","_i","_Object$entries","Object","entries","_Object$entries$_i","keys","values","toLowerCase","REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SET_MESSAGE","CLEAR_MESSAGE","Drivers","modalInfo","setModalInfo","_useState3","_useState4","_useState5","_useState6","show","setShow","_useState7","_useState8","_useState9","_useState10","drivers","setDrivers","driver","handleClose","handleShow","_fetchUsers","_callee","fullResponse","responseJson","_context","fetch","json","users","filter","isAdmin","fetchUsers","push","rowEvents","row","ModalContent","Modal","onHide","contentClassName","dialogClassName","Header","closeLabel","Button","variant","Title","last_name","Body","Card","lg","CardHeader","size","CardBody","vehicle_details","address","createdAt","v_license","FormGroup","htmlFor","defaultValue","md","number","max_weight","payment_details","bank_holder_name","account_number","bank_name","columns","dataField","text","classes","formatter","cellContent","DropdownButton","title","Dropdown","Item","method","body","ok","updatedDriver","reload","statusText","catch","handleDeleteRow","_id","BootstrapTable","keyField","pagination","paginationFactory","admins","setAdmins","count","CardTitle","Index","UserHeader","style","minHeight","backgroundImage","backgroundSize","backgroundPosition","Redirect","Profile","Map","activeMarker","setActiveMarker","marker","setLatlng","driverInfo","margin","borderRadius","borderTopRightRadius","borderBottomRightRadius","boxShadow","transition","fontSize","letterSpacing","marginTop","v_manufacturer","fontFamily","fontWeight","website","google","qevLoc","maps","LatLng","GoogleMap","onLoad","bounds","LatLngBounds","extend","_ref","fitBounds","mapContainerStyle","zoom","scrollwheel","zoomControl","styles","featureType","elementType","stylers","visibility","saturation","lightness","_ref2","Marker","handleActiveMarker","InfoWindow","onCloseClick","PaymentHeader","PaymentModal","selectedPayment","showModal","onClose","closeButton","subaccount","business_name","settlement_bank","amount","TransactionTable","setSelectedPayment","setShowModal","float","whiteSpace","overflow","textOverflow","payment","Paymnt","responseData","setResponseData","_useState11","_useState12","apiResponse","setApiResponse","_useState13","_useState14","transactionData","setTransactionData","_useState15","transaction_charge","_useState16","formData","setFormData","_React$useState3","_React$useState4","copySuccess","setCopySuccess","copyTextRef","useRef","ref","CopyToClipboard","onCopy","handleInputChange","_e$target","_defineProperty","handleApiResponse","onSubmit","payload","Authorization","authorization_url","for","onChange","SubaccountTable","SubAccounts","subaccountData","setSubaccountData","fetchSubaccountData","percentage_charge","handleChange","handleSubmit","_callee2","requestOptions","_context2","Login","setEmail","setPassword","navigate","useHistory","handleLogin","AuthService","role","open","DriverRegHeader","token","userId","PasswordReset","passReq","handlePassRequest","PasswordResetRequest","Admins","component","submenu","Maps","lassName","readOnly","Admin","mainContent","useLocation","document","documentElement","scrollTop","scrollingElement","current","pathname","getBrandText","Switch","Route","render","submenuItems","from","AdminFooter","UncontrolledCollapse","toggler","Auth","classList","add","remove","AuthNavbar","xmlns","preserveAspectRatio","version","viewBox","points","AuthFooter","initialState","isLoggedIn","combineReducers","auth","state","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","Provider","BrowserRouter","AdminLayout","AuthLayout","getElementById"],"mappings":";kIAAA,OAAe,cAA0B,uC,sBCiBzC,IAAMA,EAAQC,EAAQ,IAMtBD,EAAME,SAASC,UAAUC,UAAUC,KAAO,WACxC,IAEIC,EAAMC,EAAOC,EAAKC,EAAQC,EAAOC,EAAOC,EAFxCC,EAAMC,KAAKC,OAAOF,IAClBG,EAAKF,KAAKG,MAEVC,EAAcF,EAAGE,YA2BrB,GAtBKF,EAAGG,YAWNb,EAAOU,EAAGI,KACVb,EAAQS,EAAGK,EACXb,EAAMQ,EAAGM,EAAIN,EAAGO,OAAS,EACzBd,EAASO,EAAGM,EAAIN,EAAGO,OAAS,EAC5Bb,EAAQH,EAAQD,EAAO,GAAK,EAC5BK,EAAQ,EACRC,EAAgBI,EAAGJ,eAAiB,SAfpCN,EAAOU,EAAGK,EAAIL,EAAGQ,MAAQ,EACzBjB,EAAQS,EAAGK,EAAIL,EAAGQ,MAAQ,EAC1BhB,EAAMQ,EAAGM,EAETZ,EAAQ,EACRC,GAFAF,EAASO,EAAGI,MAEKZ,EAAM,GAAK,EAC5BI,EAAgBI,EAAGJ,eAAiB,UAclCM,EAAa,CAEf,IAAIO,EAAUC,KAAKC,IAAID,KAAKE,IAAItB,EAAOC,GAAQmB,KAAKE,IAAIpB,EAAMC,IAE1DoB,GADJX,EAAcA,EAAcO,EAAUA,EAAUP,GACjB,EAE3BY,EAAaxB,GAA0B,SAAlBM,EAA2BiB,EAAanB,EAAQ,GACrEqB,EACFxB,GAA2B,UAAlBK,GAA6BiB,EAAanB,EAAQ,GACzDsB,EAAYxB,GAAyB,QAAlBI,EAA0BiB,EAAalB,EAAQ,GAClEsB,EACFxB,GAA4B,WAAlBG,GAA8BiB,EAAalB,EAAQ,GAE3DmB,IAAeC,IACjBvB,EAAMwB,EACNvB,EAASwB,GAGPD,IAAcC,IAChB3B,EAAOwB,EACPvB,EAAQwB,EAEZ,CAEAlB,EAAIqB,YACJrB,EAAIsB,UAAYnB,EAAGoB,gBACnBvB,EAAIwB,YAAcrB,EAAGsB,YACrBzB,EAAI0B,UAAYrB,EAKhB,IAAIsB,EAAU,CACZ,CAAClC,EAAMG,GACP,CAACH,EAAME,GACP,CAACD,EAAOC,GACR,CAACD,EAAOE,IAKNgC,EADU,CAAC,SAAU,OAAQ,MAAO,SACdC,QAAQ9B,EAAe,GAKjD,SAAS+B,EAASC,GAChB,OAAOJ,GAASC,EAAcG,GAAS,EACzC,EANqB,IAAjBH,IACFA,EAAc,GAQhB,IAAII,EAASF,EAAS,GACtB9B,EAAIiC,OAAOD,EAAO,GAAIA,EAAO,IAE7B,IAAK,IAAIE,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1BF,EAASF,EAASI,GAClB,IAAIC,EAAeD,EAAI,EACF,IAAjBC,IACFA,EAAe,GAKjB,IAKIC,EALAzB,EAAQgB,EAAQ,GAAG,GAAKA,EAAQ,GAAG,GACnCjB,EAASiB,EAAQ,GAAG,GAAKA,EAAQ,GAAG,GACpCnB,EAAImB,EAAQ,GAAG,GACflB,EAAIkB,EAAQ,GAAG,IAEfS,EA5Fa,GA+FJ1B,EAAS,IACpB0B,EAAS1B,EAAS,GAEhB0B,EAASzB,EAAQ,IACnByB,EAASzB,EAAQ,GAGnBX,EAAIiC,OAAOzB,EAAI4B,EAAQ3B,GACvBT,EAAIqC,OAAO7B,EAAIG,EAAQyB,EAAQ3B,GAC/BT,EAAIsC,iBAAiB9B,EAAIG,EAAOF,EAAGD,EAAIG,EAAOF,EAAI2B,GAClDpC,EAAIqC,OAAO7B,EAAIG,EAAOF,EAAIC,EAAS0B,GACnCpC,EAAIsC,iBAAiB9B,EAAIG,EAAOF,EAAIC,EAAQF,EAAIG,EAAQyB,EAAQ3B,EAAIC,GACpEV,EAAIqC,OAAO7B,EAAI4B,EAAQ3B,EAAIC,GAC3BV,EAAIsC,iBAAiB9B,EAAGC,EAAIC,EAAQF,EAAGC,EAAIC,EAAS0B,GACpDpC,EAAIqC,OAAO7B,EAAGC,EAAI2B,GAClBpC,EAAIsC,iBAAiB9B,EAAGC,EAAGD,EAAI4B,EAAQ3B,EACzC,CAEAT,EAAIuC,OACAlC,GACFL,EAAIwC,QAER,EAEA,IACIC,EACI,YAIJC,EACI,CACJ,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,WAVLA,EAYK,CACLC,QAAS,UACTC,QAAS,UACTC,UAAW,UACXC,KAAM,UACNC,QAAS,UACTC,OAAQ,UACRC,QAAS,WAnBTP,EAsBK,UAtBLA,EAuBW,cAmIf,IAAIQ,EAAgB,CAClBC,QAAS,CACPC,OAAQ,CACNC,MAAO,CACL,CACEC,UAAW,CACTC,MAAOb,EAAY,KACnBc,cAAed,EAAY,MAE7Be,MAAO,CACLC,SAAU,SAAUC,GAClB,KAAMA,EAAQ,IACZ,MAAO,IAAMA,EAAQ,GAEzB,MAKRC,SAAU,CACRC,UAAW,CACTC,MAAO,SAAUC,EAAMC,GACrB,IAAIF,EAAQE,EAAKC,SAASF,EAAKG,cAAcJ,OAAS,GAClDK,EAASJ,EAAKI,OACdC,EAAU,GAOd,OALIJ,EAAKC,SAASI,OAAS,IACzBD,GAAWN,GAGbM,GAAW,IAAMD,EAAS,GAE5B,KAING,MAAO,SAACC,GACN,MAAO,CACLC,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC1DP,SAAU,CACR,CACEH,MAAO,cACPE,KAAM,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAI9C,EACAS,MAAO,SAACF,GACN,MAAO,CACLC,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC1DP,SAAU,CACR,CACEH,MAAO,cACPE,KAAM,CAAC,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,MAI7C,GA+CFU,EAAOC,QAAU,CACfC,aAtOF,WAEE,IAAIzB,EAAU,CACZ0B,SAAU,CACRC,OAAQ,CACNC,YAAY,EACZC,qBAAqB,EACrBC,aAAmDvC,EAAY,KAC/DwC,iBAAuDxC,EAAY,KACnEyC,kBAAmB1C,EACnB2C,gBAAiB,GACjBC,OAAQ,CACNC,QAAS,GAEXC,OAAQ,CACNC,SAAS,EACTC,SAAU,SACVjB,OAAQ,CACNkB,eAAe,EACfJ,QAAS,KAGbjG,SAAU,CACRsG,MAAO,CACLvD,OAAQ,EACRb,gBAAiBmB,EAAsB,SAEzCkD,KAAM,CACJC,QAAS,GACTxF,YAAa,EACboB,YAAaiB,EAAsB,QACnCnB,gBAAiBmB,EACjBoD,eAAgB,WAElBC,UAAW,CACTxE,gBAAiBmB,EAAsB,SAEzCsD,IAAK,CACHzE,gBAAiBmB,EAAsB,QACvCjB,YAAkDiB,EAClDrC,YAAa,IAGjBuD,SAAU,CACRqC,SAAS,EACTC,KAAM,QACNC,WAAW,IAGfC,SAAU,CACRC,iBAAkB,GAClBC,eAAgB,SAAUC,GACxB,IAAIvC,EAAOuC,EAAMvC,KACbI,EAAU,GAcd,OAZAJ,EAAKQ,OAAOgC,SAAQ,SAAU1C,EAAO/B,GACnC,IAAI0E,EAAUzC,EAAKC,SAAS,GAAG1C,gBAAgBQ,GAE/CqC,GAAW,mCACXA,GACE,8DACAqC,EACA,SACFrC,GAAWN,EACXM,GAAW,SACb,IAEOA,CACT,KA0CN,OApCAjF,EAAMuH,aAAaC,oBAAoB,SAAU,CAC/CrD,UAAW,CACTsD,WAAY,CAAC,GACbC,iBAAkB,CAAC,GACnBtD,MAA4Cb,EAAY,KACxDoE,YAAY,EACZC,WAAW,EACXrF,UAAW,EACXsF,cAAe,EACfxD,cAAoDd,EAAY,KAChEuE,mBAAoB,CAAC,GACrBC,yBAA0B,CAAC,IAE7BzD,MAAO,CACL0D,aAAa,EACb7B,QAAS,GACT5B,SAAU,SAAUC,GAClB,KAAMA,EAAQ,IACZ,OAAOA,CAEX,KAKJxE,EAAMuH,aAAaC,oBAAoB,WAAY,CACjDrD,UAAW,CACTwD,YAAY,EACZM,iBAAiB,EACjBL,WAAW,GAEbtD,MAAO,CACL6B,QAAS,MAINnC,CACT,EAwHEkE,aArHF,SAASA,EAAaC,EAAQnE,GAC5B,IAAK,IAAIY,KAAQZ,EACc,kBAAlBA,EAAQY,GACjBuD,EAAOvD,GAAQZ,EAAQY,GAEvBsD,EAAaC,EAAOvD,GAAOZ,EAAQY,GAGzC,EA8GEb,gBACAqE,cA/CkB,CAClBpE,QAAS,CACPC,OAAQ,CACNC,MAAO,CACL,CACEI,MAAO,CACLC,SAAU,SAAUC,GAClB,KAAMA,EAAQ,IAEZ,OAAOA,CAEX,MAKRC,SAAU,CACRC,UAAW,CACTC,MAAO,SAAUC,EAAMC,GACrB,IAAIF,EAAQE,EAAKC,SAASF,EAAKG,cAAcJ,OAAS,GAClDK,EAASJ,EAAKI,OACdC,EAAU,GAKd,OAJIJ,EAAKC,SAASI,OAAS,IACzBD,GAAWN,GAEbM,GAAWD,CAEb,KAINH,KAAM,CACJQ,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,OAC5CP,SAAU,CACR,CACEH,MAAO,QACPE,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAC3BwD,gBAAiB,O,mCCvZzB,OAAe,cAA0B,0C,+ECAzC,OAAe,cAA0B,0C,mCCAzC,OAAe,cAA0B,kC,mCCAzC,OAAe,cAA0B,kC,0NCoBvC,SAASC,IACP,IAAMC,EAAeC,aAAaC,QAAQ,QAC1C,OAAKF,EAOEG,KAAKC,MAAMJ,GANT,CACLK,MAAO,GACPC,QAAS,GACTC,KAAM,GACNC,UAAW,GAGjB,CAEF,IA0FeC,EA1FK,SAACC,GACnB,IAAAC,EAAwBC,IAAMC,SAASd,GAAce,EAAAC,YAAAJ,EAAA,GAA9CK,EAAIF,EAAA,GAASA,EAAA,GAGlBF,IAAMK,WAAU,WACdhB,aAAaC,QAAQ,OAAQC,KAAKe,UAAUF,GAC9C,GAAG,CAACA,IAEJG,QAAQC,IAAI,YAAaJ,GAM3B,OACEK,cAAAC,WAAA,CAAAC,SACEF,cAACG,IAAM,CAACC,UAAU,yBAAyBC,OAAO,KAAKC,GAAG,cAAaJ,SACrEK,eAACC,IAAS,CAACC,OAAK,EAAAP,SAAA,CACdF,cAACU,IAAI,CACHN,UAAU,6DACVO,GAAG,IAAGT,SAELb,EAAMuB,YAcTZ,cAACa,IAAG,CAACT,UAAU,sCAAsCU,QAAM,EAAAZ,SACzDK,eAACQ,IAAoB,CAACC,KAAG,EAAAd,SAAA,CACvBF,cAACiB,IAAc,CAACb,UAAU,OAAOY,KAAG,EAAAd,SAClCK,eAACW,IAAK,CAACd,UAAU,qBAAoBF,SAAA,CACnCF,cAAA,QAAMI,UAAU,kCAAiCF,SAC/CF,cAAA,OACEmB,IAAI,MACJC,IACE/K,EAAQ,KACLuD,YAIToG,cAACkB,IAAK,CAACd,UAAU,yBAAwBF,SACvCF,cAAA,QAAMI,UAAU,gCAA+BF,SAC5CP,EAAK0B,oBAKdd,eAACe,IAAY,CAAClB,UAAU,sBAAsBzJ,OAAK,EAAAuJ,SAAA,CACjDF,cAACuB,IAAY,CAACnB,UAAU,aAAaoB,QAAM,EAACC,IAAI,MAAKvB,SACnDF,cAAA,MAAII,UAAU,oBAAmBF,SAAC,eAEpCK,eAACgB,IAAY,CAACZ,GAAG,sBAAsBc,IAAKf,IAAKR,SAAA,CAC/CF,cAAA,KAAGI,UAAU,oBACbJ,cAAA,QAAAE,SAAM,kBAERK,eAACgB,IAAY,CAACZ,GAAG,sBAAsBc,IAAKf,IAAKR,SAAA,CAC/CF,cAAA,KAAGI,UAAU,2BACbJ,cAAA,QAAAE,SAAM,gBAERK,eAACgB,IAAY,CAACZ,GAAG,sBAAsBc,IAAKf,IAAKR,SAAA,CAC/CF,cAAA,KAAGI,UAAU,2BACbJ,cAAA,QAAAE,SAAM,gBAERK,eAACgB,IAAY,CAACZ,GAAG,sBAAsBc,IAAKf,IAAKR,SAAA,CAC/CF,cAAA,KAAGI,UAAU,qBACbJ,cAAA,QAAAE,SAAM,eAERF,cAACuB,IAAY,CAACG,SAAO,IACrBnB,eAACgB,IAAY,CAACI,KAAK,SAASC,QAAS,SAACC,GAAC,OAlE/CjD,aAAakD,aACbC,OAAOC,SAASL,KAAO,IAiEqC,EAACzB,SAAA,CACnDF,cAAA,KAAGI,UAAU,mBACbJ,cAAA,QAAAE,SAAM,4BASxB,E,kBC/Fe+B,EAtBA,WACb,OACEjC,cAAA,UAAQI,UAAU,SAAQF,SACxBF,cAACkC,IAAG,CAAC9B,UAAU,gDAA+CF,SAC5DF,cAACmC,IAAG,CAACC,GAAG,IAAGlC,SACTK,eAAA,OAAKH,UAAU,gDAA+CF,SAAA,CAAC,SAC1D,IAAImC,MAAOC,cAAe,IAC7BtC,cAAA,KACEI,UAAU,wBACVuB,KAAK,GACLY,IAAI,sBACJC,OAAO,SAAQtC,SAChB,sBAQb,E,iFCiBMuC,EAAU,SAACpD,GACf,IAiCIqD,EAjCJC,EAAwCnD,qBAAUoD,EAAAlD,YAAAiD,EAAA,GAA3CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAM9BG,EAAiB,WACrBD,GAAgB,SAAC7H,GAAI,OAAMA,CAAI,GACjC,EAEM+H,EAAgB,WACpBF,GAAgB,EAClB,EAoBiBG,GAAiB5D,EAA1B3B,QAA0B2B,EAAjB4D,QAAQC,EAAS7D,EAAT6D,KAczB,OAZIA,GAAQA,EAAKC,UACfT,EAAmB,CACjB/B,GAAIuC,EAAKC,UACT1B,IAAKf,KAEEwC,GAAQA,EAAKE,aACtBV,EAAmB,CACjBf,KAAMuB,EAAKE,WACXZ,OAAQ,WAKVxC,cAACG,IAAM,CACLC,UAAU,mDACVC,OAAO,KACPC,GAAG,eAAcJ,SAEjBK,eAACC,IAAS,CAACC,OAAK,EAAAP,SAAA,CAEdF,cAAA,UACEI,UAAU,iBACViD,KAAK,SACLzB,QAASmB,EAAe7C,SAExBF,cAAA,QAAMI,UAAU,0BAGjB8C,EACClD,cAACsD,IAAWC,wBAAA,CAACnD,UAAU,QAAWsC,GAAgB,IAAAxC,SAChDF,cAAA,OACEmB,IAAK+B,EAAKM,OACVpD,UAAU,mBACVgB,IAAK8B,EAAKO,YAGZ,KAEJlD,eAACM,IAAG,CAACT,UAAU,+BAA8BF,SAAA,CAC3CK,eAACQ,IAAoB,CAACC,KAAG,EAAAd,SAAA,CACvBF,cAACiB,IAAc,CAACD,KAAG,EAACZ,UAAU,gBAAeF,SAC3CF,cAAA,KAAGI,UAAU,oBAEfG,eAACe,IAAY,CACX,kBAAgB,4BAChBlB,UAAU,sBACVzJ,OAAK,EAAAuJ,SAAA,CAELF,cAACuB,IAAY,CAAArB,SAAC,WACdF,cAACuB,IAAY,CAAArB,SAAC,mBACdF,cAACuB,IAAY,CAACG,SAAO,IACrB1B,cAACuB,IAAY,CAAArB,SAAC,8BAGlBK,eAACQ,IAAoB,CAACC,KAAG,EAAAd,SAAA,CACvBF,cAACiB,IAAc,CAACD,KAAG,EAAAd,SACjBF,cAACkB,IAAK,CAACd,UAAU,qBAAoBF,SACnCF,cAAA,QAAMI,UAAU,kCAAiCF,SAC/CF,cAAA,OACEmB,IAAI,MACJC,IACE/K,EAAQ,KACLuD,gBAMb2G,eAACe,IAAY,CAAClB,UAAU,sBAAsBzJ,OAAK,EAAAuJ,SAAA,CACjDF,cAACuB,IAAY,CAACnB,UAAU,aAAaoB,QAAM,EAACC,IAAI,MAAKvB,SACnDF,cAAA,MAAII,UAAU,oBAAmBF,SAAC,eAEpCK,eAACgB,IAAY,CAACZ,GAAG,sBAAsBc,IAAKf,IAAKR,SAAA,CAC/CF,cAAA,KAAGI,UAAU,oBACbJ,cAAA,QAAAE,SAAM,kBAERK,eAACgB,IAAY,CAACZ,GAAG,sBAAsBc,IAAKf,IAAKR,SAAA,CAC/CF,cAAA,KAAGI,UAAU,2BACbJ,cAAA,QAAAE,SAAM,gBAERK,eAACgB,IAAY,CAACZ,GAAG,sBAAsBc,IAAKf,IAAKR,SAAA,CAC/CF,cAAA,KAAGI,UAAU,2BACbJ,cAAA,QAAAE,SAAM,gBAERK,eAACgB,IAAY,CAACZ,GAAG,sBAAsBc,IAAKf,IAAKR,SAAA,CAC/CF,cAAA,KAAGI,UAAU,qBACbJ,cAAA,QAAAE,SAAM,eAERF,cAACuB,IAAY,CAACG,SAAO,IACrBnB,eAACgB,IAAY,CAACI,KAAK,SAASC,QAAS,SAACC,GAAC,OAAKA,EAAE6B,gBAAgB,EAACxD,SAAA,CAC7DF,cAAA,KAAGI,UAAU,mBACbJ,cAAA,QAAAE,SAAM,uBAMdK,eAACoD,IAAQ,CAAC7C,QAAM,EAAC8C,OAAQf,EAAa3C,SAAA,CAEpCF,cAAA,OAAKI,UAAU,mCAAkCF,SAC/CK,eAAC2B,IAAG,CAAAhC,SAAA,CACDgD,EACClD,cAACmC,IAAG,CAAC/B,UAAU,iBAAiByD,GAAG,IAAG3D,SACnCgD,EAAKC,UACJnD,cAACU,IAAI,CAACC,GAAIuC,EAAKC,UAAUjD,SACvBF,cAAA,OAAKmB,IAAK+B,EAAKM,OAAQpC,IAAK8B,EAAKO,WAGnCzD,cAAA,KAAG2B,KAAMuB,EAAKE,WAAWlD,SACvBF,cAAA,OAAKmB,IAAK+B,EAAKM,OAAQpC,IAAK8B,EAAKO,aAIrC,KACJzD,cAACmC,IAAG,CAAC/B,UAAU,iBAAiByD,GAAG,IAAG3D,SACpCK,eAAA,UACEH,UAAU,iBACViD,KAAK,SACLzB,QAASmB,EAAe7C,SAAA,CAExBF,cAAA,WACAA,cAAA,qBAMRA,cAAC8D,IAAI,CAAC1D,UAAU,sBAAqBF,SACnCK,eAACwD,IAAU,CAAC3D,UAAU,wCAAuCF,SAAA,CAC3DF,cAACgE,IAAK,CACJ,aAAW,SACX5D,UAAU,8CACV6D,YAAY,SACZZ,KAAK,WAEPrD,cAACkE,IAAe,CAACC,UAAU,UAASjE,SAClCF,cAACoE,IAAc,CAAAlE,SACbF,cAAA,QAAMI,UAAU,0BAMxBJ,cAACa,IAAG,CAACC,QAAM,EAAAZ,SAnKC,SAAC+C,GACnB,OAAOA,EAAOoB,KAAI,SAACC,EAAMC,GACvB,OACEvE,cAACwE,IAAO,CAAAtE,SACNK,eAACkE,IAAO,CACN9D,GAAI2D,EAAKhI,OAASgI,EAAKI,KACvBjD,IAAKkD,IACL/C,QAASoB,EACT4B,gBAAgB,SAAQ1E,SAAA,CAExBF,cAAA,KAAGI,UAAWkE,EAAKO,OAClBP,EAAKpF,SARIqF,EAYlB,GACF,CAmJqBO,CAAY7B,KAEzBjD,cAAA,MAAII,UAAU,gBAMxB,EAEAqC,EAAQsC,aAAe,CAEvB,EAmBetC,Q,kDCzPFuC,EAAiB,GAAAC,OAAMC,4BAAkC,aACzDC,EAAW,GAAAF,OAAMC,4BAAkC,aACnDE,EAAO,GAAAH,OAAMC,4BAAkC,aAK/CG,EAAY,CAEvBC,QAASN,EAAkBC,OAAO,WAClCM,WAAYP,EAAkBC,OAAO,YACrCO,cAAeR,EAAkBC,OAAO,QACxCQ,UAAWT,EAAkBC,OAAO,YAEpCS,iBAAkBV,EAAkBC,OAAO,eAC3CU,iBAAkBX,EAAkBC,OAAO,WAE3CW,mBAAoBZ,EAAkBC,OAAO,mBAG7CY,MAAOV,EAAYF,OAAO,UAC1Ba,WAAYX,EAAYF,OAAO,gBAC/Bc,qBAAsBX,EAAQH,OAAO,yBACrCe,cAAeZ,EAAQH,OAAO,oBCyDjBgB,EARK,CAClBC,OApEa,SAAClH,EAAOmH,GACrB,OAAOC,IACJC,KAAKhB,EAAUiB,QAAS,CACvBtH,QACAmH,aAEDI,MAAK,SAACC,GAKL,OAJIA,EAASvL,KAAKwL,aAChB7H,aAAa8H,QAAQ,OAAQ5H,KAAKe,UAAU2G,EAASvL,OAGhDuL,EAASvL,IAClB,GACJ,EAwDE4K,MAtDY,SAAC7G,EAAOmH,GACpB,OAAOC,IACJC,KAAKhB,EAAUS,WAAY,CAC1B9G,QACAmH,aAEDI,MAAK,SAACC,GAKL,OAJIA,EAASvL,KAAK0L,OAChB5E,OAAOnD,aAAa8H,QAAQ,OAAQ5H,KAAKe,UAAU2G,EAASvL,KAAK0E,OAEnEG,QAAQC,IAAIyG,EAASvL,KAAK0E,MACnB6G,EAASvL,IAClB,GACJ,EA0CE2L,OAXa,WACbhI,aAAaiI,WAAW,OAC1B,EAUEC,qBAzC2B,SAAC9H,GAC5B,OAAOoH,IACJC,KAAKhB,EAAUU,qBAAsB,CACpC/G,UAEDuH,MAAK,SAACC,GAKL,OAJIA,EAASvL,MACX8G,OAAOnD,aAAa8H,QAAQ,UAAW5H,KAAKe,UAAU2G,EAASvL,OAEjE6E,QAAQC,IAAIyG,EAASvL,MACduL,EAASvL,IAClB,GACJ,EA8BE8L,eATqB,WACrB,OAAOjI,KAAKC,MAAMH,aAAaC,QAAQ,QACzC,G,mDC8SamI,EAIE,MAJFA,EAKG,MALHA,EAMI,gBANJA,GAOU,MAPVA,GAQM,kBARNA,GASK,iBATLA,GAUI,gBAVJA,GAWK,MA6CLC,GAAe,CAC1BC,WAAY,GACZ5L,OAAQ,EACR6L,UAAW,GACXC,qBAAsB,EACtBC,qBAAsB,IACtBC,YAAa,IACbC,oBAAqB,GACrBC,6BAA8B,IAC9BC,uBAAwB,EACxBC,uBAAwB,IACxBC,oBAAqB,GACrBC,0BAA2B,IAC3BC,uBAAwB,EACxBC,kBAAmB,EACnBC,YAAa,GACbC,mBAAoB,EACpBC,qBAAsB,GACtBC,uBAAwB,EACxBC,8BAA+B,IAC/BC,qBAAsB,G,IAGDrG,OAAOC,SAASqG,OAG5BnD,sLAAYoD,wB,OCxbjBC,I,OCdwBC,e,oBDcOpC,IAAMqC,OAAO,CAChDC,QAAS,MAEXH,GAAczM,SAAS6M,QAAQtC,KAAK,gBAAkB,mBACtDkC,GAAczM,SAAS6M,QAAQtC,KAAa,OAAI,mBAChDkC,GAAczM,SAAS8M,QAAU,KACjCL,GAAcM,aAAaC,QAAQC,KAAI,SAACD,GACtC,OAAOA,CACT,IA0BO,IA+CDE,GAAK,eAAAC,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,EAAOC,EAAaC,GAAa,IAAAC,EAAAC,EAAAxO,EAAA,OAAAkO,cAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACxB,OAAjBL,EAAe,CAAC,EAACG,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAKItB,GAAcuB,IAAIR,GAAK,KAAD,EAAjC,OAAiCG,EAAAE,EAAAI,KAArC9O,EAAIwO,EAAJxO,KAAI0O,EAAAK,OAAA,SACL/O,GAAI,OAAA0O,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAEXH,EAAUU,GAAcP,EAAAM,IAAM,eAAAN,EAAAK,OAAA,SAEzBR,GAAO,yBAAAG,EAAAQ,OAAA,GAAAd,EAAA,kBACf,gBAZUe,EAAAC,GAAA,OAAApB,EAAAqB,MAAA,KAAAC,UAAA,KAcLC,GAAM,eAAAC,EAAAvB,YAAAC,cAAAC,MAAG,SAAAsB,EAAOpB,EAAaqB,GAAgB,IAAAC,EAAApB,EAAAqB,EAAA5P,EAAA6P,EAAAP,UAAA,OAAApB,cAAAO,MAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,OAAkB,OAAhBe,EAAWE,EAAAxP,OAAA,QAAA0P,IAAAF,EAAA,GAAAA,EAAA,GAAG,CAAC,EAACC,EAAAnB,KAAA,EAAAmB,EAAAlB,KAAA,EAI1CtB,GAAclC,KAAKiD,EAAKqB,EAAaC,GAAQ,KAAD,EAAvD,OAAuDC,EAAAE,EAAAhB,KAA3D9O,EAAI4P,EAAJ5P,KAAI8P,EAAAf,OAAA,SACL/O,GAAI,OAAA8P,EAAAnB,KAAA,EAAAmB,EAAAd,GAAAc,EAAA,SAEXvB,EAAUU,GAAca,EAAAd,IAAM,eAAAc,EAAAf,OAAA,SAEzBR,GAAO,yBAAAuB,EAAAZ,OAAA,GAAAO,EAAA,kBACf,gBAVWO,EAAAC,GAAA,OAAAT,EAAAH,MAAA,KAAAC,UAAA,KAYNY,GAAK,eAAAC,EAAAlC,YAAAC,cAAAC,MAAG,SAAAiC,EAAO/B,EAAaqB,GAAgB,IAAAC,EAAApB,EAAA8B,EAAArQ,EAAAsQ,EAAAhB,UAAA,OAAApB,cAAAO,MAAA,SAAA8B,GAAA,cAAAA,EAAA5B,KAAA4B,EAAA3B,MAAA,OAAkB,OAAhBe,EAAWW,EAAAjQ,OAAA,QAAA0P,IAAAO,EAAA,GAAAA,EAAA,GAAG,CAAC,EAACC,EAAA5B,KAAA,EAAA4B,EAAA3B,KAAA,EAIzCtB,GAAckD,IAAInC,EAAKqB,EAAaC,GAAQ,KAAD,EAAtD,OAAsDU,EAAAE,EAAAzB,KAA1D9O,EAAIqQ,EAAJrQ,KAAIuQ,EAAAxB,OAAA,SACL/O,GAAI,OAAAuQ,EAAA5B,KAAA,EAAA4B,EAAAvB,GAAAuB,EAAA,SAEXhC,EAAUU,GAAcsB,EAAAvB,IAAM,eAAAuB,EAAAxB,OAAA,SAEzBR,GAAO,yBAAAgC,EAAArB,OAAA,GAAAkB,EAAA,kBACf,gBAVUK,EAAAC,GAAA,OAAAP,EAAAd,MAAA,KAAAC,UAAA,KEuCEqB,IF1BFxF,IE0BsB,SAACyF,GAChC,OAAe,OAARA,QAAwBb,IAARa,GAAqBA,IAAQ,CAAC,CACvD,GA0HaC,GACX,SAACvH,GAAQ,OACP,SAACwH,GAAY,IAAEC,EAAQzB,UAAAjP,OAAA,QAAA0P,IAAAT,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAC1BwB,EAAME,QAAO,SAACC,EAAmBC,GAC/B,IAAMvR,EAAQuR,EAAI5H,GAElB,OADA2H,EAAkBtR,IAAUsR,EAAkBtR,IAAU,IAAIqK,OAAOkH,GAC5DD,CACT,GAAGF,EAAU,CAAD,ECjSLI,IDmSgBN,GAAQ,kBACCA,GAAQ,oBCnS7B,uDADJM,GAaE,0DAbFA,IAciB,6BAA6BnH,OACvDoH,OAAOnH,sLAAYoH,qCACnB,kBAyCa,yDAzDJF,GA+FT,4DA/FSA,GA6GM,0DC1GNlC,IDwHT,oDAAoDjF,OAClDgC,GAAae,mBAAmBuE,WAChC,eC1HwB,SAACC,GAC7B,IFsEuBxR,EEtEnByR,EAA4B,CAC9BC,aAAc,GACdzR,KAAM,CAAC,EACP0R,UAAU,GAEZ,IAAK,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACIC,EAAqB,QAAfN,EAAGJ,EAAIhG,gBAAQ,IAAAoG,OAAA,EAAZA,EAAc3R,KAC7B,IACG2Q,GAAkBsB,IACK,QADEL,EAC1BK,EAAOC,yBAAiB,IAAAN,GAAxBA,EAA0BN,WAAWa,SAAS,0BAE9CX,EAAWlJ,wBAAA,GACNkJ,GAAW,IACdC,aAAc1F,SAEX,KACJ4E,GAAkBsB,IACP,QADcJ,EAC1BI,EAAOG,aAAK,IAAAP,GAAZA,EAAcP,WAAWa,SAAS,iBAOlC,MALAX,EAAWlJ,wBAAA,GACNkJ,GAAW,IACdC,aAAc1F,GACd/L,KAAMmR,KAEF,IAAIkB,MAAMjB,OAAOI,IAClB,IACJb,GAAkBsB,IACP,QADcH,EAC1BG,EAAOG,aAAK,IAAAN,GAAZA,EAAcR,WAAWa,SAAS,iBAOlC,MALAX,EAAWlJ,wBAAA,GACNkJ,GAAW,IACdC,aAAc1F,EACd/L,KAAMmR,KAEF,IAAIkB,MAAMjB,OAAOI,IAClB,GAAe,QAAfO,EAAIR,EAAIvN,eAAO,IAAA+N,GAAXA,EAAaI,SAAS,OAC/BX,EAAWlJ,wBAAA,GACNkJ,GAAW,IACdxR,KAAMmR,GACNM,aAAc1F,SAGX,GAAe,QAAfiG,EAAIT,EAAIvN,eAAO,IAAAgO,GAAXA,EAAaG,SAAS,OAC/BX,EAAWlJ,wBAAA,GACNkJ,GAAW,IACdC,aAAc1F,GACd/L,KAAM,+DAEH,GAAK2Q,GAAqB,OAAHY,QAAG,IAAHA,OAAG,EAAHA,EAAKhG,YFwBnB,kBAFKxL,EEtBuC,OAAHwR,QAAG,IAAHA,OAAG,EAAHA,EAAKhG,WFyB7D+G,MAAMC,QAAQxS,IACN,OAATA,QACSgQ,IAAThQ,GEJEyR,EAAWlJ,wBAAA,GACNkJ,GAAW,IACdC,aAAc1F,GACd/L,KAAMuR,EAAIvN,cA1B2D,CAGvE,IAHwE,IAADwO,EACnEC,EAAalB,EAAIhG,SAASvL,MAAQ,CAAC,EACnC0S,EAAmB,GACvBC,EAAA,EAAAC,EAA6BC,OAAOC,QAAQL,GAAWE,EAAAC,EAAAvS,OAAAsS,IAAE,CAApD,IAAAI,EAAAtO,YAAAmO,EAAAD,GAAA,GAAOK,EAAID,EAAA,GAAEE,EAAMF,EAAA,GACtBL,GAA6B,iBAATM,EAA0BC,EAAS,QAAU,EACnE,CAEEzB,EADEkB,EAAiBP,SAAS,uBACjB7J,wBAAA,GACNkJ,GAAW,IACdC,aAAc1F,GACd/L,KAAMmR,KAGG7I,wBAAA,GACNkJ,GAAW,IACdC,aAAc1F,EACd/L,KACE2Q,GAAkB+B,IACF,QADmBF,EACnCE,SAAgB,IAAAF,GAAhBA,EAAkBU,cAAcf,SAAS,eACrChB,GACAuB,GAEZ,CAMA,CAOF,CANE,MAAOnB,GACPC,EAAWlJ,wBAAA,GACNkJ,GAAW,IACdC,aAAc1F,KAEhBlH,QAAQC,IAAI,wCAAyCyM,EACvD,CACA,OAAOC,CACT,GC8Ea2B,GAAmB,mBACnBC,GAAgB,gBAChBC,GAAgB,gBAChBC,GAAa,aACbC,GAAS,SAETC,GAAc,cACdC,GAAgB,gB,uICqcdC,GAxlBC,WACd,IAAAhM,EAAkCnD,mBAAS,IAAGoD,EAAAlD,YAAAiD,EAAA,GAAvCiM,EAAShM,EAAA,GAAEiM,EAAYjM,EAAA,GAC9BkM,EAAkCtP,oBAAS,GAAMuP,EAAArP,YAAAoP,EAAA,GACjDE,GADgBD,EAAA,GAAcA,EAAA,GACNvP,oBAAS,IAAMyP,EAAAvP,YAAAsP,EAAA,GAAhCE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,EAA0B5P,qBAAU6P,EAAA3P,YAAA0P,EAAA,GACpCE,GADYD,EAAA,GAAUA,EAAA,GACQ7P,mBAAS,KAAG+P,EAAA7P,YAAA4P,EAAA,GAAnCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GACpBG,EAAS,GAKTC,EAAc,WAAH,OAASR,GAAQ,EAAO,EACnCS,EAAa,WAAH,OAAST,GAAQ,EAAM,EAEvCvP,qBAAU,WACiB,SAAAiQ,IAKxB,OALwBA,EAAA3G,YAAAC,cAAAC,MAAzB,SAAA0G,IAAA,IAAAC,EAAAC,EAAAR,EAAA,OAAArG,cAAAO,MAAA,SAAAuG,GAAA,cAAAA,EAAArG,KAAAqG,EAAApG,MAAA,cAAAoG,EAAApG,KAAA,EAC6BqG,MAAM7K,EAAUE,YAAY,KAAD,EAApC,OAAZwK,EAAYE,EAAAlG,KAAAkG,EAAApG,KAAA,EACSkG,EAAaI,OAAO,KAAD,EAAxCH,EAAYC,EAAAlG,KACZyF,EAAUQ,EAAaI,MAAMC,QAAO,SAAA1Q,GAAI,OAAqB,IAAjBA,EAAK2Q,OAAiB,IACxEb,EAAWD,GAAS,wBAAAS,EAAA9F,OAAA,GAAA2F,EAAA,KACrBD,EAAAvF,MAAA,KAAAC,UAAA,EANc,WACUsF,EAAAvF,MAAC,KAADC,UAAA,CAMzBgG,EACF,GAAG,IAEHf,EAAQ/R,SAAQ,SAACkC,GACf+P,EAAOc,KAAK7Q,EACd,IAEAG,QAAQC,IACN,4DACA2P,GAIF,IAAMe,EAAY,CAChB7O,QAAS,SAACC,EAAG6O,GACX5Q,QAAQC,IAAI,gBAAiB2Q,EAAIpQ,IACjCuO,EAAa6B,EAEf,GAoCEC,EAAe,WACnB,OACEpQ,eAACqQ,KAAK,CACJ1B,KAAMA,EACN2B,OAAQlB,EACRvP,UAAU,cACV0Q,iBAAiB,qBACjBC,gBAAgB,cAChB,kBAAgB,qCAAoC7Q,SAAA,CAEpDK,eAACqQ,KAAMI,OAAM,CAACC,WAAW,IAAG/Q,SAAA,CAC1BF,cAACkR,KAAM,CAACC,QAAQ,YAAYvP,QAAS+N,EAAYzP,SAAC,UAGlDK,eAACqQ,KAAMQ,MAAK,CAAAlR,SAAA,CACT0O,EAAUvN,WAAW,IAAEuN,EAAUyC,gBAGtCrR,cAAC4Q,KAAMU,KAAI,CAAApR,SACTF,cAACQ,IAAS,CAACC,OAAK,EAAAP,SACdK,eAAC2B,IAAG,CAAAhC,SAAA,CACFF,cAACmC,IAAG,CAAC/B,UAAU,0BAA0BgC,GAAG,IAAGlC,SAC7CK,eAACgR,IAAI,CAACnR,UAAU,sBAAqBF,SAAA,CACnCF,cAACkC,IAAG,CAAC9B,UAAU,yBAAwBF,SACrCF,cAACmC,IAAG,CAAC/B,UAAU,aAAaoR,GAAG,IAAGtR,SAChCF,cAAA,OAAKI,UAAU,qBAAoBF,SACjCF,cAAA,KAAG2B,KAAK,SAASC,QAAS,SAACC,GAAC,OAAKA,EAAE6B,gBAAgB,EAACxD,SAClDF,cAAA,OACEmB,IAAI,MACJf,UAAU,iBACVgB,IACE/K,EAAQ,KACLuD,kBAOfoG,cAACyR,KAAU,CAACrR,UAAU,iDAAgDF,SACpEK,eAAA,OAAKH,UAAU,iCAAgCF,SAAA,CAC7CF,cAACkR,KAAM,CACL9Q,UAAU,OACV5F,MAAM,OACNmH,KAAK,SACLC,QAAS,SAACC,GAAC,OAAKA,EAAE6B,gBAAgB,EAClCgO,KAAK,OAIP1R,cAACkR,KAAM,CACL9Q,UAAU,cACV5F,MAAM,UACNmH,KAAK,SACLC,QAAS,SAACC,GAAC,OAAKA,EAAE6B,gBAAgB,EAClCgO,KAAK,YAMXnR,eAACoR,IAAQ,CAACvR,UAAU,eAAcF,SAAA,CAChCF,cAACkC,IAAG,CAAAhC,SACFF,cAAA,OAAKI,UAAU,MAAKF,SAClBK,eAAA,OAAKH,UAAU,2DAA0DF,SAAA,CACvEK,eAAA,OAAAL,SAAA,CACEF,cAAA,QAAMI,UAAU,UAASF,SAAC,OAC1BF,cAAA,QAAMI,UAAU,cAAaF,SAAC,kBAEhCK,eAAA,OAAAL,SAAA,CACEF,cAAA,QAAMI,UAAU,UAASF,SAAC,OAC1BF,cAAA,QAAMI,UAAU,cAAaF,SAAC,yBAEhCK,eAAA,OAAAL,SAAA,CACEF,cAAA,QAAMI,UAAU,UAASF,SAAC,OAC1BF,cAAA,QAAMI,UAAU,cAAaF,SAAC,wCAOtCK,eAAA,OAAKH,UAAU,cAAaF,SAAA,CAC1BK,eAAA,MAAAL,SAAA,CACG0O,EAAUvN,WAAW,IAAEuN,EAAUyC,UAClCrR,cAAA,QAAMI,UAAU,yBAElBG,eAAA,OAAKH,UAAU,qBAAoBF,SAAA,CACjCF,cAAA,KAAGI,UAAU,yBAAyB,mBACrB,IACjBJ,cAAA,KAAAE,SAAI0O,EAAUgD,gBAAgBC,aAGhC7R,cAAA,MAAII,UAAU,SACdG,eAAA,KAAAL,SAAA,CACG0O,EAAUvN,WAAW,wBAAiB,IACtCuN,EAAUkD,UAAU,iBAAe,IACpC9R,cAAA,KAAAE,SAAI0O,EAAUgD,gBAAgBG,0BAMxC/R,cAACmC,IAAG,CAAC/B,UAAU,aAAagC,GAAG,IAAGlC,SAChCK,eAACgR,IAAI,CAACnR,UAAU,sBAAqBF,SAAA,CACnCF,cAACyR,KAAU,CAACrR,UAAU,oBAAmBF,SACvCK,eAAC2B,IAAG,CAAC9B,UAAU,qBAAoBF,SAAA,CACjCF,cAACmC,IAAG,CAAC0B,GAAG,IAAG3D,SACTF,cAAA,MAAII,UAAU,OAAMF,SAAC,iBAEvBF,cAACmC,IAAG,CAAC/B,UAAU,aAAayD,GAAG,IAAG3D,SAChCF,cAACkR,KAAM,CACL1W,MAAM,UACNmH,KAAK,SACLC,QAAS,SAACC,GAAC,OAAKA,EAAE6B,gBAAgB,EAClCgO,KAAK,KAAIxR,SACV,oBAMPF,cAAC2R,IAAQ,CAAAzR,SACPK,eAACuD,IAAI,CAAA5D,SAAA,CACHF,cAAA,MAAII,UAAU,gCAA+BF,SAAC,qBAG9CK,eAAA,OAAKH,UAAU,UAASF,SAAA,CACtBK,eAAC2B,IAAG,CAAAhC,SAAA,CACFF,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,iBAAgB/R,SACzB,aAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAActD,EAAUvN,WACxBf,GAAG,iBACH2D,YAAY,WAEZZ,KAAK,cAIXrD,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,cAAa/R,SACtB,kBAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACVE,GAAG,cACH2D,YAAa2K,EAAU5P,MAEvBqE,KAAK,kBAKb9C,eAAC2B,IAAG,CAAAhC,SAAA,CACFF,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,mBAAkB/R,SAC3B,eAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAActD,EAAUvN,WACxBf,GAAG,mBACH2D,YAAY,aAEZZ,KAAK,cAIXrD,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,kBAAiB/R,SAC1B,cAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAActD,EAAUyC,UACxB/Q,GAAG,kBACH2D,YAAY,YAEZZ,KAAK,oBAMfrD,cAAA,MAAII,UAAU,SACdJ,cAAA,MAAII,UAAU,gCAA+BF,SAAC,wBAG9CK,eAAA,OAAKH,UAAU,UAASF,SAAA,CACtBF,cAACkC,IAAG,CAAAhC,SACFF,cAACmC,IAAG,CAACgQ,GAAG,KAAIjS,SACVK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,gBAAe/R,SACxB,YAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAActD,EAAUgD,gBAAgBC,QACxCvR,GAAG,gBACH2D,YAAY,kBAEZZ,KAAK,gBAKbrD,cAACkC,IAAG,CAAAhC,SACFF,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,aAAY/R,SACrB,iBAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAActD,EAAUwD,OACxB9R,GAAG,aACH2D,YAAY,eAEZZ,KAAK,mBAMfrD,cAAA,MAAII,UAAU,SACdJ,cAAA,MAAII,UAAU,gCAA+BF,SAAC,wBAG9CK,eAAA,OAAKH,UAAU,UAASF,SAAA,CACtBF,cAACkC,IAAG,CAAAhC,SACFF,cAACmC,IAAG,CAACgQ,GAAG,KAAIjS,SACVK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,gBAAe/R,SACxB,iBAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAActD,EAAUgD,gBAAgBC,QACxCvR,GAAG,gBACH2D,YAAY,eAEZZ,KAAK,gBAKb9C,eAAC2B,IAAG,CAAAhC,SAAA,CACFF,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,aAAY/R,SACrB,iBAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAActD,EAAUgD,gBAAgBC,QACxCvR,GAAG,aACH2D,YAAY,eAEZZ,KAAK,cAIXrD,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,gBAAe/R,SACxB,eAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aACEtD,EAAUgD,gBAAgBS,WAE5B/R,GAAG,gBACH2D,YAAY,aAEZZ,KAAK,cAIXrD,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,gBAAe/R,SACxB,oBAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACVE,GAAG,oBACH4R,aAActD,EAAUgD,gBAAgBG,UACxC9N,YAAY,kBAEZZ,KAAK,sBAMfrD,cAAA,MAAII,UAAU,SACdJ,cAAA,MAAII,UAAU,gCAA+BF,SAAC,oBAG9CK,eAAA,OAAKH,UAAU,UAASF,SAAA,CACtBF,cAACkC,IAAG,CAAAhC,SACFF,cAACmC,IAAG,CAACgQ,GAAG,KAAIjS,SACVK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,gBAAe/R,SACxB,wBAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aACEtD,EAAU0D,gBAAgBC,iBAE5BjS,GAAG,gBACH2D,YAAY,sBAEZZ,KAAK,gBAKb9C,eAAC2B,IAAG,CAAAhC,SAAA,CACFF,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,aAAY/R,SACrB,mBAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aACEtD,EAAU0D,gBAAgBE,eAE5BlS,GAAG,aACH2D,YAAY,iBAEZZ,KAAK,cAIXrD,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,gBAAe/R,SACxB,cAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAActD,EAAU0D,gBAAgBG,UACxCnS,GAAG,gBACH2D,YAAY,YAEZZ,KAAK,qCAa7BrD,cAAC4Q,KAAM3O,OAAM,CAAA/B,SAIXF,cAACkR,KAAM,CAACC,QAAQ,YAAYvP,QAAS+N,EAAYzP,SAAC,cAM1D,EA+BQwS,EAAU,CACd,CAAEC,UAAW,aAAcC,KAAM,qBACjC,CAAED,UAAW,YAAaC,KAAM,oBAChC,CAAED,UAAW,QAASC,KAAM,eAAiBhb,MAAO,QACpDib,QAAS,iBACT,CAAEF,UAAW,SAAUC,KAAM,gBAC7B,CAAED,UAAW,4BAA6BC,KAAM,kBAQhD,CACEA,KAAM,UACNE,UAAW,SAACC,EAAarC,GAAG,OAC1BnQ,eAACyS,KAAc,CAACC,MAAM,UAAS/S,SAAA,CAC7BF,cAACkT,KAASC,KAAI,CAACvR,QAAS,kBAAMgO,GAAe,EAAC1P,SAAC,SAC/CF,cAACkT,KAASC,KAAI,CAACvR,QAAS,kBA/CV,SAACtB,GAEvB,IAAMqK,EAAc,CAClBrK,GAAIA,GAGN4P,MAAM,2CAA4C,CAChDkD,OAAQ,SACRzK,QAAS,CACP,eAAgB,oBAElB0K,KAAMvU,KAAKe,UAAU8K,KAEpBpE,MAAK,SAAAC,GACJ,GAAIA,EAAS8M,GAAI,CACf,IAAMC,EAAgB7D,EAAOW,QAAO,SAAAX,GAAM,OAAIA,EAAOpP,KAAOA,CAAE,IAC9DuO,EAAa0E,GACbxR,OAAOC,SAASwR,QAClB,MACE1T,QAAQuN,MAAM,2BAA4B7G,EAASiN,WAEvD,IACCC,OAAM,SAAArG,GACLvN,QAAQuN,MAAM,2BAA4BA,EAC5C,GACJ,CAsBwCsG,CAAgBjD,EAAIkD,IAAI,EAAC1T,SAAC,aACzC,IAyBvB,OACEK,eAAAN,WAAA,CAAAC,SAAA,CACEF,cAACgR,GAAM,IACPzQ,eAACC,IAAS,CAACJ,UAAU,QAAQK,OAAK,EAAAP,SAAA,CAChCF,cAACyR,KAAU,CAACrR,UAAU,WAAUF,SAC9BF,cAAA,MAAII,UAAU,OAAMF,SAAC,mBAEvBF,cAACkC,IAAG,CAAAhC,SACFF,cAAA,OAAKI,UAAU,MAAKF,SAClBK,eAACgR,IAAI,CAACnR,UAAU,SAAQF,SAAA,CACtBF,cAACyR,KAAU,CAACrR,UAAU,WAAUF,SAC9BF,cAAA,MAAII,UAAU,OAAMF,SAAC,mBAGvBF,cAAC6T,KAAc,CACbC,SAAS,QACT7Y,KAAMyU,EACNgD,QAASA,EACTqB,WAAYC,OACZvD,UAAWA,WAKlBvB,EAAOlP,cAAC2Q,EAAY,IAAM,UAInC,ECzceK,GA5JA,WAGb,IAAArO,EAA8BnD,mBAAS,IAAGoD,EAAAlD,YAAAiD,EAAA,GAAnC6M,EAAO5M,EAAA,GAAE6M,EAAU7M,EAAA,GAC1BkM,EAA4BtP,mBAAS,IAAGuP,EAAArP,YAAAoP,EAAA,GAAjCmF,EAAMlF,EAAA,GAAEmF,EAASnF,EAAA,GAkBxB,OAhBFnP,qBAAU,WACiB,SAAAiQ,IASxB,OATwBA,EAAA3G,YAAAC,cAAAC,MAAzB,SAAA0G,IAAA,IAAAC,EAAAC,EAAAR,EAAAyE,EAAA,OAAA9K,cAAAO,MAAA,SAAAuG,GAAA,cAAAA,EAAArG,KAAAqG,EAAApG,MAAA,cAAAoG,EAAApG,KAAA,EAC6BqG,MAAM7K,EAAUE,YAAY,KAAD,EAApC,OAAZwK,EAAYE,EAAAlG,KAAAkG,EAAApG,KAAA,EACSkG,EAAaI,OAAO,KAAD,EAAxCH,EAAYC,EAAAlG,KACZyF,EAAUQ,EAAaI,MAAMC,QAAO,SAAA1Q,GAAI,OAAqB,IAAjBA,EAAK2Q,OAAiB,IAClE2D,EAASjE,EAAaI,MAAMC,QAAO,SAAA1Q,GAAI,OAAqB,IAAjBA,EAAK2Q,OAAgB,IAGtEb,EAAWD,GACX0E,EAAUD,GAAQ,yBAAAhE,EAAA9F,OAAA,GAAA2F,EAAA,KACnBD,EAAAvF,MAAA,KAAAC,UAAA,EAVc,WACUsF,EAAAvF,MAAC,KAADC,UAAA,CAWzBgG,EACF,GAAG,IACHzQ,QAAQC,IAAI,uBAAwByP,EAAQ2E,OAC5CrU,QAAQC,IAAI,sBAAuBkU,EAAOE,OAEtCnU,cAAAC,WAAA,CAAAC,SACEF,cAAA,OAAKI,UAAU,4CAA2CF,SACxDF,cAACQ,IAAS,CAACC,OAAK,EAAAP,SACdF,cAAA,OAAKI,UAAU,cAAaF,SAE1BK,eAAC2B,IAAG,CAAAhC,SAAA,CACFF,cAACmC,IAAG,CAACqP,GAAG,IAAIpP,GAAG,IAAGlC,SAChBF,cAACuR,IAAI,CAACnR,UAAU,0BAAyBF,SACvCK,eAACoR,IAAQ,CAAAzR,SAAA,CACPK,eAAC2B,IAAG,CAAAhC,SAAA,CACFK,eAAA,OAAKH,UAAU,MAAKF,SAAA,CAClBF,cAACoU,IAAS,CACR3S,IAAI,KACJrB,UAAU,iCAAgCF,SAC3C,kBAGDF,cAAA,QAAMI,UAAU,2BAA0BF,SACvCsP,EAAQlU,YAGb0E,cAACmC,IAAG,CAAC/B,UAAU,WAAUF,SACvBF,cAAA,OAAKI,UAAU,6DAA4DF,SACzEF,cAAA,KAAGI,UAAU,4BAInBG,eAAA,KAAGH,UAAU,+BAA8BF,SAAA,CACzCK,eAAA,QAAMH,UAAU,oBAAmBF,SAAA,CACjCF,cAAA,KAAGI,UAAU,mBAAmB,QAC1B,IACRJ,cAAA,QAAMI,UAAU,cAAaF,SAAC,+BAKtCF,cAACmC,IAAG,CAACqP,GAAG,IAAIpP,GAAG,IAAGlC,SAChBF,cAACuR,IAAI,CAACnR,UAAU,0BAAyBF,SACvCK,eAACoR,IAAQ,CAAAzR,SAAA,CACPK,eAAC2B,IAAG,CAAAhC,SAAA,CACFK,eAAA,OAAKH,UAAU,MAAKF,SAAA,CAClBF,cAACoU,IAAS,CACR3S,IAAI,KACJrB,UAAU,iCAAgCF,SAC3C,gBAGDF,cAAA,QAAMI,UAAU,2BAA0BF,SAErC+T,EAAO3Y,YAGd0E,cAACmC,IAAG,CAAC/B,UAAU,WAAUF,SACvBF,cAAA,OAAKI,UAAU,8DAA6DF,SAC1EF,cAAA,KAAGI,UAAU,4BAInBG,eAAA,KAAGH,UAAU,+BAA8BF,SAAA,CACzCK,eAAA,QAAMH,UAAU,mBAAkBF,SAAA,CAChCF,cAAA,KAAGI,UAAU,sBAAsB,QAC7B,IACRJ,cAAA,QAAMI,UAAU,cAAaF,SAAC,8BAKvCF,cAACmC,IAAG,CAACqP,GAAG,IAAIpP,GAAG,IAAGlC,SACfF,cAACuR,IAAI,CAACnR,UAAU,0BAAyBF,SACvCK,eAACoR,IAAQ,CAAAzR,SAAA,CACPK,eAAC2B,IAAG,CAAAhC,SAAA,CACFK,eAAA,OAAKH,UAAU,MAAKF,SAAA,CAClBF,cAACoU,IAAS,CACR3S,IAAI,KACJrB,UAAU,iCAAgCF,SAC3C,wBAGDF,cAAA,QAAMI,UAAU,2BAA0BF,SACzCsP,EAAQlU,YAGX0E,cAACmC,IAAG,CAAC/B,UAAU,WAAUF,SACvBF,cAAA,OAAKI,UAAU,6DAA4DF,SACzEF,cAAA,KAAGI,UAAU,wBAInBG,eAAA,KAAGH,UAAU,+BAA8BF,SAAA,CACzCK,eAAA,QAAMH,UAAU,oBAAmBF,SAAA,CACjCF,cAAA,KAAGI,UAAU,sBAAsB,YAC7B,IACRJ,cAAA,QAAMI,UAAU,cAAaF,SAAC,8BAKrCF,cAACmC,IAAG,CAACqP,GAAG,IAAIpP,GAAG,IAAGlC,SACjBF,cAACuR,IAAI,CAACnR,UAAU,0BAAyBF,SACvCK,eAACoR,IAAQ,CAAAzR,SAAA,CACPK,eAAC2B,IAAG,CAAAhC,SAAA,CACFK,eAAA,OAAKH,UAAU,MAAKF,SAAA,CAClBF,cAACoU,IAAS,CACR3S,IAAI,KACJrB,UAAU,iCAAgCF,SAC3C,aAGDF,cAAA,QAAMI,UAAU,2BAA0BF,SAAC,cAE7CF,cAACmC,IAAG,CAAC/B,UAAU,WAAUF,SACvBF,cAAA,OAAKI,UAAU,2DAA0DF,SACvEF,cAAA,KAAGI,UAAU,0BAInBG,eAAA,KAAGH,UAAU,+BAA8BF,SAAA,CACzCK,eAAA,QAAMH,UAAU,oBAAmBF,SAAA,CACjCF,cAAA,KAAGI,UAAU,oBAAoB,UAC3B,IACRJ,cAAA,QAAMI,UAAU,cAAaF,SAAC,yCAWpD,ECiPemU,GA9WD,SAAChV,GAIb,IAAAsD,EAAkCnD,mBAAS,GAAEoD,EAAAlD,YAAAiD,EAAA,GAE7CmM,GAFgBlM,EAAA,GAAcA,EAAA,GAEoBpD,mBAAS,UAAQuP,EAAArP,YAAAoP,EAAA,GAA3CC,EAAA,GAAsBA,EAAA,GAI1ChN,OAAO3L,OACTkI,uBAAalI,IAAOyF,0BAiFtB,OACEmE,cAAAC,WAAA,CAAAC,SACEF,cAACgR,GAAM,KA8Qb,E,UC/YE,SAAStS,KACP,IAAMC,EAAeC,aAAaC,QAAQ,QAC1C,OAAKF,EAOEG,KAAKC,MAAMJ,GANT,CACLK,MAAO,GACPC,QAAS,GACTC,KAAM,GACNC,UAAW,GAGjB,CAKF,IAqDemV,GArDI,WACb,IAAAhV,EAAwBC,IAAMC,SAASd,IAAce,EAAAC,YAAAJ,EAAA,GAA9CK,EAAIF,EAAA,GAASA,EAAA,GASpB,OAPAF,IAAMK,WAAU,WACdhB,aAAaC,QAAQ,OAAQC,KAAKe,UAAUF,GAC9C,GAAG,CAACA,IAEJG,QAAQC,IAAI,YAAaJ,GAGpBA,EAIPK,cAAAC,WAAA,CAAAC,SACEK,eAAA,OACEH,UAAU,qDACVmU,MAAO,CACLC,UAAW,QACXC,gBACE,OACApe,EAAQ,IAAyCuD,QACjD,IACF8a,eAAgB,QAChBC,mBAAoB,cACpBzU,SAAA,CAGFF,cAAA,QAAMI,UAAU,uCAEhBJ,cAACQ,IAAS,CAACJ,UAAU,4BAA4BK,OAAK,EAAAP,SACpDF,cAACkC,IAAG,CAAAhC,SACFK,eAAC4B,IAAG,CAACqP,GAAG,IAAIW,GAAG,KAAIjS,SAAA,CACjBK,eAAA,MAAIH,UAAU,uBAAsBF,SAAA,CAAC,SAAOP,EAAK0B,cACjDrB,cAAA,KAAGI,UAAU,uBAAsBF,SAAC,8HAIpCF,cAACkR,KAAM,CACL1W,MAAM,OACNmH,KAAK,SACLC,QAAS,SAACC,GAAC,OAAKA,EAAE6B,gBAAgB,EAACxD,SACpC,6BA/BAF,cAAC4U,IAAQ,CAACjU,GAAG,UAwC5B,ECtDE,SAASjC,KACP,IAAMC,EAAeC,aAAaC,QAAQ,QAC1C,OAAKF,EAOEG,KAAKC,MAAMJ,GANT,CACLK,MAAO,GACPC,QAAS,GACTC,KAAM,GACNC,UAAW,GAGjB,CAEA,IAoZa0V,GApZG,WACd,IAAAvV,EAAwBC,IAAMC,SAASd,IAAce,EAAAC,YAAAJ,EAAA,GAA9CK,EAAIF,EAAA,GAASA,EAAA,GASpB,OAPAF,IAAMK,WAAU,WACdhB,aAAaC,QAAQ,OAAQC,KAAKe,UAAUF,GAC9C,GAAG,CAACA,IAEJG,QAAQC,IAAI,YAAaJ,GAGpBA,EAIHY,eAAAN,WAAA,CAAAC,SAAA,CACEF,cAACsU,GAAU,IAEXtU,cAACQ,IAAS,CAACJ,UAAU,QAAQK,OAAK,EAAAP,SAChCK,eAAC2B,IAAG,CAAAhC,SAAA,CACFF,cAACmC,IAAG,CAAC/B,UAAU,0BAA0BgC,GAAG,IAAGlC,SAC7CK,eAACgR,IAAI,CAACnR,UAAU,sBAAqBF,SAAA,CACnCF,cAACkC,IAAG,CAAC9B,UAAU,yBAAwBF,SACrCF,cAACmC,IAAG,CAAC/B,UAAU,aAAaoR,GAAG,IAAGtR,SAChCF,cAAA,OAAKI,UAAU,qBAAoBF,SACjCF,cAAA,KAAG2B,KAAK,SAASC,QAAS,SAACC,GAAC,OAAKA,EAAE6B,gBAAgB,EAACxD,SAClDF,cAAA,OACEmB,IAAI,MACJf,UAAU,iBACVgB,IACE/K,EAAQ,KACLuD,kBAOfoG,cAACyR,KAAU,CAACrR,UAAU,iDAAgDF,SACpEK,eAAA,OAAKH,UAAU,iCAAgCF,SAAA,CAC7CF,cAACkR,KAAM,CACL9Q,UAAU,OACV5F,MAAM,OACNmH,KAAK,SACLC,QAAS,SAACC,GAAC,OAAKA,EAAE6B,gBAAgB,EAClCgO,KAAK,OAIP1R,cAACkR,KAAM,CACL9Q,UAAU,cACV5F,MAAM,UACNmH,KAAK,SACLC,QAAS,SAACC,GAAC,OAAKA,EAAE6B,gBAAgB,EAClCgO,KAAK,YAMXnR,eAACoR,IAAQ,CAACvR,UAAU,eAAcF,SAAA,CAChCF,cAACkC,IAAG,CAAAhC,SACFF,cAAA,OAAKI,UAAU,MAAKF,SAClBK,eAAA,OAAKH,UAAU,2DAA0DF,SAAA,CACvEK,eAAA,OAAAL,SAAA,CACEF,cAAA,QAAMI,UAAU,UAASF,SAAC,OAC1BF,cAAA,QAAMI,UAAU,cAAaF,SAAC,kBAEhCK,eAAA,OAAAL,SAAA,CACEF,cAAA,QAAMI,UAAU,UAASF,SAAC,OAC1BF,cAAA,QAAMI,UAAU,cAAaF,SAAC,yBAEhCK,eAAA,OAAAL,SAAA,CACEF,cAAA,QAAMI,UAAU,UAASF,SAAC,OAC1BF,cAAA,QAAMI,UAAU,cAAaF,SAAC,wCAKtCK,eAAA,OAAKH,UAAU,cAAaF,SAAA,CAC1BK,eAAA,MAAAL,SAAA,CACGP,EAAK0B,WAAW,IAAE1B,EAAK0R,UACxBrR,cAAA,QAAMI,UAAU,yBAElBG,eAAA,OAAKH,UAAU,qBAAoBF,SAAA,CACjCF,cAAA,KAAGI,UAAU,yBAAyB,oBACrBJ,cAAA,KAAAE,SAAIP,EAAKiS,gBAAgBC,aAU5C7R,cAAA,MAAII,UAAU,SACdG,eAAA,KAAAL,SAAA,CACGP,EAAK0B,WAAW,yBAAkB1B,EAAKmS,UAAU,kBAC1C9R,cAAA,KAAAE,SAAIP,EAAKiS,gBAAgBG,0BAW3C/R,cAACmC,IAAG,CAAC/B,UAAU,aAAagC,GAAG,IAAGlC,SAChCK,eAACgR,IAAI,CAACnR,UAAU,sBAAqBF,SAAA,CACnCF,cAACyR,KAAU,CAACrR,UAAU,oBAAmBF,SACvCK,eAAC2B,IAAG,CAAC9B,UAAU,qBAAoBF,SAAA,CACjCF,cAACmC,IAAG,CAAC0B,GAAG,IAAG3D,SACTF,cAAA,MAAII,UAAU,OAAMF,SAAC,iBAEvBF,cAACmC,IAAG,CAAC/B,UAAU,aAAayD,GAAG,IAAG3D,SAChCF,cAACkR,KAAM,CACL1W,MAAM,UACNmH,KAAK,SACLC,QAAS,SAACC,GAAC,OAAKA,EAAE6B,gBAAgB,EAClCgO,KAAK,KAAIxR,SACV,oBAMPF,cAAC2R,IAAQ,CAAAzR,SACPK,eAACuD,IAAI,CAAA5D,SAAA,CACHF,cAAA,MAAII,UAAU,gCAA+BF,SAAC,qBAG9CK,eAAA,OAAKH,UAAU,UAASF,SAAA,CACtBK,eAAC2B,IAAG,CAAAhC,SAAA,CACFF,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,iBAAgB/R,SACzB,aAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAAcvS,EAAK0B,WACnBf,GAAG,iBACH2D,YAAY,WACZZ,KAAK,cAIXrD,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,cAAa/R,SACtB,kBAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACVE,GAAG,cACH2D,YAAatE,EAAKX,MAClBqE,KAAK,kBAKb9C,eAAC2B,IAAG,CAAAhC,SAAA,CACFF,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,mBAAkB/R,SAC3B,eAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAAcvS,EAAK0B,WACnBf,GAAG,mBACH2D,YAAY,aACZZ,KAAK,cAIXrD,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,kBAAiB/R,SAC1B,cAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAAcvS,EAAK0R,UACnB/Q,GAAG,kBACH2D,YAAY,YACZZ,KAAK,oBAMfrD,cAAA,MAAII,UAAU,SAEdJ,cAAA,MAAII,UAAU,gCAA+BF,SAAC,wBAG9CK,eAAA,OAAKH,UAAU,UAASF,SAAA,CACtBF,cAACkC,IAAG,CAAAhC,SACFF,cAACmC,IAAG,CAACgQ,GAAG,KAAIjS,SACVK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,gBAAe/R,SACxB,YAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAAcvS,EAAKiS,gBAAgBC,QACnCvR,GAAG,gBACH2D,YAAY,kBACZZ,KAAK,gBAKbrD,cAACkC,IAAG,CAAAhC,SACFF,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,aAAY/R,SACrB,iBAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAAcvS,EAAKyS,OACnB9R,GAAG,aACH2D,YAAY,eACZZ,KAAK,mBAMfrD,cAAA,MAAII,UAAU,SAEdJ,cAAA,MAAII,UAAU,gCAA+BF,SAAC,wBAG9CK,eAAA,OAAKH,UAAU,UAASF,SAAA,CACtBF,cAACkC,IAAG,CAAAhC,SACFF,cAACmC,IAAG,CAACgQ,GAAG,KAAIjS,SACVK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,gBAAe/R,SACxB,iBAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAAcvS,EAAKiS,gBAAgBC,QACnCvR,GAAG,gBACH2D,YAAY,eACZZ,KAAK,gBAKb9C,eAAC2B,IAAG,CAAAhC,SAAA,CACFF,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,aAAY/R,SACrB,iBAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAAcvS,EAAKiS,gBAAgBC,QACnCvR,GAAG,aACH2D,YAAY,eACZZ,KAAK,cAIXrD,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,gBAAe/R,SACxB,eAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAAcvS,EAAKiS,gBAAgBS,WACnC/R,GAAG,gBACH2D,YAAY,aACZZ,KAAK,cAIXrD,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,gBAAe/R,SACxB,oBAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACVE,GAAG,oBACH4R,aAAcvS,EAAKiS,gBAAgBG,UACnC9N,YAAY,kBACZZ,KAAK,sBAMfrD,cAAA,MAAII,UAAU,SAEdJ,cAAA,MAAII,UAAU,gCAA+BF,SAAC,oBAG9CK,eAAA,OAAKH,UAAU,UAASF,SAAA,CACtBF,cAACkC,IAAG,CAAAhC,SACFF,cAACmC,IAAG,CAACgQ,GAAG,KAAIjS,SACVK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,gBAAe/R,SACxB,wBAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aACEvS,EAAK2S,gBAAgBC,iBAEvBjS,GAAG,gBACH2D,YAAY,sBACZZ,KAAK,gBAKb9C,eAAC2B,IAAG,CAAAhC,SAAA,CACFF,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,aAAY/R,SACrB,mBAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAAcvS,EAAK2S,gBAAgBE,eACnClS,GAAG,aACH2D,YAAY,iBACZZ,KAAK,cAIXrD,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,gBAAe/R,SACxB,cAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAAcvS,EAAK2S,gBAAgBG,UACnCnS,GAAG,gBACH2D,YAAY,YACZZ,KAAK,sCAzXtBrD,cAAC4U,IAAQ,CAACjU,GAAG,UAuYxB,E,UC7NamU,OA5Mf,WACE,IAAAnS,EAAwCnD,mBAAS,MAAKoD,EAAAlD,YAAAiD,EAAA,GAA/CoS,EAAYnS,EAAA,GAAEoS,EAAepS,EAAA,GACpCkM,EAA8BtP,mBAAS,IAAGuP,EAAArP,YAAAoP,EAAA,GAAnCU,EAAOT,EAAA,GAAEU,EAAUV,EAAA,GACpBkG,EAAS,GAGfjG,EAA4BxP,qBAAUyP,EAAAvP,YAAAsP,EAAA,GAAvBkG,GAAFjG,EAAA,GAAWA,EAAA,IASxBrP,qBAAU,WACiB,SAAAiQ,IAQxB,OARwBA,EAAA3G,YAAAC,cAAAC,MAAzB,SAAA0G,IAAA,IAAAC,EAAAC,EAAAR,EAAA,OAAArG,cAAAO,MAAA,SAAAuG,GAAA,cAAAA,EAAArG,KAAAqG,EAAApG,MAAA,cAAAoG,EAAApG,KAAA,EAC6BqG,MAAM7K,EAAUE,YAAY,KAAD,EAApC,OAAZwK,EAAYE,EAAAlG,KAAAkG,EAAApG,KAAA,EACSkG,EAAaI,OAAO,KAAD,EAAxCH,EAAYC,EAAAlG,KACZyF,EAAUQ,EAAaI,MAAMC,QAAO,SAAA1Q,GAAI,OAAqB,IAAjBA,EAAK2Q,OAAiB,IACxEb,EAAWD,GACX1P,QAAQC,IAAI,6BAA8BiQ,EAAaI,OACvDtQ,QAAQC,IAAI,2BAA4BsF,EAAUE,YAClD2P,IAAY,yBAAAjF,EAAA9F,OAAA,GAAA2F,EAAA,KACbD,EAAAvF,MAAA,KAAAC,UAAA,EATc,WACUsF,EAAAvF,MAAC,KAADC,UAAA,CAUzBgG,EACF,GAAG,IAEHf,EAAQ/R,SAAQ,SAACkC,GACf,IAAMwV,EAEJnV,cAAA,OACEuU,MAAO,CACL3c,MAAO,OACPD,OAAQ,OACR6C,MAAO,OACPhC,gBAAiB,UACjB4c,OAAQ,iBACRC,aAAc,QACdC,qBAAsB,SACtBC,wBAAyB,SACzBC,UAAW,8BACXC,WAAY,4BACZvV,SAIFK,eAAA,OAAKgU,MAAO,CAAEhY,QAAS,sBAAuB2D,SAAA,CAC5CK,eAAA,MACEgU,MAAO,CACL/Z,MAAO,UACPkb,SAAU,QACVC,cAAe,OACfzV,SAAA,CAEDP,EAAK0B,WAAW,IAAE1B,EAAK0R,aAE1BrR,cAAA,MACEuU,MAAO,CAAE/Z,MAAO,UAAWkb,SAAU,QAASE,UAAW,SAAU1V,SAElEP,EAAKiS,gBAAgBiE,iBAExB7V,cAAA,SACAA,cAAA,KACEuU,MAAO,CACLuB,WAAY,2BACZV,OAAQ,QACRW,WAAY,MACZvb,MAAO,SACP0F,SAEDP,EAAKiS,gBAAgBC,UAExB7R,cAAA,KACEuU,MAAO,CACLuB,WAAY,2BACZV,OAAQ,QACRW,WAAY,MACZvb,MAAO,SACP0F,SAEDP,EAAKyS,SAERpS,cAAA,SACAA,cAAA,KACEuU,MAAO,CACLuB,WAAY,2BACZV,OAAQ,QACRW,WAAY,MACZvb,MAAO,SACP0F,SAEDP,EAAKX,QAERgB,cAAA,KACEuU,MAAO,CACLuB,WAAY,2BACZV,OAAQ,QACRW,WAAY,MACZvb,MAAO,SACP0F,SAEDP,EAAKqW,eAKdf,EAAOzE,KAAK,CACVlQ,GAAIX,EAAKiU,IACT1U,KAAMiW,EACNzY,SAAUiD,EAAKkS,SAEnB,IAEA/R,QAAQC,IACN,4DA/GoB,IAmHtB,IAAMkW,EAASlU,OAAOkU,OAElBC,EAAS,IAAID,EAAOE,KAAKC,OAAO,QAAS,SAS7C,OACE7V,eAAAN,WAAA,CAAAC,SAAA,CACEF,cAACgR,GAAM,IACPhR,cAACqW,KAAS,CACRC,OAZe,SAACjS,GACpB,IAAIkS,EAAS,IAAIN,EAAOE,KAAKK,aAC7BD,EAAOE,OAAOP,GACdjB,EAAOxX,SAAQ,SAAAiZ,GAAA,IAAGha,EAAQga,EAARha,SAAQ,OAAO6Z,EAAOE,OAAO/Z,EAAS,IACxD2H,EAAIsS,UAAUJ,EAEhB,EAOM3U,QAAS,kBAAMoT,EAAgB,KAAK,EACpC4B,kBAAmB,CAAEjf,OAAQ,SAC7ByC,QAAS,CACPyc,KAAM,GACNC,aAAa,EACbC,aAAa,EACbC,OAAQ,CACN,CACEC,YAAa,iBACbC,YAAa,mBACbC,QAAS,CAAC,CAAE3c,MAAO,aAErB,CACEyc,YAAa,YACbC,YAAa,MACbC,QAAS,CAAC,CAAE3c,MAAO,aAErB,CACEyc,YAAa,MACbC,YAAa,MACbC,QAAS,CAAC,CAAEC,WAAY,SAE1B,CACEH,YAAa,OACbC,YAAa,MACbC,QAAS,CAAC,CAAEE,YAAa,KAAO,CAAEC,UAAW,MAE/C,CACEL,YAAa,eACbC,YAAa,MACbC,QAAS,CAAC,CAAEC,WAAY,gBAE1B,CACEH,YAAa,gBACbC,YAAa,cACbC,QAAS,CAAC,CAAEC,WAAY,SAE1B,CACEH,YAAa,UACbC,YAAa,MACbC,QAAS,CAAC,CAAEC,WAAY,SAE1B,CACEH,YAAa,QACbC,YAAa,MACbC,QAAS,CAAC,CAAE3c,MAAO,WAAa,CAAE4c,WAAY,UAGlDlX,SAED+U,EAAO5Q,KAAI,SAAAkT,GAAA,IAAGjX,EAAEiX,EAAFjX,GAAIpB,EAAIqY,EAAJrY,KAAMxC,EAAQ6a,EAAR7a,SAAQ,OAC/BsD,cAACwX,KAAM,CAEL9a,SAAUA,EACVkF,QAAS,kBAtLQ,SAAC4N,GACtBA,IAAYuF,GAGhBC,EAAgBxF,EAClB,CAiLyBiI,CAAmBnX,EAAG,EAACJ,SAErC6U,IAAiBzU,EAChBN,cAAC0X,KAAU,CAACC,aAAc,kBAAM3C,EAAgB,KAAK,EAAC9U,SACpDF,cAAA,OAAAE,SAAMhB,MAEN,MARCoB,EASE,QAKnB,ECzME,SAAS5B,KACP,IAAMC,EAAeC,aAAaC,QAAQ,QAC1C,OAAKF,EAOEG,KAAKC,MAAMJ,GANT,CACLK,MAAO,GACPC,QAAS,GACTC,KAAM,GACNC,UAAW,GAGjB,CAKF,IAmCeyY,GAnCO,WAChB,IAAAtY,EAAwBC,IAAMC,SAASd,IAAce,EAAAC,YAAAJ,EAAA,GAA9CK,EAAIF,EAAA,GAASA,EAAA,GAMpB,OAJAF,IAAMK,WAAU,WACdhB,aAAaC,QAAQ,OAAQC,KAAKe,UAAUF,GAC9C,GAAG,CAACA,IAECA,EAIPK,cAAAC,WAAA,CAAAC,SACEK,eAAA,OACEH,UAAU,qDACVmU,MAAO,CACLC,UAAW,QACXC,gBACE,OACApe,EAAQ,IAAyCuD,QACjD,IACF8a,eAAgB,QAChBC,mBAAoB,cACpBzU,SAAA,CAGFF,cAAA,QAAMI,UAAU,uCAEhBJ,cAACQ,IAAS,CAACJ,UAAU,4BAA4BK,OAAK,SAnB/CT,cAAC4U,IAAQ,CAACjU,GAAG,UAyB5B,E,qBC3BekX,GA5BM,SAAHnB,GAAiD,IAA3CoB,EAAepB,EAAfoB,gBAAiBC,EAASrB,EAATqB,UAAWC,EAAOtB,EAAPsB,QAClD,OAAKF,EAKHvX,eAACqQ,KAAK,CAAC1B,KAAM6I,EAAWlH,OAAQmH,EAAQ9X,SAAA,CACtCF,cAAC4Q,KAAMI,OAAM,CAACiH,aAAW,EAAA/X,SACvBF,cAAC4Q,KAAMQ,MAAK,CAAAlR,SAAC,gCAEfK,eAACqQ,KAAMU,KAAI,CAAApR,SAAA,CACTK,eAAA,KAAAL,SAAA,CAAGF,cAAA,UAAAE,SAAQ,gBAAoB,IAAE4X,EAAgBxX,MACjDC,eAAA,KAAAL,SAAA,CAAGF,cAAA,UAAAE,SAAQ,yBAA6B,IAAE4X,EAAgBI,WAAWC,iBACrE5X,eAAA,KAAAL,SAAA,CAAGF,cAAA,UAAAE,SAAQ,oBAAwB,IAAE4X,EAAgBI,WAAW1F,kBAChEjS,eAAA,KAAAL,SAAA,CAAGF,cAAA,UAAAE,SAAQ,eAAmB,IAAE4X,EAAgBI,WAAWE,mBAC3D7X,eAAA,KAAAL,SAAA,CAAGF,cAAA,UAAAE,SAAQ,YAAgB,IAAE4X,EAAgBO,aAI/CrY,cAAC4Q,KAAM3O,OAAM,CAAA/B,SACXF,cAACkR,KAAM,CAACC,QAAQ,YAAYvP,QAASoW,EAAQ9X,SAAC,eAlB3C,IAwBX,ECqEeoY,GA3EU,SAAH5B,GAAkB,IAAZzb,EAAIyb,EAAJzb,KACxB0H,EAAwBnD,oBAAS,GAAMoD,EAAAlD,YAAAiD,EAAA,GACvCmM,GADWlM,EAAA,GAASA,EAAA,GAC0BpD,mBAAS,OAAKuP,EAAArP,YAAAoP,EAAA,GAArDgJ,EAAe/I,EAAA,GAAEwJ,EAAkBxJ,EAAA,GAC1CC,EAAkCxP,oBAAS,GAAMyP,EAAAvP,YAAAsP,EAAA,GAA1C+I,EAAS9I,EAAA,GAAEuJ,EAAYvJ,EAAA,GAc9BnP,QAAQC,IAAI+X,GAwBZ,OACIvX,eAACgR,IAAI,CAACnR,UAAU,sBAAqBF,SAAA,CACjCF,cAACyR,KAAU,CAACrR,UAAU,WAAUF,SAC5BF,cAAA,MAAII,UAAU,OAAOmU,MAAO,CAAEkE,MAAO,QAASvY,SAAC,mCAInDF,cAAC2R,IAAQ,CAAAzR,SACLF,cAACkC,IAAG,CAAAhC,SACAF,cAAA,OAAKI,UAAU,MAAKF,SAChBF,cAACuR,IAAI,CAACnR,UAAU,SAAQF,SACpBF,cAAC6T,KAAc,CACXC,SAAS,KACT7Y,KAAMA,EACNyX,QAhCZ,CACZ,CAAEC,UAAW,KAAMC,KAAM,cACzB,CAAED,UAAW,2BAA4BC,KAAM,aAAc2B,MAAO,CAAEmE,WAAY,SAAUC,SAAU,SAAUC,aAAc,aAC9H,CAAEjG,UAAW,4BAA6BC,KAAM,aAAc2B,MAAO,CAAEmE,WAAY,SAAUC,SAAU,SAAUC,aAAc,aAC/H,CAAEjG,UAAW,6BAA8BC,KAAM,YAAa2B,MAAO,CAAEmE,WAAY,SAAUC,SAAU,SAAUC,aAAc,aAC/H,CAAEjG,UAAW,SAAUC,KAAM,WA4BLmB,WAAYC,OACZvD,UAAW,CAAE7O,QAnDlB,SAAC8O,GACpB6H,EAAmB7H,GACnB8H,GAAa,EACjB,aAuDSV,GACG9X,cAAC6X,GAAY,CACT3I,KAAM6I,EACNlH,OAvDG,WACf0H,EAAmB,MACnBC,GAAa,EACjB,EAqDgBK,QAASf,MAK7B,ECnEA,SAASpZ,KACP,IAAMC,EAAeC,aAAaC,QAAQ,QAC1C,OAAKF,EAOEG,KAAKC,MAAMJ,GANT,CACLK,MAAO,GACPC,QAAS,GACTC,KAAM,GACNC,UAAW,GAGjB,CAIA,IAkNe2Z,GAlNA,SAAHpC,GAASA,EAAJzb,KAAW,IAC1BqE,EAAwBC,IAAMC,SAASd,IAAce,EAAAC,YAAAJ,EAAA,GAA9CK,EAAIF,EAAA,GACXkD,GADoBlD,EAAA,GACcD,mBAAS,KAAGoD,EAAAlD,YAAAiD,EAAA,GAC9CmM,GADgBlM,EAAA,GAAcA,EAAA,GACIpD,oBAAS,IAAMuP,EAAArP,YAAAoP,EAAA,GAA1CiJ,EAAShJ,EAAA,GAAEyJ,EAAYzJ,EAAA,GAC9BC,EAAkCxP,oBAAS,GAAMyP,EAAAvP,YAAAsP,EAAA,GACjDI,GADgBH,EAAA,GAAcA,EAAA,GACNzP,oBAAS,IAAM6P,EAAA3P,YAAA0P,EAAA,GAEvCE,GAFWD,EAAA,GAASA,EAAA,GAEoB7P,mBAAS,OAAK+P,EAAA7P,YAAA4P,EAAA,GAA/CyJ,EAAYxJ,EAAA,GAAEyJ,EAAezJ,EAAA,GACpC0J,EAAsCzZ,mBAAS,MAAK0Z,EAAAxZ,YAAAuZ,EAAA,GAA7CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,EAA8C7Z,mBAAS,IAAG8Z,EAAA5Z,YAAA2Z,EAAA,GAAnDE,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAE1CG,EAAgCja,mBAAS,CACvCR,MAAO,iBACPqZ,OAAQ,GACRH,WAAY,uBACZwB,mBAAoB,MACpBC,EAAAja,YAAA+Z,EAAA,GALKG,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAe5B/Z,qBAAU,WAERsQ,MAAM,0DACH3J,MAAK,SAACC,GAAQ,OAAKA,EAAS2J,MAAM,IAClC5J,MAAK,SAACtL,GAAI,OAAKue,EAAmBve,EAAKA,KAAK,GACjD,GAAG,IACH,IA8BM4c,EAAe,SAAHN,GAA8C,IAAxCwB,EAAYxB,EAAZwB,aAAchB,EAASR,EAATQ,UAAWC,EAAOT,EAAPS,QAC/C8B,EAAsCva,IAAMC,UAAS,GAAMua,EAAAra,YAAAoa,EAAA,GAApDE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAE5BG,EAAcC,iBAAO,MAC3B,OACE5Z,eAACqQ,KAAK,CAAC1B,KAAM6I,EAAWlH,OAAQmH,EAAQ9X,SAAA,CACtCF,cAAC4Q,KAAMI,OAAM,CAACiH,aAAW,EAAA/X,SACvBF,cAAC4Q,KAAMQ,MAAK,CAAAlR,SAAC,gCAEfK,eAACqQ,KAAMU,KAAI,CAAApR,SAAA,CACTF,cAAA,OAAKoa,IAAKF,EAAYha,SAAE6Y,IACxB/Y,cAACqa,KAAe,CACdzH,KAAMmG,EACNuB,OAAQ,kBAAML,GAAe,EAAK,EAAE/Z,SAEpCF,cAACkR,KAAM,CAACC,QAAQ,UAASjR,SACtB8Z,EAAc,UAAY,2BAIjCha,cAAC4Q,KAAM3O,OAAM,CAAA/B,SACXF,cAACkR,KAAM,CAACC,QAAQ,YAAYvP,QAASoW,EAAQ9X,SAAC,cAOtD,EAGMqa,EAAoB,SAAC1Y,GACzB,IAAA2Y,EAAwB3Y,EAAEW,OAAlBtD,EAAIsb,EAAJtb,KAAMtE,EAAK4f,EAAL5f,MACdif,EAAWtW,wBAAC,CAAC,EACRqW,GAAQ,GAAAa,aAAA,GACVvb,EAAOtE,IAEZ,EAYM8f,EAAoB,SAACvB,GACzBH,EAAgBG,GAThBX,GAAa,EAWf,EAaA,OAAK7Y,EASHY,eAAAN,WAAA,CAAAC,SAAA,CACEF,cAAC4X,GAAa,IAEd5X,cAACQ,IAAS,CAACJ,UAAU,QAAQK,OAAK,EAAAP,SAChCK,eAAC2B,IAAG,CAAAhC,SAAA,CACFF,cAACmC,IAAG,CAAAjC,SACFK,eAACgR,IAAI,CAACnR,UAAU,sBAAqBF,SAAA,CACnCF,cAACyR,KAAU,CAACrR,UAAU,oBAAmBF,SACvCK,eAAC2B,IAAG,CAAC9B,UAAU,qBAAoBF,SAAA,CACjCF,cAACmC,IAAG,CAAC0B,GAAG,IAAG3D,SACTF,cAAA,MAAII,UAAU,OAAMF,SAAC,gCAEvBF,cAACmC,IAAG,CAAC/B,UAAU,aAAayD,GAAG,WAGnC7D,cAAC2R,IAAQ,CAAAzR,SACPK,eAACuD,IAAI,CAAC6W,SAxHC,SAAC9Y,GACpBA,EAAE6B,iBACF,IACMkX,EAAU,CACd5b,MAFwD4a,EAAlD5a,MAGNqZ,OAHwDuB,EAA3CvB,OAIbH,WAJwD0B,EAAnC1B,WAKrBwB,mBALwDE,EAAvBF,oBASjCxJ,MAAM,mDAAoD,CAC1DkD,OAAQ,OACRzK,QAAS,CACP,eAAgB,mBAChBkS,cAAe,uNAEjBxH,KAAMvU,KAAKe,UAAU+a,KAEpBrU,MAAK,SAACC,GAAQ,OAAKA,EAAS2J,MAAM,IAClC5J,MAAK,SAACtL,GACLme,EAAene,EAAKA,KAAK6f,mBACzBhb,QAAQC,IAAI9E,EACd,IACCyY,OAAM,SAACrG,GACNvN,QAAQuN,MAAM,SAAUA,EAC1B,GACJ,EA6F2CnN,SAAA,CAC3BF,cAAA,MAAII,UAAU,gCAA+BF,SAAC,oCAG9CF,cAAA,OAAKI,UAAU,UAASF,SACtBK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SAAO+a,IAAI,SAAQ7a,SAAC,iBACpBF,cAACgE,IAAK,CACJX,KAAK,OACLnE,KAAK,SACLoB,GAAG,SACH2D,YAAY,eACZrJ,MAAOgf,EAASvB,OAChB2C,SAAUT,SAIhBva,cAAA,OAAKI,UAAU,UAASF,SACtBK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SAAO+a,IAAI,aAAY7a,SAAC,gBACxBF,cAACgE,IAAK,CACJX,KAAK,OACLnE,KAAK,aACLoB,GAAG,aACH2D,YAAY,wBACZrJ,MAAOgf,EAAS1B,WAChB8C,SAAUT,SAIhBva,cAAA,OAAKI,UAAU,UAASF,SACtBF,cAACkR,KAAM,CAACC,QAAQ,UAAU9N,KAAK,SAAQnD,SAAC,aAI1CF,cAACkR,KAAM,CAACC,QAAQ,UAAUoD,MAAO,CAAEkE,MAAO,SAAW7W,QAAS,kBAAM8Y,EAAkBvB,EAAY,EAACjZ,SAAC,0BAGpGF,cAAC6X,EAAY,CACXkB,aAAcA,EACdhB,UAAWA,EACXC,QAtFC,WACjBQ,GAAa,EACf,cA4FQxY,cAACmC,IAAG,CAAC/B,UAAU,aAAagC,GAAG,IAAGlC,SAClCF,cAACsY,GAAgB,CAACrd,KAAMse,cA1EvBvZ,cAAC4U,IAAQ,CAACjU,GAAG,UAgFxB,ECxMesa,GAlCS,SAAHvE,GAAkB,IAAZzb,EAAIyb,EAAJzb,KAoBzB,OACE+E,cAAA,OAAKI,UAAU,MAAKF,SAClBF,cAACuR,IAAI,CAACnR,UAAU,SAAQF,SACtBF,cAAC6T,KAAc,CACbC,SAAS,KACT7Y,KAAMA,EACNyX,QAzBQ,CACd,CAAEC,UAAW,KAAMC,KAAM,cACzB,CAAED,UAAW,gBAAiBC,KAAM,sBAAuB2B,MAAO,CAAEmE,WAAY,SAAUC,SAAU,SAAUC,aAAc,aAC5H,CAAEjG,UAAW,iBAAkBC,KAAM,iBAAkB2B,MAAO,CAAEmE,WAAY,SAAUC,SAAU,SAAUC,aAAc,aACxH,CAAEjG,UAAW,kBAAmBC,KAAM,YAAa2B,MAAO,CAAEmE,WAAY,SAAUC,SAAU,SAAUC,aAAc,aACpH,CAAEjG,UAAW,oBAAqBC,KAAM,oBAAqB2B,MAAO,CAAEmE,WAAY,SAAUC,SAAU,SAAUC,aAAc,cAqBxH7E,WAAYC,YAKtB,ECtBA,SAAStV,KACP,IAAMC,EAAeC,aAAaC,QAAQ,QAC1C,OAAKF,EAOEG,KAAKC,MAAMJ,GANT,CACLK,MAAO,GACPC,QAAS,GACTC,KAAM,GACNC,UAAW,GAGjB,CAEA,IAurBe+b,GAvrBK,WAClB,IAAA5b,EAAwBC,IAAMC,SAASd,IAAce,EAAAC,YAAAJ,EAAA,GAA9CK,EAAIF,EAAA,GACXkD,GADoBlD,EAAA,GACcD,mBAAS,KAAGoD,EAAAlD,YAAAiD,EAAA,GAC9CmM,GADgBlM,EAAA,GAAcA,EAAA,GACIpD,oBAAS,IAAMuP,EAAArP,YAAAoP,EAAA,GACjDE,GADgBD,EAAA,GAAcA,EAAA,GACNvP,oBAAS,IAAMyP,EAAAvP,YAAAsP,EAAA,GACvCI,GADWH,EAAA,GAASA,EAAA,GACMzP,sBAAU6P,EAAA3P,YAAA0P,EAAA,GACpCE,GADYD,EAAA,GAAUA,EAAA,GACQ7P,mBAAS,KAAG+P,EAAA7P,YAAA4P,EAAA,GAG1C2J,GAHc1J,EAAA,GAAYA,EAAA,GAGkB/P,mBAAS,KAAG0Z,EAAAxZ,YAAAuZ,EAAA,GAAjDkC,EAAcjC,EAAA,GAAEkC,EAAiBlC,EAAA,GAExCtZ,qBAAU,WAGRyb,GACF,GAAG,IAEH,IAAMA,EAAmB,eAAA3E,EAAAxN,YAAAC,cAAAC,MAAG,SAAA0G,IAAA,IAAAtJ,EAAAuS,EAAA,OAAA5P,cAAAO,MAAA,SAAAuG,GAAA,cAAAA,EAAArG,KAAAqG,EAAApG,MAAA,cAAAoG,EAAArG,KAAA,EAAAqG,EAAApG,KAAA,EAGDqG,MACrB,2DACA,CACEvH,QAAS,CACPkS,cAAe,8BAGnB,KAAD,EAPa,KAARrU,EAAQyJ,EAAAlG,MASDuJ,GAAG,CAADrD,EAAApG,KAAA,gBAAAoG,EAAApG,KAAA,EACcrD,EAAS2J,OAAO,KAAD,EAApC4I,EAAY9I,EAAAlG,KAClBqR,EAAkBrC,EAAa9d,MAAMgV,EAAApG,KAAA,iBAErC/J,QAAQuN,MAAM,mCAAmC,QAAA4C,EAAApG,KAAA,iBAAAoG,EAAArG,KAAA,GAAAqG,EAAAhG,GAAAgG,EAAA,SAGnDnQ,QAAQuN,MAAM,kCAAiC4C,EAAAhG,IAAS,yBAAAgG,EAAA9F,OAAA,GAAA2F,EAAA,mBAE3D,kBArBwB,OAAA4G,EAAApM,MAAA,KAAAC,UAAA,KA0BzB8O,EAAgC7Z,mBAAS,CACvC2Y,cAAe,GACfC,gBAAiB,GACjB5F,eAAgB,GAChB8I,kBAAmB,KACnBhC,EAAA5Z,YAAA2Z,EAAA,GALKO,EAAQN,EAAA,GAAEO,EAAWP,EAAA,GAOtBiC,EAAe,SAAC1Z,GACpB,IAAA2Y,EAAwB3Y,EAAEW,OAAlBtD,EAAIsb,EAAJtb,KAAMtE,EAAK4f,EAAL5f,MACdif,EAAWtW,wBAAC,CAAC,EACRqW,GAAQ,GAAAa,aAAA,GACVvb,EAAOtE,IAEZ,EAEM4gB,EAAY,eAAAjE,EAAArO,YAAAC,cAAAC,MAAG,SAAAqS,EAAO5Z,GAAC,IAAA6Z,EAAA,OAAAvS,cAAAO,MAAA,SAAAiS,GAAA,cAAAA,EAAA/R,KAAA+R,EAAA9R,MAAA,OAa3B,OAZAhI,EAAE6B,iBAGIgY,EAAiB,CACrBtI,OAAQ,OACRzK,QAAS,CACP,eAAgB,mBAChBkS,cAAc,4BAEhBxH,KAAMvU,KAAKe,UAAU+Z,IAGvB+B,EAAA/R,KAAA,EAAA+R,EAAA9R,KAAA,EAEyBqG,MACrB,sDACAwL,GACA,KAAD,EAHaC,EAAA5R,KAKDuJ,GACXxT,QAAQC,IAAI,oCAGZD,QAAQuN,MAAM,+BAEfsO,EAAA9R,KAAA,gBAAA8R,EAAA/R,KAAA,EAAA+R,EAAA1R,GAAA0R,EAAA,SAED7b,QAAQuN,MAAM,qBAAoBsO,EAAA1R,IAAS,yBAAA0R,EAAAxR,OAAA,GAAAsR,EAAA,kBAE9C,gBA9BiBrR,GAAA,OAAAmN,EAAAjN,MAAA,KAAAC,UAAA,KAkDlB,GAPAhL,IAAMK,WAAU,WACdhB,aAAaC,QAAQ,OAAQC,KAAKe,UAAUF,GAC9C,GAAG,CAACA,IAEJG,QAAQC,IAAI,YAAaJ,IAGpBA,EACH,OAAOK,cAAC4U,IAAQ,CAACjU,GAAG,WA2dtB,OACEJ,eAAAN,WAAA,CAAAC,SAAA,CACEF,cAAC4X,GAAa,IAEd5X,cAACQ,IAAS,CAACJ,UAAU,QAAQK,OAAK,EAAAP,SAChCK,eAAC2B,IAAG,CAAAhC,SAAA,CAEFF,cAACmC,IAAG,CAAAjC,SACFK,eAACgR,IAAI,CAACnR,UAAU,sBAAqBF,SAAA,CACnCF,cAACyR,KAAU,CAACrR,UAAU,oBAAmBF,SACvCK,eAAC2B,IAAG,CAAC9B,UAAU,qBAAoBF,SAAA,CACjCF,cAACmC,IAAG,CAAC0B,GAAG,IAAG3D,SACTF,cAAA,MAAII,UAAU,OAAMF,SAAC,uCAEvBF,cAACmC,IAAG,CAAC/B,UAAU,aAAayD,GAAG,WAGnC7D,cAAC2R,IAAQ,CAAAzR,SACPK,eAACuD,IAAI,CAAC6W,SAAUa,EAAatb,SAAA,CAC3BF,cAAA,MAAII,UAAU,gCAA+BF,SAAC,oCAG9CF,cAAA,OAAKI,UAAU,UAASF,SACtBK,eAAC2B,IAAG,CAAAhC,SAAA,CACFF,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,iBAAgB/R,SACzB,kBAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACVE,GAAG,gBACHpB,KAAK,gBACL+E,YAAY,sBACZZ,KAAK,OACLzI,MAAOgf,EAASzB,cAChB6C,SAAUO,SAIhBvb,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SAAOI,UAAU,qBAAqB6R,QAAQ,iBAAgB/R,SAAC,oBAG/DF,cAACgE,IAAK,CACJ5D,UAAU,2BACVE,GAAG,kBACHpB,KAAK,kBACLmE,KAAK,OACLzI,MAAOgf,EAASxB,gBAChB4C,SAAUO,SAIhBvb,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SAAOI,UAAU,qBAAqB6R,QAAQ,oBAAmB/R,SAAC,sBAGlEF,cAACgE,IAAK,CACJ5D,UAAU,2BACVE,GAAG,oBACHpB,KAAK,oBACLmE,KAAK,OACLzI,MAAOgf,EAAS0B,kBAChBN,SAAUO,SAIhBvb,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SAAOI,UAAU,qBAAqB6R,QAAQ,iBAAgB/R,SAAC,mBAG/DF,cAACgE,IAAK,CACJ5D,UAAU,2BACVE,GAAG,iBACHpB,KAAK,iBACLmE,KAAK,OACLzI,MAAOgf,EAASpH,eAChBwI,SAAUO,cAQpBvb,cAAA,OAAKI,UAAU,UAASF,SACtBF,cAACkR,KAAM,CAACC,QAAQ,UAASjR,SAAC,aAE5BF,cAAA,OAAKI,UAAU,mBAOvBJ,cAACmC,IAAG,CAAC/B,UAAU,aAAagC,GAAG,IAAGlC,SACjCF,cAACib,GAAe,CAAChgB,KAAOkgB,aAMnC,ECpkBeS,GArID,WACZ,IAAAjZ,EAA0BnD,mBAAS,IAAGoD,EAAAlD,YAAAiD,EAAA,GAA/B3D,EAAK4D,EAAA,GAAEiZ,EAAQjZ,EAAA,GACtBkM,EAAgCtP,mBAAS,IAAGuP,EAAArP,YAAAoP,EAAA,GAArC3I,EAAQ4I,EAAA,GAAE+M,EAAW/M,EAAA,GAEtBgN,EAAWC,cAEXC,EAAW,eAAAvF,EAAAxN,YAAAC,cAAAC,MAAG,SAAA0G,EAAOjO,GAAC,IAAA2E,EAAA,OAAA2C,cAAAO,MAAA,SAAAuG,GAAA,cAAAA,EAAArG,KAAAqG,EAAApG,MAAA,OACP,OAAnBhI,EAAE6B,iBAAiBuM,EAAArG,KAAA,EAAAqG,EAAApG,KAAA,EAEMqS,EAAYrW,MAAM7G,EAAOmH,GAAUI,MACxD,WACEwV,EAASvL,KAAK,eAEhB,IACA,SAACnD,GACCvN,QAAQC,IAAIsN,EACd,IACA,KAAD,EARK7G,EAAQyJ,EAAAlG,KASdjK,QAAQC,IAAIyG,EAASvL,MAAMgV,EAAApG,KAAA,gBAAAoG,EAAArG,KAAA,EAAAqG,EAAAhG,GAAAgG,EAAA,SAE3BnQ,QAAQC,IAAGkQ,EAAAhG,IAAM,yBAAAgG,EAAA9F,OAAA,GAAA2F,EAAA,kBAEpB,gBAhBgB1F,GAAA,OAAAsM,EAAApM,MAAA,KAAAC,UAAA,KAuBjB,OACEvK,cAAAC,WAAA,CAAAC,SACEK,eAAC4B,IAAG,CAACqP,GAAG,IAAIW,GAAG,IAAGjS,SAAA,CAChBK,eAACgR,IAAI,CAACnR,UAAU,+BAA8BF,SAAA,CAC5CK,eAACkR,KAAU,CAACrR,UAAU,sBAAqBF,SAAA,CACzCF,cAAA,OAAKI,UAAU,mCAAkCF,SAC/CF,cAAA,SAAAE,SAAO,mBAETF,cAAA,OAAKI,UAAU,+BAEjBG,eAACoR,IAAQ,CAACvR,UAAU,kBAAiBF,SAAA,CACnCF,cAAA,OAAKI,UAAU,8BAA6BF,SAC1CF,cAAA,cAEFO,eAACuD,IAAI,CAACqY,KAAK,OAAOxB,SAAUsB,EAAY/b,SAAA,CACtCF,cAACgS,KAAS,CAAC5R,UAAU,OAAMF,SACzBK,eAACwD,IAAU,CAAC3D,UAAU,0BAAyBF,SAAA,CAC7CF,cAACkE,IAAe,CAACC,UAAU,UAASjE,SAClCF,cAACoE,IAAc,CAAAlE,SACbF,cAAA,KAAGI,UAAU,uBAGjBJ,cAACgE,IAAK,CACJC,YAAY,gBACZZ,KAAK,QACLzI,MAAOoE,EACPgc,SAAU,SAACnZ,GAAC,OAAKga,EAASha,EAAEW,OAAO5H,MAAM,SAI/CoF,cAACgS,KAAS,CAAA9R,SACRK,eAACwD,IAAU,CAAC3D,UAAU,0BAAyBF,SAAA,CAC7CF,cAACkE,IAAe,CAACC,UAAU,UAASjE,SAClCF,cAACoE,IAAc,CAAAlE,SACbF,cAAA,KAAGI,UAAU,+BAGjBJ,cAACgE,IAAK,CACJX,KAAK,WACLY,YAAY,WACZrJ,MAAOuL,EACP6U,SAAU,SAACnZ,GAAC,OAAKia,EAAYja,EAAEW,OAAO5H,MAAM,SAIlD2F,eAAA,OAAKH,UAAU,4DAA2DF,SAAA,CACxEF,cAAA,SACEI,UAAU,uBACVE,GAAG,oBACH+C,KAAK,aAEPrD,cAAA,SACEI,UAAU,uBACV6R,QAAQ,oBAAmB/R,SAE3BF,cAAA,QAAMI,UAAU,aAAYF,SAAC,qBAQjCF,cAAA,OAAKI,UAAU,OAAO5F,MAAM,UAAS0F,SACnCF,cAAA,UACEI,UAAU,4BACVF,SAKAF,cAAA,QAAAE,SAAM,uBAMhBK,eAAC2B,IAAG,CAAC9B,UAAU,OAAMF,SAAA,CACnBF,cAACmC,IAAG,CAAC0B,GAAG,IAAG3D,SACTF,cAAA,KACEI,UAAU,aACVuB,KAAK,OAGLC,QAzFa,SAACC,GAExBE,OAAOqa,KAAK,iDACd,EAsFsClc,SAE1BF,cAAA,SAAAE,SAAO,yBAGXF,cAACmC,IAAG,CAAC/B,UAAU,aAAayD,GAAG,IAAG3D,SAChCF,cAAA,KACEI,UAAU,aACVuB,KAAK,YACLzB,SAEAF,cAAA,SAAAE,SAAO,kCAOrB,ECpGemc,GAzCS,WACtB,OACErc,cAAAC,WAAA,CAAAC,SACEK,eAAA,OACEH,UAAU,qDACVmU,MAAO,CACLC,UAAW,QACXC,gBACE,OACApe,EAAQ,IAAyCuD,QACjD,IACF8a,eAAgB,QAChBC,mBAAoB,cACpBzU,SAAA,CAGFF,cAAA,QAAMI,UAAU,uCAEhBJ,cAACQ,IAAS,CAACJ,UAAU,4BAA4BK,OAAK,QAqB9D,EC7BE,SAAS/B,KACP,IAAMC,EAAeC,aAAaC,QAAQ,WAC1C,OAAKF,EAMEG,KAAKC,MAAMJ,GALT,CACL2d,MAAO,GACPC,OAAQ,GAId,CAGF,IAyIeC,GAzIO,WACpB,IAAAld,EAA8BC,IAAMC,SAASd,IAAce,EAAAC,YAAAJ,EAAA,GAApDmd,EAAOhd,EAAA,GACdkD,GAD0BlD,EAAA,GACMD,mBAAS,KAAGoD,EAAAlD,YAAAiD,EAAA,GAArCwD,EAAQvD,EAAA,GAAEkZ,EAAWlZ,EAAA,GAEtBmZ,EAAWC,cAEjBzc,IAAMK,WAAU,WACdhB,aAAaC,QAAQ,UAAWC,KAAKe,UAAU4c,GACjD,GAAG,CAACA,IAEJ3c,QAAQC,IAAI,mCAAoC0c,GAEhD,IAAMC,EAAiB,eAAAhG,EAAAxN,YAAAC,cAAAC,MAAG,SAAA0G,EAAOjO,GAAC,IAAA2E,EAAA,OAAA2C,cAAAO,MAAA,SAAAuG,GAAA,cAAAA,EAAArG,KAAAqG,EAAApG,MAAA,OACb,OAAnBhI,EAAE6B,iBAAiBuM,EAAArG,KAAA,EAAAqG,EAAApG,KAAA,EAEMqS,EAAYlW,cAAc,KAAD,EAA1CQ,EAAQyJ,EAAAlG,MACnB0S,EAAQH,MAAOG,EAAQF,OAAQpW,GAAUI,MACxC,WACEwV,EAASvL,KAAK,cAEhB,IACA,SAACnD,GACCvN,QAAQC,IAAIsN,EACd,IAEIvN,QAAQC,IAAIyG,EAASvL,MAAMgV,EAAApG,KAAA,gBAAAoG,EAAArG,KAAA,EAAAqG,EAAAhG,GAAAgG,EAAA,SAE3BnQ,QAAQC,IAAGkQ,EAAAhG,IAAM,yBAAAgG,EAAA9F,OAAA,GAAA2F,EAAA,kBAEpB,gBAjBsB1F,GAAA,OAAAsM,EAAApM,MAAA,KAAAC,UAAA,KAuBvB,OACEvK,cAAAC,WAAA,CAAAC,SACEK,eAAC4B,IAAG,CAACqP,GAAG,IAAIW,GAAG,IAAGjS,SAAA,CAChBK,eAACgR,IAAI,CAACnR,UAAU,+BAA8BF,SAAA,CAC5CK,eAACkR,KAAU,CAACrR,UAAU,sBAAqBF,SAAA,CACzCF,cAAA,OAAKI,UAAU,mCAAkCF,SAC/CF,cAAA,SAAAE,SAAO,mBAETF,cAAA,OAAKI,UAAU,+BAEjBG,eAACoR,IAAQ,CAACvR,UAAU,kBAAiBF,SAAA,CACnCF,cAAA,OAAKI,UAAU,8BAA6BF,SAC1CF,cAAA,cAEFO,eAACuD,IAAI,CAACqY,KAAK,OAAOxB,SAAU+B,EAAkBxc,SAAA,CAgB5CF,cAACgS,KAAS,CAAA9R,SACRK,eAACwD,IAAU,CAAC3D,UAAU,0BAAyBF,SAAA,CAC7CF,cAACkE,IAAe,CAACC,UAAU,UAASjE,SAClCF,cAACoE,IAAc,CAAAlE,SACbF,cAAA,KAAGI,UAAU,+BAGjBJ,cAACgE,IAAK,CACJX,KAAK,WACLY,YAAY,WACZrJ,MAAOuL,EACP6U,SAAU,SAACnZ,GAAC,OAAKia,EAAYja,EAAEW,OAAO5H,MAAM,SAsBlDoF,cAAA,OAAKI,UAAU,OAAO5F,MAAM,UAAS0F,SACnCF,cAAA,UACEI,UAAU,4BACVF,SAKAF,cAAA,QAAAE,SAAM,gCAMhBF,cAACkC,IAAG,CAAC9B,UAAU,OAAMF,SAUnBF,cAACmC,IAAG,CAAC/B,UAAU,aAAayD,GAAG,IAAG3D,SAChCF,cAAA,KACEI,UAAU,aACVuB,KAAK,aACLC,QAAS,kBA9FjBC,EAAE6B,sBACFqY,EAASvL,KAAK,eAFU,IAAC3O,CA+FiB,EAAC3B,SAEnCF,cAAA,SAAAE,SAAO,0CAOrB,EClEeyc,GAjFc,WAC3B,IAAAha,EAA0BnD,mBAAS,IAAGoD,EAAAlD,YAAAiD,EAAA,GAA/B3D,EAAK4D,EAAA,GAAEiZ,EAAQjZ,EAAA,GACtBkM,EAAgCtP,mBAAS,IAAGuP,EAAArP,YAAAoP,EAAA,GAEtCiN,GAFShN,EAAA,GAAaA,EAAA,GAEXiN,eAEXU,EAAiB,eAAAhG,EAAAxN,YAAAC,cAAAC,MAAG,SAAA0G,EAAOjO,GAAC,IAAA2E,EAAA,OAAA2C,cAAAO,MAAA,SAAAuG,GAAA,cAAAA,EAAArG,KAAAqG,EAAApG,MAAA,OACb,OAAnBhI,EAAE6B,iBAAiBuM,EAAArG,KAAA,EAAAqG,EAAApG,KAAA,EAEMqS,EAAYpV,qBACjC9H,GACAuH,MACA,WACEwV,EAASvL,KAAK,uBAEhB,IACA,SAACnD,GACCvN,QAAQC,IAAIsN,EACd,IACA,KAAD,EAVK7G,EAAQyJ,EAAAlG,KAWdjK,QAAQC,IAAIyG,EAASvL,MAAMgV,EAAApG,KAAA,gBAAAoG,EAAArG,KAAA,EAAAqG,EAAAhG,GAAAgG,EAAA,SAE3BnQ,QAAQC,IAAGkQ,EAAAhG,IAAM,yBAAAgG,EAAA9F,OAAA,GAAA2F,EAAA,kBAEpB,gBAlBsB1F,GAAA,OAAAsM,EAAApM,MAAA,KAAAC,UAAA,KAwBvB,OACEvK,cAAAC,WAAA,CAAAC,SACEK,eAAC4B,IAAG,CAACqP,GAAG,IAAIW,GAAG,IAAGjS,SAAA,CAChBK,eAACgR,IAAI,CAACnR,UAAU,+BAA8BF,SAAA,CAC5CK,eAACkR,KAAU,CAACrR,UAAU,sBAAqBF,SAAA,CACzCF,cAAA,OAAKI,UAAU,mCAAkCF,SAC/CF,cAAA,SAAAE,SAAO,oDAETF,cAAA,OAAKI,UAAU,+BAEjBJ,cAAC2R,IAAQ,CAACvR,UAAU,kBAAiBF,SACnCK,eAACuD,IAAI,CAACqY,KAAK,OAAOxB,SAAU+B,EAAkBxc,SAAA,CAC5CF,cAACgS,KAAS,CAAC5R,UAAU,OAAMF,SACzBK,eAACwD,IAAU,CAAC3D,UAAU,0BAAyBF,SAAA,CAC7CF,cAACkE,IAAe,CAACC,UAAU,UAASjE,SAClCF,cAACoE,IAAc,CAAAlE,SACbF,cAAA,KAAGI,UAAU,uBAGjBJ,cAACgE,IAAK,CACJC,YAAY,2BACZZ,KAAK,QACLzI,MAAOoE,EACPgc,SAAU,SAACnZ,GAAC,OAAKga,EAASha,EAAEW,OAAO5H,MAAM,SAI/CoF,cAAA,OAAKI,UAAU,OAAO5F,MAAM,UAAS0F,SACnCF,cAAA,UAAQI,UAAU,4BAA2BF,SAC3CF,cAAA,QAAAE,SAAM,uCAMhBF,cAACkC,IAAG,CAAC9B,UAAU,OAAMF,SACnBF,cAACmC,IAAG,CAAC/B,UAAU,aAAayD,GAAG,IAAG3D,SAChCF,cAAA,KACEI,UAAU,aACVuB,KAAK,aACLC,QAAS,kBA3CjBC,EAAE6B,sBACFqY,EAASvL,KAAK,eAFU,IAAC3O,CA4CiB,EAAC3B,SAEnCF,cAAA,SAAAE,SAAO,0CAOrB,ECkhBe0c,GAvlBA,WACb,IAAAja,EAAkCnD,mBAAS,IAAGoD,EAAAlD,YAAAiD,EAAA,GAAvCiM,EAAShM,EAAA,GAAEiM,EAAYjM,EAAA,GAC9BkM,EAAkCtP,oBAAS,GAAMuP,EAAArP,YAAAoP,EAAA,GACjDE,GADgBD,EAAA,GAAcA,EAAA,GACNvP,oBAAS,IAAMyP,EAAAvP,YAAAsP,EAAA,GAAhCE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,EAA0B5P,qBAAU6P,EAAA3P,YAAA0P,EAAA,GACpCE,GADYD,EAAA,GAAUA,EAAA,GACQ7P,mBAAS,KAAG+P,EAAA7P,YAAA4P,EAAA,GAAnCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GACpBG,EAAS,GAKTC,EAAc,WAAH,OAASR,GAAQ,EAAO,EACnCS,EAAa,WAAH,OAAST,GAAQ,EAAM,EAEvCvP,qBAAU,WACiB,SAAAiQ,IAKxB,OALwBA,EAAA3G,YAAAC,cAAAC,MAAzB,SAAA0G,IAAA,IAAAC,EAAAC,EAAAR,EAAA,OAAArG,cAAAO,MAAA,SAAAuG,GAAA,cAAAA,EAAArG,KAAAqG,EAAApG,MAAA,cAAAoG,EAAApG,KAAA,EAC6BqG,MAAM7K,EAAUE,YAAY,KAAD,EAApC,OAAZwK,EAAYE,EAAAlG,KAAAkG,EAAApG,KAAA,EACSkG,EAAaI,OAAO,KAAD,EAAxCH,EAAYC,EAAAlG,KACZyF,EAAUQ,EAAaI,MAAMC,QAAO,SAAA1Q,GAAI,OAAqB,IAAjBA,EAAK2Q,OAAgB,IACvEb,EAAWD,GAAS,wBAAAS,EAAA9F,OAAA,GAAA2F,EAAA,KACrBD,EAAAvF,MAAA,KAAAC,UAAA,EANc,WACUsF,EAAAvF,MAAC,KAADC,UAAA,CAMzBgG,EACF,GAAG,IAEHf,EAAQ/R,SAAQ,SAACkC,GACf+P,EAAOc,KAAK7Q,EACd,IAEAG,QAAQC,IACN,4DACA2P,GAIF,IAAMe,EAAY,CAChB7O,QAAS,SAACC,EAAG6O,GACX5Q,QAAQC,IAAI,gBAAiB2Q,EAAIpQ,IACjCuO,EAAa6B,EAEf,GAoCEC,EAAe,WACnB,OACEpQ,eAACqQ,KAAK,CACJ1B,KAAMA,EACN2B,OAAQlB,EACRvP,UAAU,cACV0Q,iBAAiB,qBACjBC,gBAAgB,cAChB,kBAAgB,qCAAoC7Q,SAAA,CAEpDK,eAACqQ,KAAMI,OAAM,CAACC,WAAW,IAAG/Q,SAAA,CAC1BF,cAACkR,KAAM,CAACC,QAAQ,YAAYvP,QAAS+N,EAAYzP,SAAC,UAGlDK,eAACqQ,KAAMQ,MAAK,CAAAlR,SAAA,CACT0O,EAAUvN,WAAW,IAAEuN,EAAUyC,gBAGtCrR,cAAC4Q,KAAMU,KAAI,CAAApR,SACTF,cAACQ,IAAS,CAACC,OAAK,EAAAP,SACdK,eAAC2B,IAAG,CAAAhC,SAAA,CACFF,cAACmC,IAAG,CAAC/B,UAAU,0BAA0BgC,GAAG,IAAGlC,SAC7CK,eAACgR,IAAI,CAACnR,UAAU,sBAAqBF,SAAA,CACnCF,cAACkC,IAAG,CAAC9B,UAAU,yBAAwBF,SACrCF,cAACmC,IAAG,CAAC/B,UAAU,aAAaoR,GAAG,IAAGtR,SAChCF,cAAA,OAAKI,UAAU,qBAAoBF,SACjCF,cAAA,KAAG2B,KAAK,SAASC,QAAS,SAACC,GAAC,OAAKA,EAAE6B,gBAAgB,EAACxD,SAClDF,cAAA,OACEmB,IAAI,MACJf,UAAU,iBACVgB,IACE/K,EAAQ,KACLuD,kBAOfoG,cAACyR,KAAU,CAACrR,UAAU,iDAAgDF,SACpEK,eAAA,OAAKH,UAAU,iCAAgCF,SAAA,CAC7CF,cAACkR,KAAM,CACL9Q,UAAU,OACV5F,MAAM,OACNmH,KAAK,SACLC,QAAS,SAACC,GAAC,OAAKA,EAAE6B,gBAAgB,EAClCgO,KAAK,OAIP1R,cAACkR,KAAM,CACL9Q,UAAU,cACV5F,MAAM,UACNmH,KAAK,SACLC,QAAS,SAACC,GAAC,OAAKA,EAAE6B,gBAAgB,EAClCgO,KAAK,YAMXnR,eAACoR,IAAQ,CAACvR,UAAU,eAAcF,SAAA,CAChCF,cAACkC,IAAG,CAAAhC,SACFF,cAAA,OAAKI,UAAU,MAAKF,SAClBK,eAAA,OAAKH,UAAU,2DAA0DF,SAAA,CACvEK,eAAA,OAAAL,SAAA,CACEF,cAAA,QAAMI,UAAU,UAASF,SAAC,OAC1BF,cAAA,QAAMI,UAAU,cAAaF,SAAC,kBAEhCK,eAAA,OAAAL,SAAA,CACEF,cAAA,QAAMI,UAAU,UAASF,SAAC,OAC1BF,cAAA,QAAMI,UAAU,cAAaF,SAAC,yBAEhCK,eAAA,OAAAL,SAAA,CACEF,cAAA,QAAMI,UAAU,UAASF,SAAC,OAC1BF,cAAA,QAAMI,UAAU,cAAaF,SAAC,wCAOtCK,eAAA,OAAKH,UAAU,cAAaF,SAAA,CAC1BK,eAAA,MAAAL,SAAA,CACG0O,EAAUvN,WAAW,IAAEuN,EAAUyC,UAClCrR,cAAA,QAAMI,UAAU,yBAElBG,eAAA,OAAKH,UAAU,qBAAoBF,SAAA,CACjCF,cAAA,KAAGI,UAAU,yBAAyB,mBACrB,IACjBJ,cAAA,KAAAE,SAAI0O,EAAUgD,gBAAgBC,aAGhC7R,cAAA,MAAII,UAAU,SACdG,eAAA,KAAAL,SAAA,CACG0O,EAAUvN,WAAW,wBAAiB,IACtCuN,EAAUkD,UAAU,iBAAe,IACpC9R,cAAA,KAAAE,SAAI0O,EAAUgD,gBAAgBG,0BAMxC/R,cAACmC,IAAG,CAAC/B,UAAU,aAAagC,GAAG,IAAGlC,SAChCK,eAACgR,IAAI,CAACnR,UAAU,sBAAqBF,SAAA,CACnCF,cAACyR,KAAU,CAACrR,UAAU,oBAAmBF,SACvCK,eAAC2B,IAAG,CAAC9B,UAAU,qBAAoBF,SAAA,CACjCF,cAACmC,IAAG,CAAC0B,GAAG,IAAG3D,SACTF,cAAA,MAAII,UAAU,OAAMF,SAAC,iBAEvBF,cAACmC,IAAG,CAAC/B,UAAU,aAAayD,GAAG,IAAG3D,SAChCF,cAACkR,KAAM,CACL1W,MAAM,UACNmH,KAAK,SACLC,QAAS,SAACC,GAAC,OAAKA,EAAE6B,gBAAgB,EAClCgO,KAAK,KAAIxR,SACV,oBAMPF,cAAC2R,IAAQ,CAAAzR,SACPK,eAACuD,IAAI,CAAA5D,SAAA,CACHF,cAAA,MAAII,UAAU,gCAA+BF,SAAC,qBAG9CK,eAAA,OAAKH,UAAU,UAASF,SAAA,CACtBK,eAAC2B,IAAG,CAAAhC,SAAA,CACFF,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,iBAAgB/R,SACzB,aAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAActD,EAAUvN,WACxBf,GAAG,iBACH2D,YAAY,WAEZZ,KAAK,cAIXrD,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,cAAa/R,SACtB,kBAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACVE,GAAG,cACH2D,YAAa2K,EAAU5P,MAEvBqE,KAAK,kBAKb9C,eAAC2B,IAAG,CAAAhC,SAAA,CACFF,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,mBAAkB/R,SAC3B,eAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAActD,EAAUvN,WACxBf,GAAG,mBACH2D,YAAY,aAEZZ,KAAK,cAIXrD,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,kBAAiB/R,SAC1B,cAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAActD,EAAUyC,UACxB/Q,GAAG,kBACH2D,YAAY,YAEZZ,KAAK,oBAMfrD,cAAA,MAAII,UAAU,SACdJ,cAAA,MAAII,UAAU,gCAA+BF,SAAC,wBAG9CK,eAAA,OAAKH,UAAU,UAASF,SAAA,CACtBF,cAACkC,IAAG,CAAAhC,SACFF,cAACmC,IAAG,CAACgQ,GAAG,KAAIjS,SACVK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,gBAAe/R,SACxB,YAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAActD,EAAUgD,gBAAgBC,QACxCvR,GAAG,gBACH2D,YAAY,kBAEZZ,KAAK,gBAKbrD,cAACkC,IAAG,CAAAhC,SACFF,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,aAAY/R,SACrB,iBAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAActD,EAAUwD,OACxB9R,GAAG,aACH2D,YAAY,eAEZZ,KAAK,mBAMfrD,cAAA,MAAII,UAAU,SACdJ,cAAA,MAAII,UAAU,gCAA+BF,SAAC,wBAG9CK,eAAA,OAAKH,UAAU,UAASF,SAAA,CACtBF,cAACkC,IAAG,CAAAhC,SACFF,cAACmC,IAAG,CAACgQ,GAAG,KAAIjS,SACVK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,gBAAe/R,SACxB,iBAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAActD,EAAUgD,gBAAgBC,QACxCvR,GAAG,gBACH2D,YAAY,eAEZZ,KAAK,gBAKb9C,eAAC2B,IAAG,CAAAhC,SAAA,CACFF,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,aAAY/R,SACrB,iBAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAActD,EAAUgD,gBAAgBC,QACxCvR,GAAG,aACH2D,YAAY,eAEZZ,KAAK,cAIXrD,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,gBAAe/R,SACxB,eAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aACEtD,EAAUgD,gBAAgBS,WAE5B/R,GAAG,gBACH2D,YAAY,aAEZZ,KAAK,cAIXrD,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,gBAAe/R,SACxB,oBAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACVE,GAAG,oBACH4R,aAActD,EAAUgD,gBAAgBG,UACxC9N,YAAY,kBAEZZ,KAAK,sBAMfrD,cAAA,MAAII,UAAU,SACdJ,cAAA,MAAII,UAAU,gCAA+BF,SAAC,oBAG9CK,eAAA,OAAKH,UAAU,UAASF,SAAA,CACtBF,cAACkC,IAAG,CAAAhC,SACFF,cAACmC,IAAG,CAACgQ,GAAG,KAAIjS,SACVK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,gBAAe/R,SACxB,wBAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aACEtD,EAAU0D,gBAAgBC,iBAE5BjS,GAAG,gBACH2D,YAAY,sBAEZZ,KAAK,gBAKb9C,eAAC2B,IAAG,CAAAhC,SAAA,CACFF,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,aAAY/R,SACrB,mBAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aACEtD,EAAU0D,gBAAgBE,eAE5BlS,GAAG,aACH2D,YAAY,iBAEZZ,KAAK,cAIXrD,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,gBAAe/R,SACxB,cAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAActD,EAAU0D,gBAAgBG,UACxCnS,GAAG,gBACH2D,YAAY,YAEZZ,KAAK,qCAa7BrD,cAAC4Q,KAAM3O,OAAM,CAAA/B,SAIXF,cAACkR,KAAM,CAACC,QAAQ,YAAYvP,QAAS+N,EAAYzP,SAAC,cAM1D,EA+BQwS,EAAU,CACd,CAAEC,UAAW,aAAcC,KAAM,qBACjC,CAAED,UAAW,YAAaC,KAAM,oBAChC,CAAED,UAAW,QAASC,KAAM,gBAC5B,CAAED,UAAW,SAAUC,KAAM,gBAC7B,CAAED,UAAW,4BAA6BC,KAAM,kBAQhD,CACEA,KAAM,UACNE,UAAW,SAACC,EAAarC,GAAG,OAC1BnQ,eAACyS,KAAc,CAACC,MAAM,UAAS/S,SAAA,CAC7BF,cAACkT,KAASC,KAAI,CAACvR,QAAS,kBAAMgO,GAAe,EAAC1P,SAAC,SAC/CF,cAACkT,KAASC,KAAI,CAACvR,QAAS,kBA9CV,SAACtB,GAEvB,IAAMqK,EAAc,CAClBrK,GAAIA,GAGN4P,MAAM,2CAA4C,CAChDkD,OAAQ,SACRzK,QAAS,CACP,eAAgB,oBAElB0K,KAAMvU,KAAKe,UAAU8K,KAEpBpE,MAAK,SAAAC,GACJ,GAAIA,EAAS8M,GAAI,CACf,IAAMC,EAAgB7D,EAAOW,QAAO,SAAAX,GAAM,OAAIA,EAAOpP,KAAOA,CAAE,IAC9DuO,EAAa0E,GACbxR,OAAOC,SAASwR,QAClB,MACE1T,QAAQuN,MAAM,2BAA4B7G,EAASiN,WAEvD,IACCC,OAAM,SAAArG,GACLvN,QAAQuN,MAAM,2BAA4BA,EAC5C,GACJ,CAqBwCsG,CAAgBjD,EAAIkD,IAAI,EAAC1T,SAAC,aACzC,IAyBvB,OACEK,eAAAN,WAAA,CAAAC,SAAA,CACEF,cAACgR,GAAM,IACPzQ,eAACC,IAAS,CAACJ,UAAU,QAAQK,OAAK,EAAAP,SAAA,CAChCF,cAACyR,KAAU,CAACrR,UAAU,WAAUF,SAC9BF,cAAA,MAAII,UAAU,OAAMF,SAAC,mBAEvBF,cAACkC,IAAG,CAAAhC,SACFF,cAAA,OAAKI,UAAU,MAAKF,SAClBK,eAACgR,IAAI,CAACnR,UAAU,SAAQF,SAAA,CACtBF,cAACyR,KAAU,CAACrR,UAAU,WAAUF,SAC9BF,cAAA,MAAII,UAAU,OAAMF,SAAC,mBAGvBF,cAAC6T,KAAc,CACbC,SAAS,QACT7Y,KAAMyU,EACNgD,QAASA,EACTqB,WAAYC,OACZvD,UAAWA,WAKlBvB,EAAOlP,cAAC2Q,EAAY,IAAM,UAInC,EC3lBI1N,GAAS,CACX,CACEyB,KAAM,SACNxF,KAAM,YACN2F,KAAM,0BACNgY,UAAWxI,GACX/X,OAAQ,UAEV,CACEoI,KAAM,cACNxF,KAAM,eACN2F,KAAM,0BACNgY,UAAW3B,GACX5e,OAAQ,UAEV,CACEoI,KAAM,YACNxF,KAAM,WACN2F,KAAM,0BACNgY,UAAW/D,GACXxc,OAAQ,SAERwgB,QAAS,CACP,CACEpY,KAAM,gBACNxF,KAAM,cACN2d,UAAWD,GACXtgB,OAAQ,UAEV,CACEoI,KAAM,oBACNxF,KAAM,kBACN2d,UAAW/D,GACXxc,OAAQ,YAKd,CACEoI,KAAM,QACNxF,KAAM,OACN2F,KAAM,0BACNgY,UAAWE,GACXzgB,OAAQ,UAEV,CACEoI,KAAM,gBACNxF,KAAM,eACN2F,KAAM,8BACNgY,UAAWhI,GACXvY,OAAQ,UASV,CACEoI,KAAM,WACNxF,KAAM,UACN2F,KAAM,gCACNgY,UAAWlO,GACXrS,OAAQ,UAEV,CACEoI,KAAM,UACNxF,KAAM,SACN2F,KAAM,gCACNgY,UAAWD,GACXtgB,OAAQ,UAEV,CACEoI,KAAM,aACNxF,KAAM,gBACN2F,KAAM,yBACNgY,UClFe,WAEf,OACEtc,eAAAN,WAAA,CAAAC,SAAA,CACEF,cAACqc,GAAe,IAEhBrc,cAACQ,IAAS,CAACwc,SAAS,iBAAgB9c,SAClCK,eAAC2B,IAAG,CAAC8a,SAAS,SAAQ9c,SAAA,CACpBF,cAACmC,IAAG,CAAC/B,UAAU,0BAA0BgC,GAAG,IAAGlC,SAC7CF,cAACuR,IAAI,CAACnR,UAAU,0BAElBJ,cAACmC,IAAG,CAAC/B,UAAU,aAAagC,GAAG,IAAGlC,SAChCK,eAACgR,IAAI,CAACnR,UAAU,sBAAqBF,SAAA,CACnCF,cAACyR,KAAU,CAACrR,UAAU,oBAAmBF,SACvCK,eAAC2B,IAAG,CAAC9B,UAAU,qBAAoBF,SAAA,CACjCF,cAACmC,IAAG,CAAC0B,GAAG,IAAG3D,SACTF,cAAA,MAAII,UAAU,OAAMF,SAAC,oBAEvBF,cAACmC,IAAG,CAAC/B,UAAU,aAAayD,GAAG,WAGnC7D,cAAC2R,IAAQ,CAAAzR,SACPK,eAACuD,IAAI,CAAA5D,SAAA,CACHF,cAAA,MAAII,UAAU,gCAA+BF,SAAC,yBAG9CK,eAAA,OAAKH,UAAU,UAASF,SAAA,CACtBK,eAAC2B,IAAG,CAAAhC,SAAA,CACFF,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,iBAAgB/R,SACzB,eAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAAc,GACd5R,GAAG,iBACH2D,YAAY,aACZ/E,KAAK,aAELmE,KAAK,cAIXrD,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,iBAAgB/R,SACzB,cAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAAc,GACd5R,GAAG,iBACH2D,YAAY,YACZ/E,KAAK,YAELmE,KAAK,cAIXrD,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,iBAAgB/R,SACzB,iBAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAAc,GACd5R,GAAG,SACH2D,YAAY,eAEZZ,KAAK,gBAIXrD,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,QAAO/R,SAChB,kBAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACVE,GAAG,QACH2D,YAAa,GAEbZ,KAAK,kBAKb9C,eAAC2B,IAAG,CAAAhC,SAAA,CACFF,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,mBAAkB/R,SAC3B,QAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAAc,GACd5R,GAAG,MACH2D,YAAY,gBAEZZ,KAAK,cAIXrD,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,kBAAiB/R,SAC1B,aAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAAc,SACd5R,GAAG,WACH2c,UAAQ,EAGR5Z,KAAK,oBAMfrD,cAAA,MAAII,UAAU,SACdJ,cAAA,MAAII,UAAU,gCAA+BF,SAAC,wBAG9CK,eAAA,OAAKH,UAAU,UAASF,SAAA,CACtBF,cAACkC,IAAG,CAAAhC,SACFF,cAACmC,IAAG,CAACgQ,GAAG,KAAIjS,SACVK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,gBAAe/R,SACxB,YAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAAc,GACd5R,GAAG,gBACH2D,YAAY,kBAEZZ,KAAK,gBAKbrD,cAACkR,KAAM,CAACC,QAAQ,YAAWjR,SAAC,cAE9BF,cAAA,OAAKI,UAAU,0BASjC,ED/FE9D,OAAQ,UAEV,CACEoI,KAAM,cACNxF,KAAM,iBACN2F,KAAM,4BACNgY,UEzFgB,WAEhB,OACEtc,eAAAN,WAAA,CAAAC,SAAA,CACEF,cAACqc,GAAe,IAEhBrc,cAACQ,IAAS,CAACwc,SAAS,iBAAgB9c,SAClCK,eAAC2B,IAAG,CAAC8a,SAAS,SAAQ9c,SAAA,CACpBF,cAACmC,IAAG,CAAC/B,UAAU,0BAA0BgC,GAAG,IAAGlC,SAC7CF,cAACuR,IAAI,CAACnR,UAAU,0BAElBJ,cAACmC,IAAG,CAAC/B,UAAU,aAAagC,GAAG,IAAGlC,SAChCK,eAACgR,IAAI,CAACnR,UAAU,sBAAqBF,SAAA,CACnCF,cAACyR,KAAU,CAACrR,UAAU,oBAAmBF,SACvCK,eAAC2B,IAAG,CAAC9B,UAAU,qBAAoBF,SAAA,CACjCF,cAACmC,IAAG,CAAC0B,GAAG,IAAG3D,SACTF,cAAA,MAAII,UAAU,OAAMF,SAAC,iBAEvBF,cAACmC,IAAG,CAAC/B,UAAU,aAAayD,GAAG,WAYnC7D,cAAC2R,IAAQ,CAAAzR,SACPK,eAACuD,IAAI,CAAA5D,SAAA,CACHF,cAAA,MAAII,UAAU,gCAA+BF,SAAC,yBAG9CK,eAAA,OAAKH,UAAU,UAASF,SAAA,CACtBK,eAAC2B,IAAG,CAAAhC,SAAA,CACFF,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,iBAAgB/R,SACzB,eAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAAc,GACd5R,GAAG,iBACH2D,YAAY,aACZ/E,KAAK,aAELmE,KAAK,cAIXrD,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,iBAAgB/R,SACzB,cAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAAc,GACd5R,GAAG,iBACH2D,YAAY,YACZ/E,KAAK,YAELmE,KAAK,cAIXrD,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,iBAAgB/R,SACzB,iBAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAAc,GACd5R,GAAG,SACH2D,YAAY,eAEZZ,KAAK,gBAIXrD,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,QAAO/R,SAChB,kBAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACVE,GAAG,QACH2D,YAAa,GAEbZ,KAAK,kBAKb9C,eAAC2B,IAAG,CAAAhC,SAAA,CACFF,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,mBAAkB/R,SAC3B,QAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAAc,GACd5R,GAAG,MACH2D,YAAY,gBAEZZ,KAAK,cAIXrD,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,kBAAiB/R,SAC1B,aAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAAc,SACd5R,GAAG,WACH2c,UAAQ,EAGR5Z,KAAK,oBAMfrD,cAAA,MAAII,UAAU,SACdJ,cAAA,MAAII,UAAU,gCAA+BF,SAAC,wBAG9CK,eAAA,OAAKH,UAAU,UAASF,SAAA,CACtBF,cAACkC,IAAG,CAAAhC,SACFF,cAACmC,IAAG,CAACgQ,GAAG,KAAIjS,SACVK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,gBAAe/R,SACxB,iBAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAAc,GACd5R,GAAG,gBACH2D,YAAY,eAEZZ,KAAK,gBAKb9C,eAAC2B,IAAG,CAAAhC,SAAA,CACFF,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,aAAY/R,SACrB,iBAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAAc,GACd5R,GAAG,aACH2D,YAAY,eAEZZ,KAAK,cAIXrD,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,gBAAe/R,SACxB,eAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAAc,GACd5R,GAAG,gBACH2D,YAAY,aAEZZ,KAAK,cAIXrD,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,gBAAe/R,SACxB,oBAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACVE,GAAG,oBACH4R,aAAc,GACdjO,YAAY,kBAEZZ,KAAK,sBAMfrD,cAAA,MAAII,UAAU,SACdJ,cAAA,MAAII,UAAU,gCAA+BF,SAAC,oBAG9CK,eAAA,OAAKH,UAAU,UAASF,SAAA,CACtBF,cAACkC,IAAG,CAAAhC,SACFF,cAACmC,IAAG,CAACgQ,GAAG,KAAIjS,SACVK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,gBAAe/R,SACxB,wBAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAAc,GACd5R,GAAG,gBACH2D,YAAY,sBAEZZ,KAAK,gBAKb9C,eAAC2B,IAAG,CAAAhC,SAAA,CACFF,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,aAAY/R,SACrB,mBAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAAc,GACd5R,GAAG,aACH2D,YAAY,iBAEZZ,KAAK,cAIXrD,cAACmC,IAAG,CAACqP,GAAG,IAAGtR,SACTK,eAACyR,KAAS,CAAA9R,SAAA,CACRF,cAAA,SACEI,UAAU,qBACV6R,QAAQ,gBAAe/R,SACxB,cAGDF,cAACgE,IAAK,CACJ5D,UAAU,2BACV8R,aAAc,GACd5R,GAAG,gBACH2D,YAAY,YAEZZ,KAAK,oBAMfrD,cAAA,OAAKI,UAAU,qBAAoBF,SACnCF,cAACkR,KAAM,CAACC,QAAQ,YAAWjR,SAAE,8BAW/C,EF3NE5D,OAAQ,UAEV,CACEoI,KAAM,SAGNmY,UAAWjB,GACXtf,OAAQ,SAEV,CACEoI,KAAM,kBAGNmY,UAAWL,GACXlgB,OAAQ,SAEV,CACEoI,KAAM,0BAGNmY,UAAWF,GACXrgB,OAAQ,UGxCG4gB,GAjFD,SAAC7d,GACb,IAAM8d,EAAc5d,IAAM4a,OAAO,MAC3BnY,EAAWob,cAEjB7d,IAAMK,WAAU,WACdyd,SAASC,gBAAgBC,UAAY,EACrCF,SAASG,iBAAiBD,UAAY,EACtCJ,EAAYM,QAAQF,UAAY,CAClC,GAAG,CAACvb,IAEJ,IAAmBiB,EA2CnB,OACE1C,eAAAN,WAAA,CAAAC,SAAA,CACEF,cAACyC,EAAOc,wBAAA,GACFlE,GAAK,IACT4D,OAAQA,GACRC,KAAM,CACJC,UAAW,eACXM,OAAQpN,EAAQ,IAAsCuD,QACtD4J,OAAQ,UAGZjD,eAAA,OAAKH,UAAU,eAAega,IAAK+C,EAAYjd,SAAA,CAC7CF,cAACZ,EAAWmE,wBAAA,GACNlE,GAAK,IACTuB,UA1Ba,SAAC8D,GACpB,IAAK,IAAIvL,EAAI,EAAGA,EAAI8J,GAAO3H,OAAQnC,IACjC,IAEG,IADDkG,EAAM2C,SAAS0b,SAAS5kB,QAAQmK,GAAO9J,GAAGmD,OAAS2G,GAAO9J,GAAGuL,MAG7D,OAAOzB,GAAO9J,GAAG+F,KAGrB,MAAO,OACT,CAgBmBye,CAAate,EAAM2C,SAAS0b,aAEzCnd,eAACqd,IAAM,CAAA1d,SAAA,EA3DM+C,EA4DAA,GA3DVA,EAAOoB,KAAI,SAACC,EAAMC,GACvB,MAAoB,WAAhBD,EAAKhI,OACHgI,EAAKwY,QAEL9c,cAAC6d,IAAK,CACJnZ,KAAMJ,EAAKhI,OAASgI,EAAKI,KAEzBoZ,OAAQ,kBACNvd,eAAAN,WAAA,CAAAC,SAAA,CACGoE,EAAKwY,UHyGDiB,EGzG0BzZ,EAAKwY,QH2GlD9c,cAACsB,IAAY,CAAApB,SACV6d,EAAa1Z,KAAI,SAACrJ,EAAMhC,GAAK,OAC5BgH,cAACuB,IAAY,CAAaZ,GAAI3F,EAAKsB,OAAStB,EAAK0J,KAAMjD,IAAKf,IAAKR,SAC9DlF,EAAKkE,MADWlG,EAEJ,OG9GLgH,cAACsE,EAAKuY,UAAStZ,YAAA,GAAKlE,OHwGhB,IAAC0e,CGvGJ,GALAxZ,GAWPvE,cAAC6d,IAAK,CACJnZ,KAAMJ,EAAKhI,OAASgI,EAAKI,KACzBmY,UAAWvY,EAAKuY,WACXtY,GAKJ,IAEX,KAiCMvE,cAAC4U,IAAQ,CAACoJ,KAAK,IAAIrd,GAAG,oBAExBX,cAACQ,IAAS,CAACC,OAAK,EAAAP,SACdF,cAACie,EAAW,WAKtB,E,UCVe7e,GA/DK,WAClB,OACEY,cAAAC,WAAA,CAAAC,SACEF,cAACG,IAAM,CAACC,UAAU,2CAA2CC,OAAO,KAAIH,SACtEK,eAACC,IAAS,CAACJ,UAAU,OAAMF,SAAA,CACzBF,cAACsD,IAAW,CAAC3C,GAAG,IAAIc,IAAKf,IAAKR,SAC5BF,cAAA,OACEmB,IAAI,MACJC,IACE/K,EAAQ,IAAyCuD,YAIvDoG,cAAA,UAAQI,UAAU,iBAAiBE,GAAG,uBAAsBJ,SAC1DF,cAAA,QAAMI,UAAU,0BAElBG,eAAC2d,KAAoB,CAACpd,QAAM,EAACqd,QAAQ,wBAAuBje,SAAA,CAC1DF,cAAA,OAAKI,UAAU,mCAAkCF,SAC/CK,eAAC2B,IAAG,CAAAhC,SAAA,CACFF,cAACmC,IAAG,CAAC/B,UAAU,iBAAiByD,GAAG,IAAG3D,SACpCF,cAACU,IAAI,CAACC,GAAG,IAAGT,SACVF,cAAA,OACEmB,IAAI,MACJC,IACE/K,EAAQ,IACLuD,cAKXoG,cAACmC,IAAG,CAAC/B,UAAU,iBAAiByD,GAAG,IAAG3D,SACpCK,eAAA,UAAQH,UAAU,iBAAiBE,GAAG,uBAAsBJ,SAAA,CAC1DF,cAAA,WACAA,cAAA,qBAKRO,eAACM,IAAG,CAACT,UAAU,UAAUU,QAAM,EAAAZ,SAAA,CAC7BF,cAACwE,IAAO,CAAAtE,SACNK,eAACkE,IAAO,CACNrE,UAAU,gBACVO,GAAG,iBACHc,IAAKf,IAAKR,SAAA,CAEVF,cAAA,KAAGI,UAAU,oBACbJ,cAAA,QAAMI,UAAU,uBAAsBF,SAAC,kBAG3CF,cAACwE,IAAO,CAAAtE,SACNK,eAACkE,IAAO,CAACrE,UAAU,gBAAgBO,GAAG,cAAcc,IAAKf,IAAKR,SAAA,CAC5DF,cAAA,KAAGI,UAAU,iBACbJ,cAAA,QAAMI,UAAU,uBAAsBF,SAAC,2BASzD,EChDe0b,GAxBD,WACZ,OACE5b,cAAAC,WAAA,CAAAC,SACEF,cAAA,UAAQI,UAAU,OAAMF,SACtBF,cAACQ,IAAS,CAAAN,SACRF,cAACkC,IAAG,CAAC9B,UAAU,gDAA+CF,SAC5DF,cAACmC,IAAG,CAACC,GAAG,IAAGlC,SACTK,eAAA,OAAKH,UAAU,gDAA+CF,SAAA,CAAC,SAC1D,IAAImC,MAAOC,cAAe,IAC7BtC,cAAA,KACEI,UAAU,wBACVoC,OAAO,SAAQtC,SAChB,0BAUjB,ECmEeke,GAhFF,SAAC/e,GACZ,IAAM8d,EAAc5d,IAAM4a,OAAO,MAC3BnY,EAAWob,cAEjB7d,IAAMK,WAAU,WAEd,OADAyd,SAAShK,KAAKgL,UAAUC,IAAI,cACrB,WACLjB,SAAShK,KAAKgL,UAAUE,OAAO,aACjC,CACF,GAAG,IACHhf,IAAMK,WAAU,WACdyd,SAASC,gBAAgBC,UAAY,EACrCF,SAASG,iBAAiBD,UAAY,EACtCJ,EAAYM,QAAQF,UAAY,CAClC,GAAG,CAACvb,IAEJ,IAAmBiB,EAgBnB,OACE1C,eAAAN,WAAA,CAAAC,SAAA,CACEK,eAAA,OAAKH,UAAU,eAAega,IAAK+C,EAAYjd,SAAA,CAC7CF,cAACwe,GAAU,IACXje,eAAA,OAAKH,UAAU,uCAAsCF,SAAA,CACnDF,cAACQ,IAAS,CAAAN,SACRF,cAAA,OAAKI,UAAU,+BAA8BF,SAC3CF,cAACkC,IAAG,CAAC9B,UAAU,yBAAwBF,SACrCK,eAAC4B,IAAG,CAACqP,GAAG,IAAIW,GAAG,IAAGjS,SAAA,CAChBF,cAAA,MAAII,UAAU,aAAYF,SAAC,aAC3BF,cAAA,KAAGI,UAAU,uBAAsBF,SAAC,2BAO5CF,cAAA,OAAKI,UAAU,uDAAsDF,SACnEF,cAAA,OACEye,MAAM,6BACNC,oBAAoB,OACpBC,QAAQ,MACRC,QAAQ,eACRnnB,EAAE,IACFC,EAAE,IAAGwI,SAELF,cAAA,WACEI,UAAU,eACVye,OAAO,iCAMf7e,cAACQ,IAAS,CAACJ,UAAU,aAAYF,SAC/BF,cAACkC,IAAG,CAAC9B,UAAU,yBAAwBF,SACrCK,eAACqd,IAAM,CAAA1d,SAAA,EApDE+C,EAqDIA,GApDdA,EAAOoB,KAAI,SAACC,EAAMC,GACvB,MAAoB,UAAhBD,EAAKhI,OAEL0D,cAAC6d,IAAK,CACJnZ,KAAMJ,EAAKhI,OAASgI,EAAKI,KACzBmY,UAAWvY,EAAKuY,WACXtY,GAIF,IAEX,KAyCUvE,cAAC4U,IAAQ,CAACoJ,KAAK,IAAIrd,GAAG,0BAK9BX,cAAC8e,GAAU,MAGjB,E,6BClFMnf,GAAOb,KAAKC,MAAMH,aAAaC,QAAQ,SAEvCkgB,GAAepf,GACjB,CAAEqf,YAAY,EAAMrf,SACpB,CAAEqf,YAAY,EAAOrf,KAAM,MCVzBof,GAAe,CAAC,ECEPE,8BAAgB,CAC7BC,KFSa,WAAyC,IAA/BC,EAAK5U,UAAAjP,OAAA,QAAA0P,IAAAT,UAAA,GAAAA,UAAA,GAAGwU,GAAcK,EAAM7U,UAAAjP,OAAA,EAAAiP,UAAA,QAAAS,EAC3C3H,EAAkB+b,EAAlB/b,KAAMuX,EAAYwE,EAAZxE,QAEd,OAAQvX,GACN,KAAK+K,GAKL,KAAKC,GACH,OAAA9K,wBAAA,GACK4b,GAAK,IACRH,YAAY,IAEhB,KAAK1Q,GACH,OAAA/K,wBAAA,GACK4b,GAAK,IACRH,YAAY,EACZrf,KAAMib,EAAQjb,OAElB,KAAK4O,GAML,KAAKC,GACH,OAAAjL,wBAAA,GACK4b,GAAK,IACRH,YAAY,EACZrf,KAAM,OAEV,QACE,OAAOwf,E,EEzCXlgB,QDFa,WAAyC,IAA/BkgB,EAAK5U,UAAAjP,OAAA,QAAA0P,IAAAT,UAAA,GAAAA,UAAA,GAAGwU,GAAcK,EAAM7U,UAAAjP,OAAA,EAAAiP,UAAA,QAAAS,EAC3C3H,EAAkB+b,EAAlB/b,KAAMuX,EAAYwE,EAAZxE,QAEd,OAAQvX,GACN,KAAKoL,GACH,MAAO,CAAExP,QAAS2b,GAEpB,KAAKlM,GACH,MAAO,CAAEzP,QAAS,IAEpB,QACE,OAAOkgB,E,IEVPE,GAAa,CAACC,MAOLC,GALDC,uBACZC,GACAC,+BAAoBC,mBAAerV,WAAC,EAAG+U,MCOzCO,IAAS9B,OACP9d,cAAC6f,KAAQ,CAACN,MAAOA,GAAMrf,SACrBF,cAAC8f,IAAa,CAAA5f,SACZK,eAACqd,IAAM,CAAA1d,SAAA,CACLF,cAAC6d,IAAK,CAACnZ,KAAK,SAASoZ,OAAQ,SAACze,GAAK,OAAKW,cAAC+f,GAAWxc,YAAA,GAAKlE,GAAS,IAClEW,cAAC6d,IAAK,CAACnZ,KAAK,QAAQoZ,OAAQ,SAACze,GAAK,OAAKW,cAACggB,GAAUzc,YAAA,GAAKlE,GAAS,IAChEW,cAAC4U,IAAQ,CAACoJ,KAAK,IAAIrd,GAAG,uBAI5B0c,SAAS4C,eAAe,Q,kCC1B1B,OAAe,cAA0B,sC","file":"static/js/main.f3048b59.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/qevla_logo1.cc4e1445.png\";","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard React - v1.2.1\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\r\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nconst Chart = require(\"chart.js\");\r\n//\r\n// Chart extension for making the bars rounded\r\n// Code from: https://codepen.io/jedtrow/full/ygRYgo\r\n//\r\n\r\nChart.elements.Rectangle.prototype.draw = function () {\r\n  var ctx = this._chart.ctx;\r\n  var vm = this._view;\r\n  var left, right, top, bottom, signX, signY, borderSkipped, radius;\r\n  var borderWidth = vm.borderWidth;\r\n  // Set Radius Here\r\n  // If radius is large enough to cause drawing errors a max radius is imposed\r\n  var cornerRadius = 6;\r\n\r\n  if (!vm.horizontal) {\r\n    // bar\r\n    left = vm.x - vm.width / 2;\r\n    right = vm.x + vm.width / 2;\r\n    top = vm.y;\r\n    bottom = vm.base;\r\n    signX = 1;\r\n    signY = bottom > top ? 1 : -1;\r\n    borderSkipped = vm.borderSkipped || \"bottom\";\r\n  } else {\r\n    // horizontal bar\r\n    left = vm.base;\r\n    right = vm.x;\r\n    top = vm.y - vm.height / 2;\r\n    bottom = vm.y + vm.height / 2;\r\n    signX = right > left ? 1 : -1;\r\n    signY = 1;\r\n    borderSkipped = vm.borderSkipped || \"left\";\r\n  }\r\n\r\n  // Canvas doesn't allow us to stroke inside the width so we can\r\n  // adjust the sizes to fit if we're setting a stroke on the line\r\n  if (borderWidth) {\r\n    // borderWidth shold be less than bar width and bar height.\r\n    var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\r\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\r\n    var halfStroke = borderWidth / 2;\r\n    // Adjust borderWidth when bar top position is near vm.base(zero).\r\n    var borderLeft = left + (borderSkipped !== \"left\" ? halfStroke * signX : 0);\r\n    var borderRight =\r\n      right + (borderSkipped !== \"right\" ? -halfStroke * signX : 0);\r\n    var borderTop = top + (borderSkipped !== \"top\" ? halfStroke * signY : 0);\r\n    var borderBottom =\r\n      bottom + (borderSkipped !== \"bottom\" ? -halfStroke * signY : 0);\r\n    // not become a vertical line?\r\n    if (borderLeft !== borderRight) {\r\n      top = borderTop;\r\n      bottom = borderBottom;\r\n    }\r\n    // not become a horizontal line?\r\n    if (borderTop !== borderBottom) {\r\n      left = borderLeft;\r\n      right = borderRight;\r\n    }\r\n  }\r\n\r\n  ctx.beginPath();\r\n  ctx.fillStyle = vm.backgroundColor;\r\n  ctx.strokeStyle = vm.borderColor;\r\n  ctx.lineWidth = borderWidth;\r\n\r\n  // Corner points, from bottom-left to bottom-right clockwise\r\n  // | 1 2 |\r\n  // | 0 3 |\r\n  var corners = [\r\n    [left, bottom],\r\n    [left, top],\r\n    [right, top],\r\n    [right, bottom],\r\n  ];\r\n\r\n  // Find first (starting) corner with fallback to 'bottom'\r\n  var borders = [\"bottom\", \"left\", \"top\", \"right\"];\r\n  var startCorner = borders.indexOf(borderSkipped, 0);\r\n  if (startCorner === -1) {\r\n    startCorner = 0;\r\n  }\r\n\r\n  function cornerAt(index) {\r\n    return corners[(startCorner + index) % 4];\r\n  }\r\n\r\n  // Draw rectangle from 'startCorner'\r\n  var corner = cornerAt(0);\r\n  ctx.moveTo(corner[0], corner[1]);\r\n\r\n  for (var i = 1; i < 4; i++) {\r\n    corner = cornerAt(i);\r\n    let nextCornerId = i + 1;\r\n    if (nextCornerId === 4) {\r\n      nextCornerId = 0;\r\n    }\r\n\r\n    // let nextCorner = cornerAt(nextCornerId);\r\n\r\n    let width = corners[2][0] - corners[1][0];\r\n    let height = corners[0][1] - corners[1][1];\r\n    let x = corners[1][0];\r\n    let y = corners[1][1];\r\n    // eslint-disable-next-line\r\n    var radius = cornerRadius;\r\n\r\n    // Fix radius being too large\r\n    if (radius > height / 2) {\r\n      radius = height / 2;\r\n    }\r\n    if (radius > width / 2) {\r\n      radius = width / 2;\r\n    }\r\n\r\n    ctx.moveTo(x + radius, y);\r\n    ctx.lineTo(x + width - radius, y);\r\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n    ctx.lineTo(x + width, y + height - radius);\r\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n    ctx.lineTo(x + radius, y + height);\r\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n    ctx.lineTo(x, y + radius);\r\n    ctx.quadraticCurveTo(x, y, x + radius, y);\r\n  }\r\n\r\n  ctx.fill();\r\n  if (borderWidth) {\r\n    ctx.stroke();\r\n  }\r\n};\r\n\r\nvar mode = \"light\"; //(themeMode) ? themeMode : 'light';\r\nvar fonts = {\r\n  base: \"Open Sans\",\r\n};\r\n\r\n// Colors\r\nvar colors = {\r\n  gray: {\r\n    100: \"#f6f9fc\",\r\n    200: \"#e9ecef\",\r\n    300: \"#dee2e6\",\r\n    400: \"#ced4da\",\r\n    500: \"#adb5bd\",\r\n    600: \"#8898aa\",\r\n    700: \"#525f7f\",\r\n    800: \"#32325d\",\r\n    900: \"#212529\",\r\n  },\r\n  theme: {\r\n    default: \"#172b4d\",\r\n    primary: \"#5e72e4\",\r\n    secondary: \"#f4f5f7\",\r\n    info: \"#11cdef\",\r\n    success: \"#2dce89\",\r\n    danger: \"#f5365c\",\r\n    warning: \"#fb6340\",\r\n  },\r\n  black: \"#12263F\",\r\n  white: \"#FFFFFF\",\r\n  transparent: \"transparent\",\r\n};\r\n\r\n// Methods\r\n\r\n// Chart.js global options\r\nfunction chartOptions() {\r\n  // Options\r\n  var options = {\r\n    defaults: {\r\n      global: {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        defaultColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\r\n        defaultFontColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\r\n        defaultFontFamily: fonts.base,\r\n        defaultFontSize: 13,\r\n        layout: {\r\n          padding: 0,\r\n        },\r\n        legend: {\r\n          display: false,\r\n          position: \"bottom\",\r\n          labels: {\r\n            usePointStyle: true,\r\n            padding: 16,\r\n          },\r\n        },\r\n        elements: {\r\n          point: {\r\n            radius: 0,\r\n            backgroundColor: colors.theme[\"primary\"],\r\n          },\r\n          line: {\r\n            tension: 0.4,\r\n            borderWidth: 4,\r\n            borderColor: colors.theme[\"primary\"],\r\n            backgroundColor: colors.transparent,\r\n            borderCapStyle: \"rounded\",\r\n          },\r\n          rectangle: {\r\n            backgroundColor: colors.theme[\"warning\"],\r\n          },\r\n          arc: {\r\n            backgroundColor: colors.theme[\"primary\"],\r\n            borderColor: mode === \"dark\" ? colors.gray[800] : colors.white,\r\n            borderWidth: 4,\r\n          },\r\n        },\r\n        tooltips: {\r\n          enabled: true,\r\n          mode: \"index\",\r\n          intersect: false,\r\n        },\r\n      },\r\n      doughnut: {\r\n        cutoutPercentage: 83,\r\n        legendCallback: function (chart) {\r\n          var data = chart.data;\r\n          var content = \"\";\r\n\r\n          data.labels.forEach(function (label, index) {\r\n            var bgColor = data.datasets[0].backgroundColor[index];\r\n\r\n            content += '<span class=\"chart-legend-item\">';\r\n            content +=\r\n              '<i class=\"chart-legend-indicator\" style=\"background-color: ' +\r\n              bgColor +\r\n              '\"></i>';\r\n            content += label;\r\n            content += \"</span>\";\r\n          });\r\n\r\n          return content;\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  // yAxes\r\n  Chart.scaleService.updateScaleDefaults(\"linear\", {\r\n    gridLines: {\r\n      borderDash: [2],\r\n      borderDashOffset: [2],\r\n      color: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\r\n      drawBorder: false,\r\n      drawTicks: false,\r\n      lineWidth: 0,\r\n      zeroLineWidth: 0,\r\n      zeroLineColor: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\r\n      zeroLineBorderDash: [2],\r\n      zeroLineBorderDashOffset: [2],\r\n    },\r\n    ticks: {\r\n      beginAtZero: true,\r\n      padding: 10,\r\n      callback: function (value) {\r\n        if (!(value % 10)) {\r\n          return value;\r\n        }\r\n      },\r\n    },\r\n  });\r\n\r\n  // xAxes\r\n  Chart.scaleService.updateScaleDefaults(\"category\", {\r\n    gridLines: {\r\n      drawBorder: false,\r\n      drawOnChartArea: false,\r\n      drawTicks: false,\r\n    },\r\n    ticks: {\r\n      padding: 20,\r\n    },\r\n  });\r\n\r\n  return options;\r\n}\r\n\r\n// Parse global options\r\nfunction parseOptions(parent, options) {\r\n  for (var item in options) {\r\n    if (typeof options[item] !== \"object\") {\r\n      parent[item] = options[item];\r\n    } else {\r\n      parseOptions(parent[item], options[item]);\r\n    }\r\n  }\r\n}\r\n\r\n// Example 1 of Chart inside src/views/Index.js (Sales value - Card)\r\nlet chartExample1 = {\r\n  options: {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            color: colors.gray[900],\r\n            zeroLineColor: colors.gray[900],\r\n          },\r\n          ticks: {\r\n            callback: function (value) {\r\n              if (!(value % 10)) {\r\n                return \"$\" + value + \"k\";\r\n              }\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    tooltips: {\r\n      callbacks: {\r\n        label: function (item, data) {\r\n          var label = data.datasets[item.datasetIndex].label || \"\";\r\n          var yLabel = item.yLabel;\r\n          var content = \"\";\r\n\r\n          if (data.datasets.length > 1) {\r\n            content += label;\r\n          }\r\n\r\n          content += \"$\" + yLabel + \"k\";\r\n          return content;\r\n        },\r\n      },\r\n    },\r\n  },\r\n  data1: (canvas) => {\r\n    return {\r\n      labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n      datasets: [\r\n        {\r\n          label: \"Performance\",\r\n          data: [0, 20, 10, 30, 15, 40, 20, 60, 60],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  data2: (canvas) => {\r\n    return {\r\n      labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n      datasets: [\r\n        {\r\n          label: \"Performance\",\r\n          data: [0, 20, 5, 25, 10, 30, 15, 40, 40],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n};\r\n\r\n// Example 2 of Chart inside src/views/Index.js (Total orders - Card)\r\nlet chartExample2 = {\r\n  options: {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            callback: function (value) {\r\n              if (!(value % 10)) {\r\n                //return '$' + value + 'k'\r\n                return value;\r\n              }\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    tooltips: {\r\n      callbacks: {\r\n        label: function (item, data) {\r\n          var label = data.datasets[item.datasetIndex].label || \"\";\r\n          var yLabel = item.yLabel;\r\n          var content = \"\";\r\n          if (data.datasets.length > 1) {\r\n            content += label;\r\n          }\r\n          content += yLabel;\r\n          return content;\r\n        },\r\n      },\r\n    },\r\n  },\r\n  data: {\r\n    labels: [\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n    datasets: [\r\n      {\r\n        label: \"Sales\",\r\n        data: [25, 20, 30, 22, 17, 29],\r\n        maxBarThickness: 10,\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nmodule.exports = {\r\n  chartOptions, // used inside src/views/Index.js\r\n  parseOptions, // used inside src/views/Index.js\r\n  chartExample1, // used inside src/views/Index.js\r\n  chartExample2, // used inside src/views/Index.js\r\n};\r\n","export default __webpack_public_path__ + \"static/media/team-4-800x800.99c612eb.jpg\";","export default __webpack_public_path__ + \"static/media/team-1-800x800.fa5a7ac2.jpg\";","export default __webpack_public_path__ + \"static/media/github.f7165d3e.svg\";","export default __webpack_public_path__ + \"static/media/google.952443d7.svg\";","import { Link } from \"react-router-dom\";\r\nimport React from \"react\";\r\n// reactstrap components\r\nimport {\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  Form,\r\n  FormGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  Input,\r\n  InputGroup,\r\n  Navbar,\r\n  Nav,\r\n  Container,\r\n  Media,\r\n} from \"reactstrap\";\r\n\r\n  function getFormValues() {\r\n    const storedValues = localStorage.getItem(\"user\");\r\n    if (!storedValues)\r\n      return {\r\n        email: \"\",\r\n        message: \"\",\r\n        name: \"\",\r\n        telephone: \"\",\r\n      };\r\n    return JSON.parse(storedValues);\r\n  }\r\n\r\nconst AdminNavbar = (props) => {\r\n  const [user, setUser] = React.useState(getFormValues);\r\n\r\n\r\n    React.useEffect(() => {\r\n      localStorage.getItem(\"user\", JSON.stringify(user));\r\n    }, [user]);\r\n\r\n    console.log(\"User data\", user);\r\n\r\n     const logout= () => {\r\n        localStorage.clear();\r\n        window.location.href = '/';\r\n    }\r\n  return (\r\n    <>\r\n      <Navbar className=\"navbar-top navbar-dark\" expand=\"md\" id=\"navbar-main\">\r\n        <Container fluid>\r\n          <Link\r\n            className=\"h4 mb-0 text-white text-uppercase d-none d-lg-inline-block\"\r\n            to=\"/\"\r\n          >\r\n            {props.brandText}\r\n          </Link>\r\n          {/* <Form className=\"navbar-search navbar-search-dark form-inline mr-3 d-none d-md-flex ml-lg-auto\">\r\n            <FormGroup className=\"mb-0\">\r\n              <InputGroup className=\"input-group-alternative\">\r\n                <InputGroupAddon addonType=\"prepend\">\r\n                  <InputGroupText>\r\n                    <i className=\"fas fa-search\" />\r\n                  </InputGroupText>\r\n                </InputGroupAddon>\r\n                <Input placeholder=\"Search\" type=\"text\" />\r\n              </InputGroup>\r\n            </FormGroup>\r\n          </Form> */}\r\n          <Nav className=\"align-items-center d-none d-md-flex\" navbar>\r\n            <UncontrolledDropdown nav>\r\n              <DropdownToggle className=\"pr-0\" nav>\r\n                <Media className=\"align-items-center\">\r\n                  <span className=\"avatar avatar-sm rounded-circle\">\r\n                    <img\r\n                      alt=\"...\"\r\n                      src={\r\n                        require(\"../../assets/img/theme/team-4-800x800.jpg\")\r\n                          .default\r\n                      }\r\n                    />\r\n                  </span>\r\n                  <Media className=\"ml-2 d-none d-lg-block\">\r\n                    <span className=\"mb-0 text-sm font-weight-bold\">\r\n                      {user.first_name}\r\n                    </span>\r\n                  </Media>\r\n                </Media>\r\n              </DropdownToggle>\r\n              <DropdownMenu className=\"dropdown-menu-arrow\" right>\r\n                <DropdownItem className=\"noti-title\" header tag=\"div\">\r\n                  <h6 className=\"text-overflow m-0\">Welcome!</h6>\r\n                </DropdownItem>\r\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\r\n                  <i className=\"ni ni-single-02\" />\r\n                  <span>My profile</span>\r\n                </DropdownItem>\r\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\r\n                  <i className=\"ni ni-settings-gear-65\" />\r\n                  <span>Settings</span>\r\n                </DropdownItem>\r\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\r\n                  <i className=\"ni ni-calendar-grid-58\" />\r\n                  <span>Activity</span>\r\n                </DropdownItem>\r\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\r\n                  <i className=\"ni ni-support-16\" />\r\n                  <span>Support</span>\r\n                </DropdownItem>\r\n                <DropdownItem divider />\r\n                <DropdownItem href=\"#pablo\" onClick={(e) => logout()}>\r\n                  <i className=\"ni ni-user-run\" />\r\n                  <span>Logout</span>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </Nav>\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminNavbar;\r\n","\r\nimport { Container, Row, Col, Nav, NavItem, NavLink } from \"reactstrap\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <Row className=\"align-items-center justify-content-xl-between\">\r\n        <Col xl=\"6\">\r\n          <div className=\"copyright text-center text-xl-left text-muted\">\r\n            © {new Date().getFullYear()}{\" \"}\r\n            <p\r\n              className=\"font-weight-bold ml-1\"\r\n              href=\"\"\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n            >\r\n              Qevla Inc\r\n            </p>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","\r\n/*eslint-disable*/\r\nimport { useState } from \"react\";\r\nimport { NavLink as NavLinkRRD, Link } from \"react-router-dom\";\r\n// nodejs library to set properties for components\r\nimport { PropTypes } from \"prop-types\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Collapse,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  InputGroup,\r\n  Media,\r\n  NavbarBrand,\r\n  Navbar,\r\n  NavItem,\r\n  NavLink,\r\n  Nav,\r\n  Progress,\r\n  Table,\r\n  Container,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\n\r\nvar ps;\r\n\r\nconst Sidebar = (props) => {\r\n  const [collapseOpen, setCollapseOpen] = useState();\r\n  // verifies if routeName is the one active (in browser input)\r\n  const activeRoute = (routeName) => {\r\n    return props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\r\n  };\r\n  // toggles collapse between opened and closed (true/false)\r\n  const toggleCollapse = () => {\r\n    setCollapseOpen((data) => !data);\r\n  };\r\n  // closes the collapse\r\n  const closeCollapse = () => {\r\n    setCollapseOpen(false);\r\n  };\r\n  // creates the links that appear in the left menu / Sidebar\r\n  const createLinks = (routes) => {\r\n    return routes.map((prop, key) => {\r\n      return (\r\n        <NavItem key={key}>\r\n          <NavLink\r\n            to={prop.layout + prop.path}\r\n            tag={NavLinkRRD}\r\n            onClick={closeCollapse}\r\n            activeClassName=\"active\"\r\n          >\r\n            <i className={prop.icon} />\r\n            {prop.name}\r\n          </NavLink>\r\n        </NavItem>\r\n      );\r\n    });\r\n  };\r\n\r\n  const { bgColor, routes, logo } = props;\r\n  let navbarBrandProps;\r\n  if (logo && logo.innerLink) {\r\n    navbarBrandProps = {\r\n      to: logo.innerLink,\r\n      tag: Link,\r\n    };\r\n  } else if (logo && logo.outterLink) {\r\n    navbarBrandProps = {\r\n      href: logo.outterLink,\r\n      target: \"_blank\",\r\n    };\r\n  }\r\n\r\n  return (\r\n    <Navbar\r\n      className=\"navbar-vertical fixed-left navbar-light bg-white\"\r\n      expand=\"md\"\r\n      id=\"sidenav-main\"\r\n    >\r\n      <Container fluid>\r\n        {/* Toggler */}\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          onClick={toggleCollapse}\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n        {/* Brand */}\r\n        {logo ? (\r\n          <NavbarBrand className=\"pt-0\" {...navbarBrandProps}>\r\n            <img\r\n              alt={logo.imgAlt}\r\n              className=\"navbar-brand-img\"\r\n              src={logo.imgSrc}\r\n            />\r\n          </NavbarBrand>\r\n        ) : null}\r\n        {/* User */}\r\n        <Nav className=\"align-items-center d-md-none\">\r\n          <UncontrolledDropdown nav>\r\n            <DropdownToggle nav className=\"nav-link-icon\">\r\n              <i className=\"ni ni-bell-55\" />\r\n            </DropdownToggle>\r\n            <DropdownMenu\r\n              aria-labelledby=\"navbar-default_dropdown_1\"\r\n              className=\"dropdown-menu-arrow\"\r\n              right\r\n            >\r\n              <DropdownItem>Action</DropdownItem>\r\n              <DropdownItem>Another action</DropdownItem>\r\n              <DropdownItem divider />\r\n              <DropdownItem>Something else here</DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n          <UncontrolledDropdown nav>\r\n            <DropdownToggle nav>\r\n              <Media className=\"align-items-center\">\r\n                <span className=\"avatar avatar-sm rounded-circle\">\r\n                  <img\r\n                    alt=\"...\"\r\n                    src={\r\n                      require(\"../../assets/img/theme/team-1-800x800.jpg\")\r\n                        .default\r\n                    }\r\n                  />\r\n                </span>\r\n              </Media>\r\n            </DropdownToggle>\r\n            <DropdownMenu className=\"dropdown-menu-arrow\" right>\r\n              <DropdownItem className=\"noti-title\" header tag=\"div\">\r\n                <h6 className=\"text-overflow m-0\">Welcome!</h6>\r\n              </DropdownItem>\r\n              <DropdownItem to=\"/admin/user-profile\" tag={Link}>\r\n                <i className=\"ni ni-single-02\" />\r\n                <span>My profile</span>\r\n              </DropdownItem>\r\n              <DropdownItem to=\"/admin/user-profile\" tag={Link}>\r\n                <i className=\"ni ni-settings-gear-65\" />\r\n                <span>Settings</span>\r\n              </DropdownItem>\r\n              <DropdownItem to=\"/admin/user-profile\" tag={Link}>\r\n                <i className=\"ni ni-calendar-grid-58\" />\r\n                <span>Activity</span>\r\n              </DropdownItem>\r\n              <DropdownItem to=\"/admin/user-profile\" tag={Link}>\r\n                <i className=\"ni ni-support-16\" />\r\n                <span>Support</span>\r\n              </DropdownItem>\r\n              <DropdownItem divider />\r\n              <DropdownItem href=\"#pablo\" onClick={(e) => e.preventDefault()}>\r\n                <i className=\"ni ni-user-run\" />\r\n                <span>Logout</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n        </Nav>\r\n        {/* Collapse */}\r\n        <Collapse navbar isOpen={collapseOpen}>\r\n          {/* Collapse header */}\r\n          <div className=\"navbar-collapse-header d-md-none\">\r\n            <Row>\r\n              {logo ? (\r\n                <Col className=\"collapse-brand\" xs=\"6\">\r\n                  {logo.innerLink ? (\r\n                    <Link to={logo.innerLink}>\r\n                      <img alt={logo.imgAlt} src={logo.imgSrc} />\r\n                    </Link>\r\n                  ) : (\r\n                    <a href={logo.outterLink}>\r\n                      <img alt={logo.imgAlt} src={logo.imgSrc} />\r\n                    </a>\r\n                  )}\r\n                </Col>\r\n              ) : null}\r\n              <Col className=\"collapse-close\" xs=\"6\">\r\n                <button\r\n                  className=\"navbar-toggler\"\r\n                  type=\"button\"\r\n                  onClick={toggleCollapse}\r\n                >\r\n                  <span />\r\n                  <span />\r\n                </button>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          {/* Form */}\r\n          <Form className=\"mt-4 mb-3 d-md-none\">\r\n            <InputGroup className=\"input-group-rounded input-group-merge\">\r\n              <Input\r\n                aria-label=\"Search\"\r\n                className=\"form-control-rounded form-control-prepended\"\r\n                placeholder=\"Search\"\r\n                type=\"search\"\r\n              />\r\n              <InputGroupAddon addonType=\"prepend\">\r\n                <InputGroupText>\r\n                  <span className=\"fa fa-search\" />\r\n                </InputGroupText>\r\n              </InputGroupAddon>\r\n            </InputGroup>\r\n          </Form>\r\n          {/* Navigation */}\r\n          <Nav navbar>{createLinks(routes)}</Nav>\r\n          {/* Divider */}\r\n          <hr className=\"my-3\" />\r\n          {/* Heading */}\r\n        </Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nSidebar.defaultProps = {\r\n\r\n};\r\n\r\nSidebar.propTypes = {\r\n  // links that will be displayed inside the component\r\n  routes: PropTypes.arrayOf(PropTypes.object),\r\n  logo: PropTypes.shape({\r\n    // innerLink is for links that will direct the user within the app\r\n    // it will be rendered as <Link to=\"...\">...</Link> tag\r\n    innerLink: PropTypes.string,\r\n    // outterLink is for links that will direct the user outside the app\r\n    // it will be rendered as simple <a href=\"...\">...</a> tag\r\n    outterLink: PropTypes.string,\r\n    // the image src of the logo\r\n    imgSrc: PropTypes.string.isRequired,\r\n    // the alt for the img\r\n    imgAlt: PropTypes.string.isRequired,\r\n  }),\r\n};\r\n\r\nexport default Sidebar;\r\n","export const onboardingService = `${process.env.REACT_APP_API_BASE_URL}/api/user`;\r\nexport const authBaseUrl = `${process.env.REACT_APP_API_BASE_URL}/api/user`;\r\nexport const authUrl = `${process.env.REACT_APP_API_BASE_URL}/api/auth`;\r\n\r\n\r\n\r\nexport const base = process.env.REACT_APP_API_BASE_URL;\r\nexport const endpoints = {\r\n  //USER ONBOARDING RELATED\r\n  addUser: onboardingService.concat(`/signup`),\r\n  getDrivers: onboardingService.concat(`/get/all`),\r\n  getDriverById: onboardingService.concat(`/:id`),\r\n  getAdmins: onboardingService.concat(`/get/all`),\r\n  // getUserById: onboardingService.concat(`/\r\n  updateDriverById: onboardingService.concat(`/update/:id`),\r\n  deleteDriverById: onboardingService.concat(`/delete`),\r\n  // router.route(\"/status/:userId\").get(getRegistrationStatusById);\r\n  getDriverRegStatus: onboardingService.concat(`/status/:userId`),\r\n\r\n  //AUTH\r\n  login: authBaseUrl.concat(`/login`),\r\n  adminLogin: authBaseUrl.concat(`/admin-login`),\r\n  requestResetPassword: authUrl.concat(`/requestResetPassword`),\r\n  passwordReset: authUrl.concat(`/password-reset`),\r\n  //   register : authBaseUrl.concat(`\r\n};\r\n","import axios from \"axios\";\r\nimport { endpoints } from \"api-endpoints\";\r\n\r\nconst API_URL = \"/auth\";\r\n\r\nconst signup = (email, password) => {\r\n  return axios\r\n    .post(endpoints.addUSer, {\r\n      email,\r\n      password,\r\n    })\r\n    .then((response) => {\r\n      if (response.data.accessToken) {\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n      }\r\n\r\n      return response.data;\r\n    });\r\n};\r\n\r\nconst login = (email, password) => {\r\n  return axios\r\n    .post(endpoints.adminLogin, {\r\n      email,\r\n      password,\r\n    })\r\n    .then((response) => {\r\n      if (response.data.Token) {\r\n        window.localStorage.setItem(\"user\", JSON.stringify(response.data.user));\r\n      }\r\n      console.log(response.data.user);\r\n      return response.data;\r\n    });\r\n};\r\n\r\nconst requestPasswordReset = (email) => {\r\n  return axios\r\n    .post(endpoints.requestResetPassword, {\r\n      email,\r\n    })\r\n    .then((response) => {\r\n      if (response.data) {\r\n        window.localStorage.setItem(\"passReq\", JSON.stringify(response.data));\r\n      }\r\n      console.log(response.data);\r\n      return response.data;\r\n    });\r\n};\r\n\r\nconst passwordReset = (email) => {\r\n  return axios\r\n    .post(endpoints.passwordReset, {\r\n      email,\r\n    })\r\n    .then((response) => {\r\n      if (response.data) {\r\n        window.localStorage.setItem(\"passReq\", JSON.stringify(response.data));\r\n      }\r\n      console.log(response.data);\r\n      return response.data;\r\n    });\r\n};\r\n\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n  return JSON.parse(localStorage.getItem(\"user\"));\r\n};\r\n\r\nconst authService = {\r\n  signup,\r\n  login,\r\n  logout,\r\n  requestPasswordReset,\r\n  getCurrentUser,\r\n};\r\n\r\nexport default authService;\r\n","\r\nexport const flagYesOrNoArr: any = [\r\n  { name: true, label_value: \"Yes\", id: true },\r\n  { name: false, label_value: \"No\", id: false },\r\n];\r\nexport const approvalTypesArr: any = [\r\n  { name: true, label_value: \"Auto\" },\r\n  { name: false, label_value: \"Manual\" },\r\n];\r\nexport const approvalOptionArr: any = [\r\n  { name: \"sequential\", label_value: \"Sequential\" },\r\n  { name: \"non_sequential\", label_value: \"Non Sequential\" },\r\n];\r\nexport const authorizationTokenFlagArr: any = [\r\n  { name: true, label_value: \"All\" },\r\n  { name: false, label_value: \"All but one must have token\" },\r\n];\r\nexport const suspenseAccountResponseArr: any = [\r\n  { id: \"2\", code: \"2\", name: \"Suspense 2\" },\r\n  { id: \"1\", code: \"1\", name: \"Suspense 1\" },\r\n];\r\nexport const authenticationModesResponseArr: any = [\r\n  { id: \"2\", code: \"2\", name: \"Inbuilt\" },\r\n  { id: \"1\", code: \"1\", name: \"AD\" },\r\n];\r\nexport const userRightsResponseArr: any = [\r\n  { id: \"VIEW\", code: \"2\", name: \"VIEW\" },\r\n  { id: \"TRANSFER\", code: \"1\", name: \"TRANSFER\" },\r\n];\r\nexport const signatoryTypeArr: any = [\r\n  { name: \"individual\", label_value: \"Individual\" },\r\n  { name: \"group\", label_value: \"Group\" },\r\n];\r\nexport const tokenTypeArr: any = [\r\n  { id: \"2\", code: \"2\", name: \"HARD\" },\r\n  { id: \"1\", code: \"1\", name: \"SOFT\" },\r\n];\r\nexport const defaultNarrationArr: any = [\r\n  {\r\n    id: \"sender_narration\",\r\n    name: \"sender_narration\",\r\n    label_value: \"Sender narration\",\r\n  },\r\n  {\r\n    id: \"append_unique_id\",\r\n    name: \"append_unique_id\",\r\n    label_value: \"Append unique ID\",\r\n  },\r\n];\r\nexport const debitOptionArr: any = [\r\n  { name: \"lump_sum\", label_value: \"Lump sum (recommended)\" },\r\n  { name: \"debit_option\", label_value: \"Debit per transaction\" },\r\n];\r\nexport const platformsResponseArr: any = [\r\n  { id: \"MOBILE\", name: \"MOBILE\", label_value: \"Mobile\" },\r\n  { id: \"WEB\", name: \"WEB\", label_value: \"Web\" },\r\n];\r\n\r\nexport const currencyArr: any = [\r\n  { id: \"NGN\", name: \"Naira\", label_value: \"Naira\" },\r\n];\r\n// ,\r\n//   { id: \"EUR\", name: \"Euro\", label_value: \"Euro\" },\r\n//   { id: \"USD\", name: \"Dollar\", label_value: \"Dollar\" },\r\n//   { id: \"GBP\", name: \"Pounds\", label_value: \"Pounds\" },\r\nexport const requestTypeArr: any = [\r\n  { id: \"PENDING\", name: \"Pending\", label_value: \"Pending\" },\r\n  { id: \"APPROVED\", name: \"Approved\", label_value: \"Approved\" },\r\n  { id: \"DECLINED\", name: \"Declined\", label_value: \"Declined\" },\r\n];\r\nexport const regNumberPrefixArr: any = [\r\n  { id: \"RC\", name: \"RC\", label_value: \"Registered Company\" },\r\n  { id: \"BN\", name: \"BN\", label_value: \"Business Name\" },\r\n];\r\nexport const nextOfKinRelationshipArr: any = [\r\n  { id: \"BROTHER\", name: \"Brother\", label_value: \"Brother\" },\r\n  { id: \"SISTER\", name: \"Sister\", label_value: \"Sister\" },\r\n  { id: \"MOTHER\", name: \"Mother\", label_value: \"Mother\" },\r\n  { id: \"FATHER\", name: \"Father\", label_value: \"Father\" },\r\n  { id: \"SPOUSE\", name: \"Spouse\", label_value: \"Spouse\" },\r\n  { id: \"OTHERS\", name: \"Others\", label_value: \"Others\" },\r\n];\r\nexport const paymentFrequencyArr: any = [\r\n  { id: \"DAILY\", name: \"Daily\", label_value: \"Daily\" },\r\n  { id: \"MONTHLY\", name: \"Monthly\", label_value: \"Monthly\" },\r\n  { id: \"WEEKLY\", name: \"Weekly\", label_value: \"Weekly\" },\r\n  { id: \"BI_WEEKLY\", name: \"Bi-weekly\", label_value: \"Bi-weekly\" },\r\n];\r\nexport const complainTypesArr: any = [\r\n  {\r\n    id: \"SERVICE_REQUEST\",\r\n    name: \"Service request complaints\",\r\n    label_value: \"Service request complaints\",\r\n  },\r\n  {\r\n    id: \"TRANSACTION_COMPLAINTS\",\r\n    name: \"Transaction complaints\",\r\n    label_value: \"Transaction complaints\",\r\n  },\r\n];\r\nexport const stateInCountryArr: any = [\r\n  { id: \"LAG\", name: \"Lagos\", label_value: \"Lagos\" },\r\n  { id: \"ABJ\", name: \"Abuja\", label_value: \"Abuja\" },\r\n  { id: \"RIVERS\", name: \"Rivers\", label_value: \"Rivers\" },\r\n];\r\nexport const deliveryLocationsArr: any = [\r\n  { id: \"LEKKI\", name: \"Lekki\", label_value: \"Lekki\" },\r\n  { id: \"SURULERE\", name: \"Surulere\", label_value: \"Surulere\" },\r\n  { id: \"CALABAR\", name: \"Calabar\", label_value: \"Calabar\" },\r\n];\r\nexport const transferTypesOptionsArr: any = [\r\n  {\r\n    id: \"OWN_ACCOUNT_TRANSFER\",\r\n    name: \"Own account transfer\",\r\n    label_value: \"Own account transfer\",\r\n  },\r\n  {\r\n    id: \"CORPORATE_TO_PARALLEX\",\r\n    name: \"Transfer to parallex account\",\r\n    label_value: \"Transfer to parallex account\",\r\n  },\r\n  {\r\n    id: \"OTHER_BANKS\",\r\n    name: \"Transfer to other banks\",\r\n    label_value: \"Transfer to other banks\",\r\n  },\r\n  {\r\n    id: \"TRANSFER_TO_BENEFICIARY\",\r\n    name: \"Transfer to beneficiaries\",\r\n    label_value: \"Transfer to beneficiaries\",\r\n  },\r\n  {\r\n    id: \"INTERNATIONAL_TRANSFER\",\r\n    name: \"Transfer to international banks\",\r\n    label_value: \"Transfer to international banks\",\r\n  },\r\n  {\r\n    id: \"BULK_UPLOAD\",\r\n    name: \"Bulk upload \",\r\n    label_value: \"Bulk upload\",\r\n  },\r\n];\r\n\r\nexport const serviceRequestTypesOptionsArr: any = [\r\n  {\r\n    id: \"CHEQUEBOOK_REQUEST\",\r\n    name: \"Chequebook request\",\r\n    label_value: \"Chequebook request\",\r\n  },\r\n  {\r\n    id: \"STOP_CHEQUE_REQUEST\",\r\n    name: \"Stop cheque requests\",\r\n    label_value: \"Stop cheque requests\",\r\n  },\r\n  {\r\n    id: \"ISSUE_DEMAND_DRAFT_REQUEST\",\r\n    name: \"Issue demand draft requests\",\r\n    label_value: \"Issue demand draft requests\",\r\n  },\r\n  {\r\n    id: \"STANDING_ORDER_REQUEST\",\r\n    name: \"Standing order requests\",\r\n    label_value: \"Standing order requests\",\r\n  },\r\n  {\r\n    id: \"ACCOUNT_STATEMENT_REQUEST\",\r\n    name: \"Account statement requests\",\r\n    label_value: \"Account statement requests\",\r\n  },\r\n  {\r\n    id: \"TRANSACTION_COMPLAINT_REQUEST\",\r\n    name: \"Transaction complaint requests\",\r\n    label_value: \"Transaction complaint requests\",\r\n  },\r\n];\r\n\r\nexport const deliveryModeOptionsArr: any = [\r\n  { id: \"COURIER\", name: \"Courier\", label_value: \"Courier\" },\r\n  { id: \"BANK_LOCATION\", name: \"Bank location\", label_value: \"Bank location\" },\r\n];\r\nexport const accountTypeOptionsArr: any = [\r\n  { id: \"ODA\", name: \"Current\", label_value: \"Current\" },\r\n  { id: \"SBA\", name: \"Savings\", label_value: \"Savings\" },\r\n];\r\nexport const titleOptionsArr: any = [\r\n  { id: \"MR\", name: \"Mr.\", label_value: \"Mr.\" },\r\n  { id: \"MRS\", name: \"Mrs.\", label_value: \"Mrs.\" },\r\n  { id: \"DR\", name: \"Dr.\", label_value: \"Dr.\" },\r\n  { id: \"CHIEF\", name: \"Chief\", label_value: \"Chief\" },\r\n  { id: \"PASTOR\", name: \"Pastor\", label_value: \"Pastor\" },\r\n  { id: \"REVD.\", name: \"Revd.\", label_value: \"Revd.\" },\r\n];\r\nexport const genderOptionsArr: any = [\r\n  { id: \"MALE\", name: \"Male\", label_value: \"Male\" },\r\n  { id: \"FEMALE\", name: \"Female\", label_value: \"Female\" },\r\n];\r\nexport const religionOptionsArr: any = [\r\n  { id: \"CHRISTIANITY\", name: \"Christianity\", label_value: \"Christianity\" },\r\n  { id: \"ISLAM\", name: \"Islam\", label_value: \"Islam\" },\r\n  { id: \"TRADITIONAL\", name: \"Traditional\", label_value: \"Traditional\" },\r\n  { id: \"OTHERS\", name: \"Others\", label_value: \"Others\" },\r\n];\r\nexport const idTypeOptionsArr: any = [\r\n  {\r\n    id: \"NATIONAL_ID\",\r\n    name: \"National identification number\",\r\n    label_value: \"National identification number\",\r\n  },\r\n  {\r\n    id: \"DRIVER_LICENCE\",\r\n    name: \"Driver's licence\",\r\n    label_value: \"Driver's licence\",\r\n  },\r\n  {\r\n    id: \"INTERNATIONAL_PASSPORT\",\r\n    name: \"International passport\",\r\n    label_value: \"International passport\",\r\n  },\r\n];\r\n\r\nexport const priorityLevelOptionsArr: any = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n\r\nexport const countriesArr: any = [\r\n  { id: \"NG\", name: \"Nigeria\", label_value: \"Nigeria\" },\r\n  { id: \"US\", name: \"USA\", label_value: \"USA\" },\r\n  { id: \"NON-US\", name: \"Other countries\", label_value: \"Other countries\" },\r\n];\r\nexport const beneficiaryTypesOptionsArr: any = [\r\n  { id: \"SINGLE\", name: \"Single\", label_value: \"Single\" },\r\n  { id: \"MULTIPLE\", name: \"Multiple\", label_value: \"Multiple\" },\r\n];\r\nexport const debitModeOptionsArr: any = [\r\n  {\r\n    id: 1,\r\n    name: \"Single Debit Multiple Credit\",\r\n    label_value: \"Single Debit Multiple Credit\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Single Debit, Single Credit\",\r\n    label_value: \"Single Debit, Single Credit\",\r\n  },\r\n];\r\nexport const scheduleTransferActionOptionsArr: any = [\r\n  {\r\n    id: \"NEW_SCHEDULE\",\r\n    name: \"Create new schedule\",\r\n    label_value: \"Create new schedule\",\r\n  },\r\n  {\r\n    id: \"CANCEL_SCHEDULE\",\r\n    name: \"Cancel previous schedule\",\r\n    label_value: \"Cancel previous schedule\",\r\n  },\r\n  {\r\n    id: \"EDIT_PREVIOUS_SCHEDULE\",\r\n    name: \"Edit previous schedule\",\r\n    label_value: \"Edit previous schedule\",\r\n  },\r\n];\r\nexport const bankOptionsArr = [\r\n  {\r\n    id: \"UBA\",\r\n    name: \"United bank for Africa\",\r\n    label_value: \"United bank for Africa\",\r\n  },\r\n  { id: \"GTB\", name: \"GTB\", label_value: \"GTB\" },\r\n  {\r\n    id: \"FBN\",\r\n    name: \"First Bank of Nigeria\",\r\n    label_value: \"First Bank of Nigeria\",\r\n  },\r\n];\r\nexport const businessSectorsOptionsArr = [\r\n  {\r\n    id: \"MSME\",\r\n    name: \"MSME\",\r\n    label_value: \"MSME\",\r\n  },\r\n  { id: \"COMMERCIAL\", name: \"Commercial\", label_value: \"Commercial\" },\r\n  {\r\n    id: \"CORPORATE\",\r\n    name: \"Corporate\",\r\n    label_value: \"Corporate\",\r\n  },\r\n  {\r\n    id: \"PUBLIC_SECTOR\",\r\n    name: \"Public sector\",\r\n    label_value: \"Public sector\",\r\n  },\r\n];\r\nexport const businessNaturesOptionsArr = [\r\n  {\r\n    id: \"COMMERCE\",\r\n    name: \"Commerce\",\r\n    label_value: \"Commerce\",\r\n  },\r\n  { id: \"MANUFACTURING\", name: \"Manufacturing\", label_value: \"Manufacturing\" },\r\n  {\r\n    id: \"TEXTILE\",\r\n    name: \"Textile\",\r\n    label_value: \"Textile\",\r\n  },\r\n  {\r\n    id: \"IT\",\r\n    name: \"Information Technology\",\r\n    label_value: \"Information Technology\",\r\n  },\r\n];\r\nexport const companyCategoryOptionsArr = [\r\n  {\r\n    id: \"COMMERCE\",\r\n    name: \"Commerce\",\r\n    label_value: \"Commerce\",\r\n  },\r\n  { id: \"MANUFACTURING\", name: \"Manufacturing\", label_value: \"Manufacturing\" },\r\n  {\r\n    id: \"TEXTILE\",\r\n    name: \"Textile\",\r\n    label_value: \"Textile\",\r\n  },\r\n  {\r\n    id: \"IT\",\r\n    name: \"Information Technology\",\r\n    label_value: \"Information Technology\",\r\n  },\r\n];\r\nexport const businessTypesOptionsArr = [\r\n  {\r\n    id: \"LTD\",\r\n    name: \"Limited Liability Company\",\r\n    label_value: \"LTD\",\r\n  },\r\n  {\r\n    id: \"SOLE_PROPIETORSHIP\",\r\n    name: \"Sole propietorship\",\r\n    label_value: \"Sole propietorship\",\r\n  },\r\n  {\r\n    id: \"PARTNERSHIP\",\r\n    name: \"Partnership\",\r\n    label_value: \"Partnership\",\r\n  },\r\n  {\r\n    id: \"MDAS\",\r\n    name: \"MDAs (Ministry, Departments and Agencies)\",\r\n    label_value: \"MDAs (Ministry, Departments and Agencies)\",\r\n  },\r\n];\r\nexport const maritalStatusOptionsArr = [\r\n  {\r\n    id: \"SINGLE\",\r\n    name: \"Single\",\r\n    label_value: \"Single\",\r\n  },\r\n  {\r\n    id: \"MARRIED\",\r\n    name: \"Married\",\r\n    label_value: \"Married\",\r\n  },\r\n  {\r\n    id: \"WIDOW(ER)\",\r\n    name: \"Widow(er)\",\r\n    label_value: \"Widow(er)\",\r\n  },\r\n  {\r\n    id: \"DIVORCED\",\r\n    name: \"Divorced\",\r\n    label_value: \"Divorced\",\r\n  },\r\n];\r\n\r\nexport const responseCodes = {\r\n  NO_RECORD_FOUND: \"25\",\r\n  FAILED: \"01\",\r\n  SUCCESSFUL: \"00\",\r\n  BAD_REQUEST: \"400\",\r\n  UNAUTHORIZED: \"401\",\r\n  INVALID_GRANT: \"INVALID_GRANT\",\r\n  SERVICE_UNAVAILABLE: \"503\",\r\n  CHANGE_PASSWORD: \"CHANGE_PASSWORD\",\r\n  ERROR_OCCURRED: \"ERROR OCCURRED\",\r\n  ACCESS_DENIED: \"ACCESS DENIED\",\r\n  PAGE_NOT_FOUND: \"404\",\r\n};\r\n\r\nexport const menuCodes = {\r\n  CREATE_MENU: \"21\",\r\n  ASSIGN_MENU_TO_ROLE: \"14\",\r\n  UPDATE_MENU: \"21\",\r\n  RESET_PASSWORD: \"4\",\r\n  CHANGE_PASSWORD: \"4\",\r\n  ONBOARD_CORPORATE_SME: \"3\",\r\n  ONBOARD_CORPORATE_ADMIN: \"21\",\r\n  APPROVE_REQUEST: \"21\",\r\n  CREATE_CORPORATE: \"3\",\r\n  CREATE_MANDATE: \"7\",\r\n  CREATE_USER_ACCOUNT_ACCESS: \"9\",\r\n  FUND_TRANSFER: \"25\",\r\n  UPDATE_USER_PROFILE: \"4\",\r\n  TRANSFER_WITHIN: \"25\",\r\n  ENABLE_OR_DISABLE_USER: \"4\",\r\n  ADD_ACCOUNT_TO_CORPORATE: \"8\",\r\n  CREATE_CORPORATE_DEPARTMENT: \"13\",\r\n  UPDATE_USER_DETAILS: \"4\",\r\n  UPDATE_DEPARTMENT_DETAILS: \"13\",\r\n\r\n};\r\n\r\nexport const forbiddenResponseBody = {\r\n  responseCode: \"403\",\r\n  description: \"You do not have sufficient right for this operation\",\r\n};\r\n\r\nexport const transactionLimit = 100000000;\r\n\r\nexport const extraSMEDetails = {\r\n  tokenEnabled: true,\r\n  soleProprietor: true,\r\n  hasToken: true,\r\n  sme: true,\r\n  verifierEnabled: false,\r\n  verifierTokenEnabled: false,\r\n  inputterTokenEnabled: true,\r\n  authorizerTokenEnabled: true,\r\n  corporateTypeId: \"4\",\r\n};\r\n\r\nexport const metricValues = {\r\n  resendTime: 10,\r\n  length: 6,\r\n  bvnLength: 11,\r\n  transactionPinLength: 8,\r\n  pinValidationTimeout: 3000,\r\n  maxFileSize: 4000000,\r\n  accountNumberLength: 10,\r\n  timeToPageReloadAfterSuccess: 2000,\r\n  monthlyTurnoverMinimum: 0,\r\n  monthlyTurnoverMaximum: 100,\r\n  monthlyTurnoverStep: 10,\r\n  monthlyTurnoverMultiplier: 1000000,\r\n  corporateCodeMinLength: 2,\r\n  usernameMinLength: 4,\r\n  taxIdLength: 13,\r\n  minRegNumberLength: 3,\r\n  minPhoneNumberLength: 11,\r\n  minCorporateCodeLength: 4,\r\n  solePropietorBusinessTypeCode: \"2\",\r\n  minimumTransferLimit: 1,\r\n};\r\n\r\nexport const baseUrl = window.location.origin;\r\n\r\nexport const currentAppVersion = {\r\n  version: process.env.REACT_APP_BUILD_VERSION,\r\n};\r\n\r\nexport const hiddenMenuFieldsArr = [\r\n  \"authStat\",\r\n  \"recordStat\",\r\n  \"amount\",\r\n  \"visible\",\r\n  \"lastUpdatedById\",\r\n  \"lastUpdatedDate\",\r\n  \"transactionMenu\",\r\n  \"menuAvailability\",\r\n  \"transactionTypeId\",\r\n  \"defaultMenu\",\r\n  \"requestHeader\",\r\n  \"menuHeader\",\r\n  \"moduleId\",\r\n  \"newMenu\",\r\n  \"menuHeaderId\",\r\n  \"displayOrder\",\r\n  \"createdById\",\r\n  \"chargeAmount\",\r\n  \"expectedSignatoryCount\",\r\n  \"actualSignatoryCount\",\r\n  \"financial\",\r\n  \"id\",\r\n  \"lastUpdatedById\",\r\n  \"lastUpdatedDate\",\r\n  \"authStat\",\r\n  \"recordStat\",\r\n  \"corporateId\",\r\n  \"mandateId\",\r\n  \"mandateSignatoryId\",\r\n  \"mandateTypeId\",\r\n  \"expectedSignatoryCount\",\r\n  \"actualSignatoryCount\",\r\n  \"visible\",\r\n  \"transactionTypeId\",\r\n  \"transactionDescription\",\r\n  \"amount\",\r\n  \"approvalLevel\",\r\n  \"expectedUserApprovalId\",\r\n  \"expectedGroupApprovalId\",\r\n  \"debitAccountNumber\",\r\n  \"menuId\",\r\n  \"chargeAmount\",\r\n];\r\n\r\nexport const menuOpsInvisibleItems = [\r\n  \"authStat\",\r\n  \"recordStat\",\r\n  \"amount\",\r\n  \"visible\",\r\n  \"lastUpdatedById\",\r\n  \"lastUpdatedDate\",\r\n  \"transactionMenu\",\r\n  \"menuAvailability\",\r\n  \"transactionTypeId\",\r\n  \"defaultMenu\",\r\n  \"requestHeader\",\r\n  \"moduleId\",\r\n  \"menuHeaderId\",\r\n  \"displayOrder\",\r\n  \"createdById\",\r\n  \"name\",\r\n  \"code\",\r\n  \"platformId\",\r\n  \"roleId\",\r\n  \"id\",\r\n  \"createdDate\",\r\n  \"createdBy\",\r\n  \"parentMenu\",\r\n  \"childMenu\",\r\n  \"transactionMenu\",\r\n  \"menuHeader\",\r\n  \"newMenu\",\r\n  \"financial\",\r\n];\r\n\r\nexport const radiosItems = [\"parentMenu\", \"childMenu\", \"transactionMenu\"];\r\n\r\nexport const visibleMenuFieldItems = [\r\n  \"menuController\",\r\n  \"mobileMenuController\",\r\n  \"serviceEndpoint\",\r\n  \"parentMenu\",\r\n  \"childMenu\",\r\n  \"menuName\",\r\n  \"menuAvailability\",\r\n  \"transactionMenu\",\r\n  \"description\",\r\n];\r\n\r\nexport const searchableMenufieldsArr = [\"createdById\", \"menuTypeId\"];\r\n\r\nexport const rangePickerRequestTypesArr = [\"APPROVED\", \"DECLINED\"];\r\n\r\nexport const visibleTransactionReceiptFieldsArr = [\r\n  \"tranDate\",\r\n  \"tranStatus\",\r\n  \"tranNarration\",\r\n  \"tranAmount\",\r\n  \"beneficiariesAcc\",\r\n  \"beneficiariesName\",\r\n  \"bankName\"\r\n];\r\n\r\nexport const emailPattern =\r\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\nexport const TINPattern = /^(\\d{8})-\\d{4}$/;\r\nexport const accountNumberPattern = /^(\\d{10})$/;\r\nexport const bvnPattern = /^(\\d{11})$/;\r\nexport const environmentV = \"NORMAL\";\r\nexport const corporateCodePrefix = \"PAR\";\r\nexport const corporateNameSubstringLength = 3;\r\nexport const defaultApprovalLimit = 10000;\r\nexport const defaultTransferLimit = 10000;\r\nexport const defaultTransactionLimit = 100000000;\r\nexport const defaultCurrency = \"NGN\";\r\nexport const defaultAppValues = {\r\n  defaultPaymentChannel: 1,\r\n  corporateChannelId: \"1\",\r\n  defaultTnxFees: \"50\",\r\n  showOnlyCorporateProducts: true,\r\n  corporateProductsFlag: \"C\",\r\n  parallexBankCode: !process.env.NODE_ENV || process.env.NODE_ENV === 'development' ? \"999015\" : \"000030\",\r\n  parallexBankName: \"Parallex Bank\",\r\n  accountType: \"CASA\",\r\n  businessTypeCodeSolePropietor: \"2\",\r\n  typeIdForOtherNonSME: \"3\",\r\n  senderPaysFee: true,\r\n  idleTimeoutInMs: 600000,\r\n  defaultCurrency: \"NGN\",\r\n  defaultCurrencyName: \"Nigerian Naira (NGN)\",\r\n  defaultCountryOfIncorporation: \"NGN\",\r\n  defaultBusinessTypePrefix: \"RC\",\r\n  debitMode: \"1\",\r\n  groupUserTypeId: \"2\",\r\n  alertTimeout: 5000,\r\n  baseCurrency: \"EUR\",\r\n  adminMakerUserTypeId: \"4\",\r\n  adminCheckerUserTypeId: \"3\",\r\n  smeCorporateTypeId: \"4\",\r\n  smeBusinessTypeId: \"2\",\r\n  channel: \"WEB\",\r\n  ftChannel: \"2\",\r\n  isFtDirectToParallex: false,\r\n  transactionLocation: \"LAGOS\",\r\n  postingOptionId: \"1\",\r\n  suspenseAccountId: \"1\",\r\n  narrationOptionId: \"1\",\r\n  smeAdminBusinessTypeDefaults: {\r\n    approvalLimit: defaultApprovalLimit,\r\n    transferLimit: defaultTransferLimit,\r\n    globalAccountAccessEnabled: true,\r\n    signatory: true,\r\n    autoApprovalEnabled: true,\r\n    tokenEnabled: true,\r\n    tokenDelivered: false,\r\n    viewBalanceEnabled: true,\r\n    authenticationModeId: 1,\r\n    userTypeId: \"1\",\r\n  },\r\n  smeCorporateBusinessTypeDefaults: {\r\n    autoApprovalEnabled: true,\r\n    verifierTokenEnabled: false,\r\n    inputterTokenEnabled: true,\r\n    authorizerTokenEnabled: true,\r\n    verifierEnabled: false,\r\n    hasToken: true,\r\n    soleProprietor: true,\r\n    sme: true,\r\n  },\r\n  transferTypesString: \"Transfer\",\r\n  mandateTypes: {\r\n    accountBasedMandateType: \"1\",\r\n    transactionTypeBasedMandateType: \"2\",\r\n    moduleBasedMandateType: \"3\",\r\n    deptBasedMandateType: \"4\",\r\n    genericBasedMandateType: \"5\",\r\n    amountBasedMandateType: \"6\",\r\n  },\r\n};\r\nexport const appUserRoles = {\r\n  SYSTEM_WIDE_MAKER: 2,\r\n  SYSTEM_WIDE_CHECKER: 1,\r\n  REGULAR_CORPORATE_MAKER: 3,\r\n  REGULAR_CORPORATE_CHECKER: 4,\r\n};\r\nexport const pageFlows = {\r\n  ACCOUNT_CREATION: \"account_creation\",\r\n  CORPORATE_PROFILING: \"corporate_profiling\",\r\n  CORPORATE_ONBOARDING: \"corporate_onboarding\",\r\n};\r\nexport const geolocationFinderUrl =\r\n  \"https://geolocation-db.com/json/0f761a30-fe14-11e9-b59f-e53803842572\";\r\n// export const apiKeyForForexApi = \"01a06eaf0d0836be23655de6276542d5\";\r\n// export const forexApiUrl =\r\n//   \"http://api.exchangeratesapi.io/v1/latest?access_key=\";\r\n","import axios, { AxiosInstance } from \"axios\";\r\nimport { authBaseUrl } from \"../api-endpoints\";\r\nimport { encryptStorage } from \"../utils/encryptor\";\r\nimport {\r\n  clearTimeouts,\r\n  isEmptyString,\r\n  isNullOrUndefined,\r\n  isTokenCloseToExpiry,\r\n  tokenRefreshTimeout,\r\n  tokenRequeryProcessing,\r\n} from \"../utils/tools\";\r\nimport { handleMyErrors } from \"./error-handler-service\";\r\nimport queryString from \"query-string\";\r\n\r\nconst myOauth2Axios: AxiosInstance = axios.create({\r\n  baseURL: \"\",\r\n});\r\nmyOauth2Axios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\nmyOauth2Axios.defaults.headers.post[\"Accept\"] = \"application/json\";\r\nmyOauth2Axios.defaults.timeout = 120000;\r\nmyOauth2Axios.interceptors.request.use((request) => {\r\n  return request;\r\n});\r\n\r\nfunction setJwt(jwt: string | null) {\r\n  myOauth2Axios.defaults.headers.common[\"Authorization\"] = `Bearer ${jwt}`;\r\n}\r\n\r\nfunction getRefreshToken() {\r\n  let tokenVal = encryptStorage.getItem(\"refreshToken\");\r\n  return tokenVal;\r\n}\r\n\r\nfunction getJwt() {\r\n  let tokenVal: string = myOauth2Axios.defaults.headers.common[\"Authorization\"];\r\n\r\n  if (!isNullOrUndefined(tokenVal)) {\r\n    let tokenValSplit = tokenVal.split(\" \");\r\n    if (tokenValSplit.length > 1 && tokenValSplit[1].length > 0) {\r\n      return tokenVal;\r\n    } else {\r\n      return null;\r\n    }\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport const listenForTokenExpiry = async () => {\r\n  let expiresAt = encryptStorage.getItem(\"expiresAt\");\r\n  if (isTokenCloseToExpiry(Number(expiresAt) ?? -1)) {\r\n    await refreshToken();\r\n  }\r\n};\r\n\r\nexport const refreshToken = async () => {\r\n  try {\r\n    let refT = getRefreshToken();\r\n    if (!isNullOrUndefined(refT) || !isEmptyString(refT)) {\r\n      const options = {\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          Authorization: \"Basic \".concat(\r\n            process.env.REACT_APP_BASIC_AUTH ?? \"\"\r\n          ),\r\n        },\r\n      };\r\n      const url = `${authBaseUrl}/oauth/token`;\r\n      const { status, data } = await myOauth2Axios.post(\r\n        url,\r\n        queryString.stringify({\r\n          grant_type: \"refresh_token\",\r\n          client_id: \"SYSTEM\",\r\n          refresh_token: refT,\r\n        }),\r\n        options\r\n      );\r\n\r\n      if (status === 200 && data) {\r\n        const jwtToken = data.access_token;\r\n        clearTimeouts(tokenRefreshTimeout);\r\n        encryptStorage.setItem(\"refreshToken\", data.refresh_token);\r\n        tokenRequeryProcessing(jwtToken);\r\n\r\n        // recursiveCountdownTo(tRes.tokenRequeryInterval, true);\r\n        httpServiceInterfaceOauth2.setJwt(jwtToken);\r\n        return data;\r\n      }\r\n    }\r\n  } catch (err) {\r\n    httpServiceInterfaceOauth2.setJwt(\"\");\r\n    return handleMyErrors(err);\r\n  }\r\n};\r\n\r\nconst doGet = async (url: string, _config?: any) => {\r\n  let resData: any = {};\r\n  try {\r\n    // if (httpServiceInterfaceOauth2.getJwt() === null) {\r\n    //   await refreshToken();\r\n    // }\r\n    const { data } = await myOauth2Axios.get(url);\r\n    return data;\r\n  } catch (err) {\r\n    resData = handleMyErrors(err);\r\n  }\r\n  return resData;\r\n};\r\n\r\nconst doPost = async (url: string, requestBody: any, config: any = {}) => {\r\n  let resData: any;\r\n  try {\r\n    // await authHttpForUser();\r\n    const { data } = await myOauth2Axios.post(url, requestBody, config);\r\n    return data;\r\n  } catch (err) {\r\n    resData = handleMyErrors(err);\r\n  }\r\n  return resData;\r\n};\r\n\r\nconst doPut = async (url: string, requestBody: any, config: any = {}) => {\r\n  let resData: any;\r\n  try {\r\n    // await authHttpForUser();\r\n    const { data } = await myOauth2Axios.put(url, requestBody, config);\r\n    return data;\r\n  } catch (err) {\r\n    resData = handleMyErrors(err);\r\n  }\r\n  return resData;\r\n};\r\n\r\nexport const httpServiceInterfaceOauth2 = {\r\n  myAxios: axios,\r\n  setJwt: setJwt,\r\n  // setRefreshToken: setRefreshToken,\r\n  getJwt: getJwt,\r\n  get: doGet,\r\n  post: doPost,\r\n  put: doPut,\r\n};\r\n","export const encryptStorage = sessionStorage;\r\n","import { generateRandomChars, generateRandomNumber } from \"./helpers\";\r\nimport {\r\n  corporateCodePrefix,\r\n  corporateNameSubstringLength,\r\n  defaultAppValues,\r\n  metricValues,\r\n  responseCodes,\r\n} from \"./static\";\r\nimport { format } from \"date-fns\";\r\nimport moment from \"moment\";\r\nimport {\r\n  httpServiceInterfaceOauth2,\r\n  refreshToken,\r\n} from \"../services/http-service-oauth\";\r\nimport { encryptStorage } from \"./encryptor\";\r\n\r\nlet tokenCounterTimeoutId = -1;\r\n\r\nexport const tokenRequeryProcessing = (accessToken: string) => {\r\n  let _tDet = parseJwt(accessToken);\r\n  let expiresAt = _tDet?.exp;\r\n  let expiresAt_ms = expiresAt;\r\n  let nowNow = moment.now();\r\n  // let tokenRequeryInterval = (expiresAt * 1000 - nowNow) * 0.8;\r\n  let tokenRequeryInterval = 180000;\r\n  encryptStorage.setItem(\"nowNow\", String(nowNow));\r\n  encryptStorage.setItem(\"expiresAt\", expiresAt_ms);\r\n  encryptStorage.setItem(\"requeryTime\", String(nowNow + tokenRequeryInterval));\r\n  encryptStorage.setItem(\"tokenRequeryInterval\", String(tokenRequeryInterval));\r\n\r\n  return { tokenDetails: _tDet, tokenRequeryInterval: tokenRequeryInterval };\r\n};\r\nexport const recursiveCountdownTo = async (\r\n  countdownVal: any,\r\n  isTokenRefreshed = false\r\n) => {\r\n  if (countdownVal < 1000) {\r\n    return;\r\n  }\r\n  setTimeout(() => {\r\n    if (!isTokenRefreshed) {\r\n      refreshToken();\r\n    }\r\n    recursiveCountdownTo(countdownVal, isTokenRefreshed);\r\n  }, countdownVal);\r\n};\r\nconst getTokenRefreshTime = () => {\r\n  let interval = encryptStorage.getItem(\"tokenRequeryInterval\")\r\n  if (!isNullOrUndefined(interval)) {\r\n    let time = Number(interval)\r\n    return time - (Math.floor(time / 5))\r\n  }\r\n  return 5000\r\n}\r\nexport const keepTokenFresh = async () => {\r\n  setTimeout(() => {\r\n    refreshToken()\r\n    keepTokenFresh()\r\n  }, getTokenRefreshTime());\r\n}\r\n\r\nexport const tokenRefreshTimeout = tokenCounterTimeoutId;\r\nexport const clearTimeouts = (timeOutId = 0) => {\r\n  if (timeOutId > 0) {\r\n    window.clearTimeout(timeOutId);\r\n  } else {\r\n    var noop = function () { },\r\n      firstId = window.setTimeout(noop, 0);\r\n    return function () {\r\n      var lastId = window.setTimeout(noop, 0);\r\n      console.log(\"Removing\", lastId - firstId, \"timeout handlers\");\r\n      while (firstId !== lastId) window.clearTimeout(++firstId);\r\n    };\r\n  }\r\n};\r\n\r\nexport const isObject = (item: any) => {\r\n  return (\r\n    typeof item === \"object\" &&\r\n    !Array.isArray(item) &&\r\n    item !== null &&\r\n    item !== undefined\r\n  );\r\n};\r\n\r\nexport const skipObject = (arrOfVals: any, objVal: any) => {\r\n  let newObj: any = {};\r\n  if (arrOfVals.length === 0) {\r\n    for (const [keys, values] of Object.entries(objVal)) {\r\n      newObj = Object.assign({}, newObj, {\r\n        [keys]: values,\r\n      });\r\n    }\r\n    return newObj;\r\n  } else {\r\n    for (const [keys, values] of Object.entries(objVal)) {\r\n      if (!arrOfVals.includes(keys)) {\r\n        newObj = Object.assign({}, newObj, {\r\n          [keys]: values,\r\n        });\r\n      }\r\n    }\r\n    return newObj;\r\n  }\r\n};\r\n\r\nexport const cherryPickObject = (arrOfVals: any, objVal: any) => {\r\n  let newObj: any = {};\r\n  for (const [keys, values] of Object.entries(objVal)) {\r\n    if (arrOfVals.includes(keys)) {\r\n      newObj = Object.assign({}, newObj, {\r\n        [keys]: values,\r\n      });\r\n    }\r\n  }\r\n  return newObj;\r\n};\r\n\r\nexport const hasKeys = (objVal: any) => {\r\n  return !isNullOrUndefined(objVal) && Object.entries(objVal).length > 0;\r\n};\r\nexport const isKeyPresent = (objVal: any, requiredKey: string) => {\r\n  return !isNullOrUndefined(objVal) && objVal[requiredKey];\r\n};\r\n\r\nexport const createUUID = (prefix: string) => {\r\n  return (\r\n    prefix +\r\n    (new Date().getTime().toString(16) +\r\n      Math.floor(1e7 * Math.random()).toString(16))\r\n  );\r\n};\r\n\r\nexport const checkValueOrElseUseDefinedVal = (\r\n  val: any,\r\n  definedString: string\r\n) => {\r\n  return val !== null && val !== undefined ? val : definedString;\r\n};\r\n\r\nexport const isEmptyString = (val: any) => {\r\n  return val === null || val === undefined || val.length === 0;\r\n};\r\n\r\nexport const isANumber = (val: any) => {\r\n  return val !== null && val !== undefined && !Number.isNaN(val);\r\n};\r\n\r\nexport const valueIsLessThan = (val: any, operand: number) => {\r\n  return isANumber(val) && val < operand;\r\n};\r\n\r\nexport const valueIsGreaterThan = (val: any, operand: number) => {\r\n  return isANumber(val) && val > operand;\r\n};\r\n\r\nexport const isEmptyArray = (val: any) => {\r\n  return val === null || val === undefined || val.length === 0;\r\n};\r\n\r\nexport const isNullOrUndefined = (val: any) => {\r\n  return val === null || val === undefined || val === {};\r\n};\r\n\r\nexport const trueOrFalse = (val: any) => {\r\n  return checkValueOrElseUseDefinedVal(val, \"\") !== \"\" &&\r\n    val !== null &&\r\n    val?.toString().toLowerCase() === \"true\"\r\n    ? true\r\n    : val.toString().toLowerCase() === \"false\"\r\n      ? false\r\n      : val;\r\n};\r\n\r\nexport const isYesOrNo = (val: any) => {\r\n  return checkValueOrElseUseDefinedVal(val, \"\") !== \"\" &&\r\n    trueOrFalse(val) === false\r\n    ? \"No\"\r\n    : trueOrFalse(val) === true\r\n      ? \"Yes\"\r\n      : val;\r\n};\r\n\r\nexport const parseResponse = (val: any, fallbackRes: string) => {\r\n  if (checkValueOrElseUseDefinedVal(val, \"\") !== \"\") {\r\n    let resMessage = checkValueOrElseUseDefinedVal(\r\n      val?.actionResponse?.message,\r\n      fallbackRes\r\n    );\r\n\r\n    return resMessage;\r\n  } else {\r\n    return fallbackRes;\r\n  }\r\n};\r\n\r\nexport const isSuccessful = (val: any) => {\r\n  return (\r\n    (val !== null && val !== undefined && val === \"00\") ||\r\n    val === true ||\r\n    String(val).toLowerCase() === \"successful\"\r\n  );\r\n};\r\nexport const isDeclined = (val: any) => {\r\n  return (\r\n    (val !== null && val !== undefined && val === \"05\") ||\r\n    val === true ||\r\n    String(val).toLowerCase() === \"successful\"\r\n  );\r\n};\r\nexport const isNotFound = (val: any) => {\r\n  return (\r\n    val !== null && val !== undefined && val === responseCodes.NO_RECORD_FOUND\r\n  );\r\n};\r\nexport const splitString = (val: string, regexp: string) => {\r\n  let res = \"\";\r\n  if (!isEmptyString(val)) {\r\n    res = val.split(regexp).join(\" \");\r\n  }\r\n  return res;\r\n};\r\nexport const splitObject = (val: any) => {\r\n  let res = \"\";\r\n  for (const [, value] of Object.entries(val)) {\r\n    res += String(value).concat(\"<br/>\");\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const camelCaseToSentenceCase = (val: string) => {\r\n  let res = \"\";\r\n  try {\r\n    if (!isEmptyString(val)) {\r\n      res = val.replace(/([a-zA-Z])(?=[A-Z])/g, \"$1 \");\r\n    }\r\n  } catch (error) {\r\n    console.log(\"ERROR OCCURRED WHILE PARSING:::\", error);\r\n  }\r\n\r\n  return capitaliseFirstLetter(res);\r\n};\r\n\r\nexport const upperCaseCharAt = (val: string, loc: number) => {\r\n  let res = val;\r\n  if (!isEmptyString(val)) {\r\n    res = val.length > 0 ? val.charAt(loc).toUpperCase() : val;\r\n  }\r\n  return res;\r\n};\r\nexport const capitaliseFirstLetter = (val: string) => {\r\n  let res = val;\r\n  if (!isEmptyString(val)) {\r\n    res = val.length > 0 ? val.charAt(0).toUpperCase() + val.slice(1) : val;\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const makeTitleCase = (stringInContext: string) => {\r\n  let titleSentence = stringInContext.toLowerCase().split(\" \");\r\n  for (let i = 0; i < titleSentence.length; i++) {\r\n    titleSentence[i] =\r\n      titleSentence[i][0].toUpperCase() + titleSentence[i].slice(1) + \" \";\r\n  }\r\n  return titleSentence;\r\n};\r\n\r\nexport const makeSentenceCase = (val: string) => {\r\n  let res = val;\r\n  if (!isEmptyString(val)) {\r\n    res = val.length > 0 ? val.charAt(0).toUpperCase() + val.slice(1) : val;\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const getSessionId = () => {\r\n  return /SESS\\w*ID=([^;]+)/i.test(document.cookie) ? RegExp.$1 : false;\r\n};\r\n\r\nexport const useGoBack = () => { };\r\n\r\nexport const wait = (ms: any) =>\r\n  new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\nexport const grouper =\r\n  (key: any) =>\r\n    (array: any[], asObject = {}) =>\r\n      array.reduce((objectsByKeyValue, obj) => {\r\n        const value = obj[key];\r\n        objectsByKeyValue[value] = (objectsByKeyValue[value] || []).concat(obj);\r\n        return objectsByKeyValue;\r\n      }, asObject);\r\n\r\nexport const groupByHelper = grouper(\"parentMenuName\");\r\nexport const groupByReferenceNumber = grouper(\"requestReference\");\r\nexport const stringStripper = ({\r\n  stringInContext,\r\n  replacer,\r\n  replacee,\r\n}: any) => {\r\n  let stringAfterReplacement = \"\";\r\n  try {\r\n    stringAfterReplacement = stringInContext.replaceAll(\r\n      replacee ?? \"\",\r\n      replacer === \"\" ? \"\" : replacer\r\n    );\r\n  } catch (error) {\r\n    stringAfterReplacement = stringInContext;\r\n  }\r\n  return stringAfterReplacement;\r\n};\r\n\r\nexport const toDateFormat = (date: any, dateFormat?: string) => {\r\n  let d = isNullOrUndefined(date) ? new Date() : new Date(date);\r\n  let dtString = \"\";\r\n  switch (dateFormat) {\r\n    case \"yyyy-MM-dd\":\r\n      dtString = format(new Date(), dateFormat);\r\n      break;\r\n    default:\r\n      dtString = String(d.getDate()).concat(\r\n        String(d.getMonth() + 1),\r\n        String(d.getFullYear())\r\n      );\r\n      break;\r\n  }\r\n\r\n  return dtString;\r\n};\r\n\r\nexport const generateCorporateCodePattern = (companyName = \"\") => {\r\n  let corporateCodeVal = \"\";\r\n  if (!isNullOrUndefined(companyName)) {\r\n    if (companyName.length > corporateNameSubstringLength) {\r\n      corporateCodeVal = corporateCodePrefix.concat(\r\n        companyName.substring(0, corporateNameSubstringLength),\r\n        generateRandomChars(3)\r\n      );\r\n    } else {\r\n      corporateCodeVal = corporateCodePrefix.concat(\r\n        companyName,\r\n        generateRandomChars(3)\r\n      );\r\n    }\r\n  }\r\n  return corporateCodeVal.length > 0\r\n    ? corporateCodeVal.toLocaleLowerCase()\r\n    : corporateCodeVal;\r\n};\r\n\r\nexport const generateUsernamePattern = (username = \"\") => {\r\n  let usernameVal = \"\";\r\n  if (!isNullOrUndefined(username)) {\r\n    usernameVal = shuffle(username);\r\n  }\r\n\r\n  return usernameVal.length > 0 ? usernameVal.toLocaleLowerCase() : usernameVal;\r\n};\r\n\r\nexport const shuffle = (stringToRandomize: string) => {\r\n  var arr = stringToRandomize.split(\"\");\r\n  var n = arr.length;\r\n\r\n  for (var i = 0; i < n - 1; ++i) {\r\n    var j = generateRandomNumber(n);\r\n\r\n    var temp = arr[i];\r\n    arr[i] = arr[j];\r\n    arr[j] = temp;\r\n  }\r\n\r\n  stringToRandomize = arr.join(\"\");\r\n  return stringToRandomize;\r\n};\r\n\r\nexport const buildDateRangeString = (data: any) => {\r\n  return data.startDate.concat(\r\n    \"/\",\r\n    data?.endDate,\r\n    \"/\",\r\n    data?.requestTypeId === \"APPROVED\" ? 1 : 0\r\n  );\r\n};\r\n\r\nexport const sanitizeUrl = (data: string) => {\r\n  return data.startsWith(\"/\") ? data.substr(1) : data;\r\n};\r\n\r\nexport const getToday = () => {\r\n  let myDate = new Date();\r\n  let year: any = String(myDate.getFullYear());\r\n  let month: any =\r\n    myDate.getMonth() < 10 ? \"0\" + myDate.getMonth() : myDate.getMonth();\r\n  let day: any = myDate.getDay() < 10 ? \"0\" + myDate.getDay() : myDate.getDay();\r\n\r\n  let finalDate = String(month + day + year);\r\n  return finalDate;\r\n};\r\n\r\nexport const stringSplitter = (splitBy: string, stringToSplit: string) => {\r\n  try {\r\n    let splittedString = stringToSplit.trim().split(splitBy);\r\n    let splittedStringArr = splittedString.join(\" \");\r\n\r\n    return splittedStringArr;\r\n  } catch (error) {\r\n    return stringToSplit;\r\n  }\r\n};\r\n\r\nexport const parseJwt = (token: any) => {\r\n  try {\r\n    let base64Url = token.split(\".\")[1];\r\n    let base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n    let jsonPayload = decodeURIComponent(\r\n      atob(base64)\r\n        .split(\"\")\r\n        .map(function (c) {\r\n          return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\r\n        })\r\n        .join(\"\")\r\n    );\r\n    return JSON.parse(jsonPayload);\r\n  } catch (err) {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const isTokenExpired = (tokenExpiryIn: number) => {\r\n  let nowNow = moment().toDate().getTime();\r\n  let isExpired = moment(nowNow).isAfter(moment(tokenExpiryIn));\r\n  return isExpired;\r\n};\r\n\r\nexport const isTokenCloseToExpiry = (tokenExpiryIn: number) => {\r\n  let nowNow = moment().toDate().getTime();\r\n  let willExpireIn = moment(tokenExpiryIn);\r\n  let isExpiringIn = willExpireIn.diff(nowNow);\r\n  let requeryT = encryptStorage.getItem(\"tokenRequeryTime\") ?? -1;\r\n  return requeryT === -1 ? true : requeryT >= isExpiringIn;\r\n};\r\n\r\nexport const checkTokenStatus = () => {\r\n  let response = true;\r\n  let inputterTokenEnabled = true;\r\n  let tokenEnabled = true;\r\n\r\n  let httpClientJwt = httpServiceInterfaceOauth2.getJwt();\r\n\r\n  if (isNullOrUndefined(httpClientJwt)) {\r\n    return response;\r\n  } else {\r\n    let accessJwt: any = parseJwt(httpClientJwt);\r\n    inputterTokenEnabled =\r\n      !isNullOrUndefined(accessJwt) && !isNullOrUndefined(inputterTokenEnabled)\r\n        ? accessJwt.corporate_inputter_token_enabled\r\n        : inputterTokenEnabled;\r\n\r\n    tokenEnabled =\r\n      !isNullOrUndefined(accessJwt) && !isNullOrUndefined(tokenEnabled)\r\n        ? accessJwt.user_token_enabled\r\n        : tokenEnabled;\r\n\r\n    if (inputterTokenEnabled || (!inputterTokenEnabled && tokenEnabled)) {\r\n      return response;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n};\r\n\r\nexport const getTokenVal = () => {\r\n  return httpServiceInterfaceOauth2.getJwt();\r\n};\r\n\r\nexport const ParseUploadedJson = (jsonArray: any[]) => {\r\n  // The first object of the array is not neccessary\r\n  jsonArray.shift()\r\n\r\n  // extract the headings\r\n  const headings: any[] = Object.values(jsonArray[0])\r\n\r\n  // remove the heading row\r\n  jsonArray.shift()\r\n\r\n  let totalAmount = 0\r\n  // Create a Json object that properly represents the excel file\r\n  const CsvObjectArray = jsonArray.map((row) => {\r\n    const rowValuesArray = Object.values(row)\r\n    const rowObject: any = {}\r\n    for (let i = 0; i < headings.length; i++) {\r\n      rowObject[headings[i]] = rowValuesArray[i]\r\n      if (headings[i] === \"AMOUNT\") totalAmount = totalAmount + Number(rowValuesArray[i])\r\n    }\r\n    return rowObject\r\n  })\r\n  return { CsvObjectArray, totalAmount }\r\n}\r\n\r\nexport const defineMandateRule = (mandateType?: string) => {\r\n  let mandateRule = Object.assign({ globalRule: true });\r\n  switch (mandateType) {\r\n    case defaultAppValues.mandateTypes.accountBasedMandateType:\r\n      mandateRule = { accountRule: true };\r\n      break;\r\n    case defaultAppValues.mandateTypes.amountBasedMandateType:\r\n      mandateRule = { amountRule: true };\r\n      break;\r\n    case defaultAppValues.mandateTypes.moduleBasedMandateType:\r\n      mandateRule = { moduleRule: true };\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return mandateRule;\r\n};\r\n\r\nexport const pageRefresher = (url = \"\") => {\r\n  setTimeout(() => {\r\n    if (url !== \"\") {\r\n      window.location.href = url;\r\n    } else {\r\n      window.location.reload();\r\n    }\r\n  }, metricValues.timeToPageReloadAfterSuccess);\r\n};\r\n","import { metricValues } from \"./static\";\r\n\r\nexport const responseMessage = {\r\n  ACCESS_DENIED: \"Access is denied .... Please check your credentials\",\r\n  ACCOUNT_DIGITS_MUST_BE_10: \"A 10 digit Account number is required\",\r\n  ACCOUNT_NUMBER_IS_FOUND: \"Account number is found\",\r\n  ACCOUNT_RECORD_NOT_FOUND: \"Account details not found ....\",\r\n  ACCOUNT_STATEMENT_REQUEST_SUBMITTED_SUCCESSFULLY:\r\n    \"Account statement request submitted successfully\",\r\n  APPROVAL_GROUP_CREATION_SUCCESSFUL: \"Approval group creation successful\",\r\n  APPROVAL_GROUP_CREATION_FAILED: \"Approval group creation failed\",\r\n  APPROVAL_GROUP_DELETE_SUCCESSFUL: \"Approval group deletion successful\",\r\n  APPROVAL_GROUP_DELETE_FAILED: \"Approval group deletion failed\",\r\n  APPROVAL_GROUP_UPDATE_SUCCESSFUL: \"Approval group update successful\",\r\n  APPROVAL_GROUP_UPDATE_FAILED: \"Approval group update failed\",\r\n  BAD_REQUEST: \"One or more required fields are not adequately supplied\",\r\n  BENEFICIARY_LIMIT_EXCEEDED: \"You can not add more than \".concat(\r\n    String(process.env.REACT_APP_MAXIMUM_BENEFICIARY_COUNT),\r\n    \" beneficiaries\"\r\n  ),\r\n  CHANGED_PASSWORD_FAILED:\r\n    \"Changed password failed | Please confirm your details\",\r\n  CHANGED_PASSWORD_SUCCESSFULLY:\r\n    \"Changed password successful | Please login with new password\",\r\n  CHEQUE_BOOK_REQUEST_SUBMITTED_SUCCESSFULLY:\r\n    \"Cheque book request submitted successfully\",\r\n  CODE_LENGTH: \"Code should be  \",\r\n  CODE_SENT_TO_YOUR_EMAIL: \"{CODE} has been sent to your email\",\r\n  CODE_SENT_TO_YOUR_PHONE: \"{CODE} has been sent to your phone number\",\r\n  CORPORATE_ACCOUNT_ONBOARDED_SUCCESSFULLY:\r\n    \"Corporate account onboarded successfully ...\",\r\n  CORPORATE_CODE_NOT_AVAILABLE:\r\n    \"Corporate code chosen is not available ... check another\",\r\n  CORPORATE_CODE_COULD_NOT_BE_VALIDATED:\r\n    \"Corporate code could not be validated\",\r\n  CORPORATE_CODE_IS_AVAILABLE: \"Corporate code is available\",\r\n  CORPORATE_SME_ONBOARDING_FAILED: \"Corporate SME onboarding failed\",\r\n  CORPORATE_SME_ONBOARDING_SUCCESSFUL:\r\n    \"Corporate SME onboarding was successful\",\r\n  COULD_NOT_FETCH: \"Ooops ! Could not fetch \",\r\n  DIRECTOR_ADDED_FAILED: \"Director could not be added\",\r\n  DIRECTOR_ADDED_SUCCESSFULLY: \"Director added successfully\",\r\n  DEPARTMENT_CREATED_SUCCESSFULLY: \"Department created successfully\",\r\n  DESTINATION_ACCOUNT_HAS_BEEN_PREVIOUSLY_ADDED:\r\n    \"Account has been previously added as a beneficiary\",\r\n  ERROR_OCCURRED: \"Error occurred ... Please contact admin\",\r\n  FAILED: \"FAILED\",\r\n  FILE_TOO_LARGE: \"File too large\",\r\n  FUND_TRANSFER_SUCCESSFUL: \"Fund transfer was successful\",\r\n  FUND_TRANSFER_FAILED: \"Fund transfer failed ... please try again later\",\r\n  INCOMPLETE_PIN_OR_TOKEN:\r\n    \"You have not passed the complete token. Please verify!\",\r\n  INITIATOR_BVN_OR_CORRELATIONID:\r\n    \"Initiator BVN or correlation ID can not be empty. You must provide one of the two information\",\r\n  INVALID_BVN_OR_DATE_COMBINATION: \"Invalid bvn and date of birth combination\",\r\n  INVALID_LOGIN_CREDENTIALS:\r\n    \"Invalid Login credentials ! Please check your username/password\",\r\n  INVALID_OTP: \"Invalid OTP was provided ! Please enter the correct value\",\r\n  INVALID_REG_NUMBER: \"Invalid Registration number / Business not registered\",\r\n  INVALID_GRANT: \"Access denied by connecting service ... Contact admin\",\r\n  ISSUE_DEMAND_DRAFT_SUBMITTED_SUCCESSFULLY:\r\n    \"Issue demand draft request submitted successfully\",\r\n  IS_FOUND: \"Is found\",\r\n  MB_PIN_CHANGE_REQUEST_SUBMITTED_SUCCESSFULLY:\r\n    \"Mobile banking pin change request submitted successfully\",\r\n  MENU_UPDATE_SUCCESSFUL:\r\n    \" Menu update Request has been sent successfully ... May require approval before is usable\",\r\n  MANDATE_CREATION_SUCCESSFUL:\r\n    \" Mandate creation successful ... May require approval before is usable\",\r\n  MANDATE_UPDATE_SUCCESSFUL:\r\n    \" Mandate update successful ... May require approval before is usable\",\r\n  MANDATE_UPDATE_FAILED: \" Mandate update failed ...\",\r\n  MANDATE_CREATION_FAILED: \" Mandate creation failed ...\",\r\n  MANDATE_SIGNATORY_UPDATE_SUCCESSFUL:\r\n    \"Mandate signatory update successful ... May require approval before is usable\",\r\n  MANDATE_SIGNATORY_UPDATE_FAILED:\r\n    \"Mandate signatory update failed ... Contact support\",\r\n  MENU_CREATION_SUCCESSFUL:\r\n    \" Menu creation request has been submitted successfully ... May require approval before is usable\",\r\n  MENU_CREATION_FAILED: \" Menu creation failed ... Contact support\",\r\n  MENU_DELETION_SUCCESSFUL:\r\n    \" Menu deletion successful ... May require approval before is usable\",\r\n  MENU_DELETION_FAILED: \" Menu deletion failed ... Contact support\",\r\n  MENU_UPDATE_FAILED: \" Menu update failed ... Contact support\",\r\n  NO_RECORD_FOUND: \"No record found\",\r\n  OTP_LENGTH_GT_ZERO: \"One time password length must be greater than zero\",\r\n  OTP_SENT_SUCCESSFULLY: \"Cool! OTP sent successfully ... \",\r\n  REFERENCE_ADDED_SUCCESSFULLY:\r\n    \"Corprate reference details was added successfully\",\r\n  REFERENCE_ADDITION_FAILED: \"Corprate reference details could not be added\",\r\n  REG_NUMBER_FOUND: \"Registration number search was successful\",\r\n  REQUEST_APPROVAL_FAILED: \"Request could not be approved. Try again later\",\r\n  REQUEST_APPROVAL_SUCCESSFUL: \"Request approved successfully\",\r\n  REQUEST_DECLINE_SUCCESSFUL: \"Request declined successfully\",\r\n  REQUEST_DECLINE_FAILED: \"Request could not be declined. Try again later\",\r\n  RESET_PASSWORD_FAILED: \"Reset password process could not be initiated\",\r\n  SERVICE_UNAVAILABLE:\r\n    \"Service is currenty unavailable .. Please try again later\",\r\n  SERVICE_REQUEST_SUBMITTED_SUCCESSFULLY:\r\n    \"Service request submitted successfully\",\r\n  SIGNATORY_ADDED_SUCCESSFULLY: \"Signatory added successfully\",\r\n  SOME_REQUEST_APPROVAL_FAILED:\r\n    \"Some Request could not be approved. Contact admin\",\r\n  STANDING_ORDER_REQUEST_SUBMITTED_SUCCESSFULLY:\r\n    \"Standing order request submitted successfully\",\r\n  STAGING_ENTITY_DATA_SUBMITTED_SUCCESSFULLY:\r\n    \"Staging entity submitted successfully\",\r\n  STAGING_ENTITY_DATA_SUBMISSION_FAILED: \"Staging entity submission failed\",\r\n  STOP_CHEQUE_REQUEST_SUBMITTED_SUCCESSFULLY:\r\n    \"Stop cheque request submitted successfully\",\r\n  SUCCESSFUL: \"Cool! Successful operation ... \",\r\n  SESSION_EXPIRED: \"It appears session is expired , please login again ... \",\r\n  SERVICE_ENDPOINT_NOT_REACHABLE: \"Service endpoint not reachable\",\r\n  TNX_PIN_VALID: \"Cool! Transaction pin validated ... \",\r\n  USERNAME_IS_AVAILABLE: \"Username is available\",\r\n  USER_ADDED_TO_APPROVAL_GROUP_SUCCESSFULLY:\r\n    \"User added to approval group successfully\",\r\n  USER_ADDING_TO_APPROVAL_GROUP_FAILED:\r\n    \"User could not be added to approval group\",\r\n  USERNAME_NOT_AVAILABLE: \"Username not available\",\r\n  USERNAME_MUST_BE_UNIQUE: \"Username must be unique\",\r\n  USERNAME_CAN_NOT_BE_EMPTY: \"Username can not be empty\",\r\n  UNABLE_TO_UPLOAD_FILE: \"Unable to upload file\",\r\n  REQUEST_COULD_NOT_BEEN_AUTHENTICATED: \"Request could not be authenticated\",\r\n  REGISTRATION_MIN_NUMBER_LENGTH:\r\n    \"Registration number length must not be less than \".concat(\r\n      metricValues.minRegNumberLength.toString(),\r\n      \" characters\"\r\n    ),\r\n  REG_COULD_NOT_BE_VALIDATED:\r\n    \"Registration number could not be validated . Please enter your company name manually\",\r\n  USER_ADDED_TO_CORPORATE_SUCCESSFULLY:\r\n    \"User added to corporate successfully ...\",\r\n  FEEDBACK_SENT_SUCCESSFULLY: \"Feedback sent successfully\",\r\n\r\n};\r\n","import { ResponseBody } from \"../models/types\";\r\nimport { responseCodes } from \"../utils/static\";\r\nimport { isNullOrUndefined, isObject } from \"../utils/tools\";\r\nimport { responseMessage } from \"../utils/ui-messages\";\r\n\r\nexport const handleMyErrors = (err: any) => {\r\n  let finalErrRes: ResponseBody = {\r\n    responseCode: \"\",\r\n    data: {},\r\n    hasError: true,\r\n  };\r\n  try {\r\n    const errRes = err.response?.data;\r\n    if (\r\n      !isNullOrUndefined(errRes) &&\r\n      errRes.error_description?.toString().includes(\"change default/initial\")\r\n    ) {\r\n      finalErrRes = {\r\n        ...finalErrRes,\r\n        responseCode: responseCodes.CHANGE_PASSWORD,\r\n      };\r\n    } else if (\r\n      !isNullOrUndefined(errRes) &&\r\n      errRes.error?.toString().includes(\"access_denied\")\r\n    ) {\r\n      finalErrRes = {\r\n        ...finalErrRes,\r\n        responseCode: responseCodes.ACCESS_DENIED,\r\n        data: responseMessage.ACCESS_DENIED,\r\n      };\r\n      throw new Error(String(finalErrRes));\r\n    } else if (\r\n      !isNullOrUndefined(errRes) &&\r\n      errRes.error?.toString().includes(\"invalid_grant\")\r\n    ) {\r\n      finalErrRes = {\r\n        ...finalErrRes,\r\n        responseCode: responseCodes.INVALID_GRANT,\r\n        data: responseMessage.INVALID_GRANT,\r\n      };\r\n      throw new Error(String(finalErrRes));\r\n    } else if (err.message?.includes(\"401\")) {\r\n      finalErrRes = {\r\n        ...finalErrRes,\r\n        data: responseMessage.SESSION_EXPIRED,\r\n        responseCode: responseCodes.UNAUTHORIZED,\r\n      };\r\n      // throw new Error(responseMessage.REQUEST_COULD_NOT_BEEN_AUTHENTICATED);\r\n    } else if (err.message?.includes(\"404\")) {\r\n      finalErrRes = {\r\n        ...finalErrRes,\r\n        responseCode: responseCodes.PAGE_NOT_FOUND,\r\n        data: \"No response from requested service as it is not found\",\r\n      };\r\n    } else if (!isNullOrUndefined(err?.response) && isObject(err?.response)) {\r\n      let errResData = err.response.data || {};\r\n      let errResDataString = \"\";\r\n      for (const [keys, values] of Object.entries(errResData)) {\r\n        errResDataString += keys !== \"responseCode\" ? values + \"<br/>\" : \"\";\r\n      }\r\n      if (errResDataString.includes(\"service unavailable\")) {\r\n        finalErrRes = {\r\n          ...finalErrRes,\r\n          responseCode: responseCodes.SERVICE_UNAVAILABLE,\r\n          data: responseMessage.SERVICE_UNAVAILABLE,\r\n        };\r\n      } else\r\n        finalErrRes = {\r\n          ...finalErrRes,\r\n          responseCode: responseCodes.BAD_REQUEST,\r\n          data:\r\n            isNullOrUndefined(errResDataString) ||\r\n            errResDataString?.toLowerCase().includes(\"bad request\")\r\n              ? responseMessage.BAD_REQUEST\r\n              : errResDataString,\r\n        };\r\n    } else {\r\n      finalErrRes = {\r\n        ...finalErrRes,\r\n        responseCode: responseCodes.ERROR_OCCURRED,\r\n        data: err.message,\r\n      };\r\n    }\r\n  } catch (err) {\r\n    finalErrRes = {\r\n      ...finalErrRes,\r\n      responseCode: responseCodes.ERROR_OCCURRED,\r\n    };\r\n    console.log(\"ERROR OCCURRED WHILE PARSING ERRORS=>\", err);\r\n  }\r\n  return finalErrRes;\r\n};\r\n","// Fetch categories cases\r\nexport const FETCH_CATEGORIES_STARTED = \"FETCH_CATEGORIES_STARTED\";\r\nexport const FETCH_CATEGORIES_FAILURE = \"FETCH_CATEGORIES_FAILURE\";\r\nexport const FETCH_CATEGORIES_SUCCESS = \"FETCH_CATEGORIES_SUCCESS\";\r\n\r\n// Fetch each category's products cases\r\nexport const FETCH_CATEGORY_PRODUCTS_STARTED = \"FETCH_CATEGORY_PRODUCTS_STARTED\";\r\nexport const FETCH_CATEGORY_PRODUCTS_FAILURE = \"FETCH_CATEGORY_PRODUCTS_FAILURE\";\r\nexport const FETCH_CATEGORY_PRODUCTS_SUCCESS = \"FETCH_CATEGORY_PRODUCTS_SUCCESS\";\r\n\r\n// Fetch all products\r\nexport const FETCH_PRODUCTS_STARTED = \"FETCH_PRODUCTS_STARTED\";\r\nexport const FETCH_PRODUCTS_SUCCESS = \"FETCH_PRODUCTS_SUCCESS\";\r\nexport const FETCH_PRODUCTS_FAILURE = \"FETCH_PRODUCTS_FAILURE\";\r\n\r\n// Fetch all products\r\nexport const FETCH_USER_PRODUCTS_STARTED = \"FETCH_USER_PRODUCTS_STARTED\";\r\nexport const FETCH_USER_PRODUCTS_SUCCESS = \"FETCH_USER_PRODUCTS_SUCCESS\";\r\nexport const FETCH_USER_PRODUCTS_FAILURE = \"FETCH_USER_PRODUCTS_FAILURE\";\r\n\r\n// Fetch single product\r\nexport const FETCH_SINGLE_PRODUCT_STARTED = \"FETCH_SINGLE_PRODUCT_STARTED\";\r\nexport const FETCH_SINGLE_PRODUCT_SUCCESS = \"FETCH_SINGLE_PRODUCT_SUCCESS\";\r\nexport const FETCH_SINGLE_PRODUCT_FAILURE = \"FETCH_SINGLE_PRODUCT_FAILURE\";\r\n\r\n// Add new Category\r\nexport const ADD_CATEGORY_SUCCESS = \"ADD_CATEGORY_SUCCESS\";\r\nexport const ADD_CATEGORY_FAILURE = \"ADD_CATEGORY_FAILURE\";\r\n\r\n// Add new Product\r\nexport const ADD_PRODUCT_SUCCESS = \"ADD_PRODUCT_SUCCESS\";\r\nexport const ADD_PRODUCT_FAILURE = \"ADD_PRODUCT_FAILURE\";\r\n\r\n// Delete category\r\nexport const DELETE_CATEGORY_SUCCESS = \"DELETE_CATEGORY_SUCCESS\";\r\nexport const DELETE_CATEGORY_FAILURE = \"DELETE_CATEGORY_FAILURE\";\r\n\r\n// Update Category\r\nexport const UPDATE_CATEGORY_SUCCESS = \"UPDATE_CATEGORY_SUCCESS\";\r\nexport const UPDATE_CATEGORY_FAILURE = \"UPDATE_CATEGORY_FAILURE\";\r\n\r\n// Delete product\r\nexport const DELETE_PRODUCT_SUCCESS = \"DELETE_PRODUCT_SUCCESS\";\r\nexport const DELETE_PRODUCT_FAILURE = \"DELETE_PRODUCT_FAILURE\";\r\n\r\n// Update Product\r\nexport const UPDATE_PRODUCT_SUCCESS = \"UPDATE_PRODUCT_SUCCESS\";\r\nexport const UPDATE_PRODUCT_FAILURE = \"UPDATE_PRODUCT_FAILURE\";\r\n\r\n// users options\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const REGISTER_USER_SUCCESS = \"REGISTER_USER_SUCCESS\";\r\nexport const REGISTER_USER_FAILURE = \"REGISTER_USER_FAILURE\";\r\nexport const LOGIN_USER_SUCCESS = \"LOGIN_USER_SUCCESS\";\r\nexport const LOGIN_USER_FAILURE = \"LOGIN_USER_FAILURE\";\r\nexport const LOGOUT_USER_SUCCESS = \"LOGOUT_USER_SUCCESS\";\r\nexport const UPDATE_USER_SUCCESS = \"UPDATE_USER_SUCCESS\";\r\nexport const UPDATE_USER_FAILURE = \"UPDATE_USER_FAILURE\";\r\n\r\n// fetch cart products\r\nexport const FETCH_CART_STARTED = \"FETCH_CART_STARTED\";\r\nexport const FETCH_CART_SUCCESS = \"FETCH_CART_SUCCESS\";\r\nexport const FETCH_CART_FAILURE = \"FETCH_CART_FAILURE\";\r\n\r\n// add product to cart\r\nexport const ADD_TO_CART_SUCCESS = \"ADD_TO_CART_SUCCESS\";\r\nexport const ADD_TO_CART_FAILURE = \"ADD_TO_CART_FAILURE\";\r\n\r\n// change quantity from cart\r\nexport const CHANGE_CART_QUANTITY_SUCCESS = \"CHANGE_CART_QUANTITY_SUCCESS\";\r\nexport const CHANGE_CART_QUANTITY_FAILURE = \"CHANGE_CART_QUANTITY_FAILURE\";\r\n\r\n// delete product from cart\r\nexport const DELETE_FROM_CART_SUCCESS = \"DELETE_FROM_CART_SUCCESS\";\r\nexport const DELETE_FROM_CART_FAILURE = \"DELETE_FROM_CART_FAILURE\";\r\n\r\n// fetch All user Addresses\r\nexport const FETCH_ADDRESSES_STARTED = \"FETCH_ADDRESSES_STARTED\";\r\nexport const FETCH_ADDRESSES_SUCCESS = \"FETCH_ADDRESSES_SUCCESS\";\r\nexport const FETCH_ADDRESSES_FAILURE = \"FETCH_ADDRESSES_FAILURE\";\r\n\r\n// add a new address\r\nexport const ADD_ADDRESS_SUCCESS = \"ADD_ADDRESS_SUCCESS\";\r\nexport const ADD_ADDRESS_FAILURE = \"ADD_ADDRESS_FAILURE\";\r\n\r\n// delete an address\r\nexport const DELETE_ADDRESS_SUCCESS = \"DELETE_ADDRESS_SUCCESS\";\r\nexport const DELETE_ADDRESS_FAILURE = \"DELETE_ADDRESS_FAILURE\";\r\n\r\n// update an address\r\nexport const EDIT_ADDRESS_SUCCESS = \"EDIT_ADDRESS_SUCCESS\";\r\nexport const EDIT_ADDRESS_FAILURE = \"EDIT_ADDRESS_FAILURE\";\r\n\r\n// fetch WISHLIST products\r\nexport const FETCH_WISHLIST_STARTED = \"FETCH_WISHLIST_STARTED\";\r\nexport const FETCH_WISHLIST_SUCCESS = \"FETCH_WISHLIST_SUCCESS\";\r\nexport const FETCH_WISHLIST_FAILURE = \"FETCH_WISHLIST_FAILURE\";\r\n\r\n// add product to WISHLIST\r\nexport const ADD_TO_WISHLIST_SUCCESS = \"ADD_TO_WISHLIST_SUCCESS\";\r\nexport const ADD_TO_WISHLIST_FAILURE = \"ADD_TO_WISHLIST_FAILURE\";\r\n\r\n// delete product from WISHLIST\r\nexport const DELETE_FROM_WISHLIST_SUCCESS = \"DELETE_FROM_WISHLIST_SUCCESS\";\r\nexport const DELETE_FROM_WISHLIST_FAILURE = \"DELETE_FROM_WISHLIST_FAILURE\";\r\n\r\n// fetch All user orders history\r\nexport const FETCH_HISTORY_STARTED = \"FETCH_HISTORY_STARTED\";\r\nexport const FETCH_HISTORY_SUCCESS = \"FETCH_HISTORY_SUCCESS\";\r\nexport const FETCH_HISTORY_FAILURE = \"FETCH_HISTORY_FAILURE\";\r\n\r\n// fetch All seller's orders to ship\r\nexport const FETCH_ORDERS_TO_SHIP_STARTED = \"FETCH_ORDERS_TO_SHIP_STARTED\";\r\nexport const FETCH_ORDERS_TO_SHIP_SUCCESS = \"FETCH_ORDERS_TO_SHIP_SUCCESS\";\r\nexport const FETCH_ORDERS_TO_SHIP_FAILURE = \"FETCH_ORDERS_TO_SHIP_FAILURE\";\r\n\r\n// fetch All seller's shipped orders\r\nexport const FETCH_SHIPPED_ORDERS_STARTED = \"FETCH_SHIPPED_ORDERS_STARTED\";\r\nexport const FETCH_SHIPPED_ORDERS_SUCCESS = \"FETCH_SHIPPED_ORDERS_SUCCESS\";\r\nexport const FETCH_SHIPPED_ORDERS_FAILURE = \"FETCH_SHIPPED_ORDERS_FAILURE\";\r\n\r\n// Mark order as shipped\r\nexport const ORDER_SHIPPED_SUCCESS = \"ORDER_SHIPPED_SUCCESS\";\r\nexport const ORDER_SHIPPED_FAILURE = \"ORDER_SHIPPED_SUCCESS\";\r\n\r\n// order success\r\nexport const PLACED_ORDER_SUCCESS = \"PLACED_ORDER_SUCCESS\";\r\nexport const PLACED_ORDER_FAILURE = \"PLACED_ORDER_FAILURE\";\r\n\r\n// Choose order address\r\nexport const CHOOSE_ORDER_ADDRESS_SUCCESS = \"CHOOSE_ORDER_ADDRESS_SUCCESS\";\r\nexport const CHOOSE_ORDER_ADDRESS_FAILURE = \"CHOOSE_ORDER_ADDRESS_SUCCESS\";\r\n\r\n// users options\r\nexport const FETCH_ALL_USERS_STARTED = \"FETCH_ALL_USERS_STARTED\";\r\nexport const FETCH_ALL_USERS_SUCCESS = \"FETCH_ALL_USERS_SUCCESS\";\r\nexport const FETCH_ALL_USERS_FAILURE = \"FETCH_ALL_USERS_FAILURE\";\r\n\r\n// change user permissions to admin\r\nexport const ADMIN_PERMISSION_SUCCESS = \"ADMIN_PERMISSION_SUCCESS\";\r\nexport const ADMIN_PERMISSION_FAILURE = \"ADMIN_PERMISSION_FAILURE\";\r\n\r\n// change user permissions to shipper\r\nexport const SHIPPER_PERMISSION_SUCCESS = \"SHIPPER_PERMISSION_SUCCESS\";\r\nexport const SHIPPER_PERMISSION_FAILURE = \"SHIPPER_PERMISSION_FAILURE\";\r\n\r\n// restrict user from all permissions\r\nexport const STRICT_USER_SUCCESS = \"STRICT_USER_SUCCESS\";\r\nexport const STRICT_USER_FAILURE = \"STRICT_USER_FAILURE\";\r\n\r\n// fetch shippers\r\nexport const FETCH_SHIPPERS_STARTED = \"FETCH_SHIPPERS_STARTED\";\r\nexport const FETCH_SHIPPERS_SUCCESS = \"FETCH_SHIPPERS_SUCCESS\";\r\nexport const FETCH_SHIPPERS_FAILURE = \"FETCH_SHIPPERS_FAILURE\";\r\n\r\n// edit shipper\r\nexport const EDIT_SHIPPERS_SUCCESS = \"EDIT_SHIPPERS_SUCCESS\";\r\nexport const EDIT_SHIPPERS_FAILURE = \"EDIT_SHIPPERS_FAILURE\";\r\n\r\n// fetch All shipper orders to deliver\r\nexport const FETCH_ORDERS_TO_DELIVER_STARTED = \"FETCH_ORDERS_TO_DELIVER_STARTED\";\r\nexport const FETCH_ORDERS_TO_DELIVER_SUCCESS = \"FETCH_ORDERS_TO_DELIVER_SUCCESS\";\r\nexport const FETCH_ORDERS_TO_DELIVER_FAILURE = \"FETCH_ORDERS_TO_DELIVER_FAILURE\";\r\n\r\n// Mark order as delivered\r\nexport const ORDER_DELIVERED_SUCCESS = \"ORDER_DELIVERED_SUCCESS\";\r\nexport const ORDER_DELIVERED_FAILURE = \"ORDER_DELIVERED_SUCCESS\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\nexport const SET_MESSAGE = \"SET_MESSAGE\";\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\n","import {\r\n  Card,\r\n  CardHeader,\r\n  Container,\r\n  Row,\r\n} from \"reactstrap\";\r\n\r\nimport {\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\n// import PaginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Header from \"components/Headers/Header.js\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { endpoints } from \"../api-endpoints\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport \"./modal.css\"\r\nimport userService from \"services/user.service\";\r\nimport { Dropdown, DropdownButton } from 'react-bootstrap';\r\nimport axios from \"axios\";\r\n// import { param } from \"jquery\";\r\n\r\nconst Drivers = () => {\r\n  const [modalInfo, setModalInfo] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [state, setState] = useState();\r\n  const [drivers, setDrivers] = useState([]);\r\n  const driver = [];\r\n  // const navigate = useHistory();\r\n\r\n  // const { SearchBar } = Search;\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  useEffect(() => {\r\n    async function fetchUsers() {\r\n      const fullResponse = await fetch(endpoints.getDrivers);\r\n      const responseJson = await fullResponse.json();\r\n      const drivers = responseJson.users.filter(user => user.isAdmin === false);\r\n      setDrivers(drivers);\r\n    }\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  drivers.forEach((user) => {\r\n    driver.push(user);\r\n  });\r\n\r\n  console.log(\r\n    \"Created drivers>>>>>>> from headers from map markers used\",\r\n    driver\r\n  );\r\n\r\n\r\n  const rowEvents = {\r\n    onClick: (e, row) => {\r\n      console.log(\"Row list test\", row.id);\r\n      setModalInfo(row);\r\n      // toggleTrueFalse();\r\n    },\r\n  };\r\n\r\n  const toggleTrueFalse = () => {\r\n    setShowModal(handleShow)\r\n  }\r\n\r\n//   const submitform() {\r\n//     //Now I have the all values wrapped in a object to send to server\r\n// }\r\n\r\nconst handleOnChange = (e) => {\r\n    const { value, name } = e.target\r\n    setState({ [name] : value })\r\n};\r\n\r\n    const handleUpdate = async (e) => {\r\n      e.preventDefault();\r\n      try {\r\n    const formData = state\r\n\r\n        const response = await userService.updateUser.concat(`${modalInfo.Id}`).then(\r\n          () => {\r\n            // navigate.push(\"/admin/index\");\r\n            console.log(response)\r\n            // window.location.reload();\r\n          },\r\n          (error) => {\r\n            console.log(error);\r\n          }\r\n        );\r\n        console.log(response.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\nconst ModalContent = () => {\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={handleClose}\r\n      className=\"modal-width\"\r\n      contentClassName=\"transparentBgClass\"\r\n      dialogClassName=\"modal-width\"\r\n      aria-labelledby=\"example-custom-modal-styling-title\"\r\n    >\r\n      <Modal.Header closeLabel=\"X\">\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Close\r\n        </Button>\r\n        <Modal.Title>\r\n          {modalInfo.first_name} {modalInfo.last_name}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Container fluid>\r\n          <Row>\r\n            <Col className=\"order-xl-2 mb-5 mb-xl-0\" xl=\"4\">\r\n              <Card className=\"card-profile shadow\">\r\n                <Row className=\"justify-content-center\">\r\n                  <Col className=\"order-lg-2\" lg=\"3\">\r\n                    <div className=\"card-profile-image\">\r\n                      <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\r\n                        <img\r\n                          alt=\"...\"\r\n                          className=\"rounded-circle\"\r\n                          src={\r\n                            require(\"../assets/img/brand/qevla_logo1.png\")\r\n                              .default\r\n                          }\r\n                        />\r\n                      </a>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <CardHeader className=\"text-center border-0 pt-8 pt-md-4 pb-0 pb-md-4\">\r\n                  <div className=\"d-flex justify-content-between\">\r\n                    <Button\r\n                      className=\"mr-4\"\r\n                      color=\"info\"\r\n                      href=\"#pablo\"\r\n                      onClick={(e) => e.preventDefault()}\r\n                      size=\"sm\"\r\n                    >\r\n                      {/* Approve */}\r\n                    </Button>\r\n                    <Button\r\n                      className=\"float-right\"\r\n                      color=\"default\"\r\n                      href=\"#pablo\"\r\n                      onClick={(e) => e.preventDefault()}\r\n                      size=\"sm\"\r\n                    >\r\n                      {/* Delete */}\r\n                    </Button>\r\n                  </div>\r\n                </CardHeader>\r\n                <CardBody className=\"pt-0 pt-md-4\">\r\n                  <Row>\r\n                    <div className=\"col\">\r\n                      <div className=\"card-profile-stats d-flex justify-content-center mt-md-5\">\r\n                        <div>\r\n                          <span className=\"heading\">22</span>\r\n                          <span className=\"description\">Total Tows</span>\r\n                        </div>\r\n                        <div>\r\n                          <span className=\"heading\">10</span>\r\n                          <span className=\"description\">Commissioned Tows</span>\r\n                        </div>\r\n                        <div>\r\n                          <span className=\"heading\">89</span>\r\n                          <span className=\"description\">\r\n                            Total tow Commission owed\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Row>\r\n                  <div className=\"text-center\">\r\n                    <h3>\r\n                      {modalInfo.first_name} {modalInfo.last_name}\r\n                      <span className=\"font-weight-light\"></span>\r\n                    </h3>\r\n                    <div className=\"h5 font-weight-300\">\r\n                      <i className=\"ni location_pin mr-2\" />\r\n                      Current Address:{\" \"}\r\n                      <b>{modalInfo.vehicle_details.address}</b>\r\n                    </div>\r\n\r\n                    <hr className=\"my-4\" />\r\n                    <p>\r\n                      {modalInfo.first_name} — registered on{\" \"}\r\n                      {modalInfo.createdAt}, with license{\" \"}\r\n                      <b>{modalInfo.vehicle_details.v_license}</b>\r\n                    </p>\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n            <Col className=\"order-xl-1\" xl=\"8\">\r\n              <Card className=\"bg-secondary shadow\">\r\n                <CardHeader className=\"bg-white border-0\">\r\n                  <Row className=\"align-items-center\">\r\n                    <Col xs=\"8\">\r\n                      <h3 className=\"mb-0\">My account</h3>\r\n                    </Col>\r\n                    <Col className=\"text-right\" xs=\"4\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        href=\"#pablo\"\r\n                        onClick={(e) => e.preventDefault()}\r\n                        size=\"sm\"\r\n                      >\r\n                        Settings\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <Form>\r\n                    <h6 className=\"heading-small text-muted mb-4\">\r\n                      User information\r\n                    </h6>\r\n                    <div className=\"pl-lg-4\">\r\n                      <Row>\r\n                        <Col lg=\"6\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-username\"\r\n                            >\r\n                              Username\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={modalInfo.first_name}\r\n                              id=\"input-username\"\r\n                              placeholder=\"Username\"\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"6\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-email\"\r\n                            >\r\n                              Email address\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              id=\"input-email\"\r\n                              placeholder={modalInfo.email}\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"email\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col lg=\"6\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-first-name\"\r\n                            >\r\n                              First name\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={modalInfo.first_name}\r\n                              id=\"input-first-name\"\r\n                              placeholder=\"First name\"\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"6\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-last-name\"\r\n                            >\r\n                              Last name\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={modalInfo.last_name}\r\n                              id=\"input-last-name\"\r\n                              placeholder=\"Last name\"\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                    <hr className=\"my-4\" />\r\n                    <h6 className=\"heading-small text-muted mb-4\">\r\n                      Contact information\r\n                    </h6>\r\n                    <div className=\"pl-lg-4\">\r\n                      <Row>\r\n                        <Col md=\"12\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-address\"\r\n                            >\r\n                              Address\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={modalInfo.vehicle_details.address}\r\n                              id=\"input-address\"\r\n                              placeholder=\"Vehicle Address\"\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col lg=\"4\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-city\"\r\n                            >\r\n                              Phone Number\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={modalInfo.number}\r\n                              id=\"input-city\"\r\n                              placeholder=\"Phone Number\"\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                    <hr className=\"my-4\" />\r\n                    <h6 className=\"heading-small text-muted mb-4\">\r\n                      Vehicle information\r\n                    </h6>\r\n                    <div className=\"pl-lg-4\">\r\n                      <Row>\r\n                        <Col md=\"12\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-address\"\r\n                            >\r\n                              Manufacturer\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={modalInfo.vehicle_details.address}\r\n                              id=\"input-address\"\r\n                              placeholder=\"Manufacturer\"\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col lg=\"4\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-city\"\r\n                            >\r\n                              Vehicle Type\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={modalInfo.vehicle_details.address}\r\n                              id=\"input-city\"\r\n                              placeholder=\"Vehicle Type\"\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"4\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-country\"\r\n                            >\r\n                              Max Weight\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={\r\n                                modalInfo.vehicle_details.max_weight\r\n                              }\r\n                              id=\"input-country\"\r\n                              placeholder=\"Max Weight\"\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"4\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-country\"\r\n                            >\r\n                              Vehicle License\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              id=\"input-postal-code\"\r\n                              defaultValue={modalInfo.vehicle_details.v_license}\r\n                              placeholder=\"Vehicle License\"\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"number\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                    <hr className=\"my-4\" />\r\n                    <h6 className=\"heading-small text-muted mb-4\">\r\n                      Payment Details\r\n                    </h6>\r\n                    <div className=\"pl-lg-4\">\r\n                      <Row>\r\n                        <Col md=\"12\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-address\"\r\n                            >\r\n                              Account Holder Name\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={\r\n                                modalInfo.payment_details.bank_holder_name\r\n                              }\r\n                              id=\"input-address\"\r\n                              placeholder=\"Account Holder Name\"\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col lg=\"4\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-city\"\r\n                            >\r\n                              Account Number\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={\r\n                                modalInfo.payment_details.account_number\r\n                              }\r\n                              id=\"input-city\"\r\n                              placeholder=\"Account Number\"\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"4\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-country\"\r\n                            >\r\n                              Bank Name\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={modalInfo.payment_details.bank_name}\r\n                              id=\"input-country\"\r\n                              placeholder=\"Bank Name\"\r\n                              // onChange={() => handleOnChange()}\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                  </Form>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        {/* <Button variant=\"secondary\" onClick={handleUpdate}>\r\n          Update\r\n        </Button> */}\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\n// Function to handle row deletion\r\nconst handleDeleteRow = (id) => {\r\n  // Construct the request body\r\n  const requestBody = {\r\n    id: id \r\n  };\r\n\r\n  fetch('http://qevla.com:3001/api/user/delete', {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(requestBody)\r\n  })\r\n    .then(response => {\r\n      if (response.ok) {\r\n        const updatedDriver = driver.filter(driver => driver.id !== id);\r\n        setModalInfo(updatedDriver);\r\n        window.location.reload();\r\n      } else {\r\n        console.error('Failed to delete driver:', response.statusText);\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Failed to delete driver:', error);\r\n    });\r\n};\r\n\r\n\r\n  const columns = [\r\n    { dataField: \"first_name\", text: \"Driver First Name\" },\r\n    { dataField: \"last_name\", text: \"Driver Last Name\" },\r\n    { dataField: \"email\", text: \"Driver Email\",  width: '150px',\r\n    classes: 'cell-overflow' },\r\n    { dataField: \"number\", text: \"Driver Phone\" },\r\n    { dataField: \"vehicle_details.v_license\", text: \"License Number\" },\r\n    // {\r\n    //   text: 'Actions',\r\n    //   formatter: (cell, row) => (\r\n    //     <button onClick={() => handleDeleteRow(row._id)}>Delete</button>\r\n    //   ),\r\n    // },\r\n   \r\n    {\r\n      text: \"Actions\",\r\n      formatter: (cellContent, row) => (\r\n        <DropdownButton title=\"Actions\">\r\n          <Dropdown.Item onClick={() => handleShow(row)}>View</Dropdown.Item>\r\n          <Dropdown.Item onClick={() => handleDeleteRow(row._id)}>Delete</Dropdown.Item>\r\n        </DropdownButton>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  function handleDelete(id) {\r\n    axios.delete(\"http://qevla.com:3001/api/user/delete\", {\r\n      // method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ id })\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to delete the row.\");\r\n        }\r\n        // Implement the logic to update the table after the row is deleted\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n  \r\n  \r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container className=\"mt--7\" fluid>\r\n        <CardHeader className=\"border-0\">\r\n          <h3 className=\"mb-0\">Drivers list</h3>\r\n        </CardHeader>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card className=\"shadow\">\r\n              <CardHeader className=\"border-0\">\r\n                <h3 className=\"mb-0\">Drivers list</h3>\r\n              </CardHeader>\r\n\r\n              <BootstrapTable\r\n                keyField=\"email\"\r\n                data={driver}\r\n                columns={columns}\r\n                pagination={paginationFactory()}\r\n                rowEvents={rowEvents}\r\n              />\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n        {show ? <ModalContent /> : null}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Drivers;\r\n","import { Card, CardBody, CardTitle, Container, Row, Col } from \"reactstrap\";\r\nimport { fetchAllDrivers } from \"services/onboarding-service\";\r\nimport axios from \"axios\";\r\nimport { endpoints } from \"../../api-endpoints\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { isSuccessful } from \"../../utils/tools\";\r\n// import { useSelector, useDispatch } from \"react-redux\";\r\nimport { fetchDrivers } from \"services/onboarding-service\";\r\nimport Drivers from \"views/Drivers\";\r\n\r\n\r\n\r\n\r\nconst Header = () => {\r\n\r\n  // const dispatch = useDispatch();\r\n  const [drivers, setDrivers] = useState([]);\r\n  const [admins, setAdmins] = useState([]);\r\n\r\nuseEffect(() => {\r\n  async function fetchUsers() {\r\n    const fullResponse = await fetch(endpoints.getDrivers);\r\n    const responseJson = await fullResponse.json();\r\n    const drivers = responseJson.users.filter(user => user.isAdmin === false);\r\n    const admins = responseJson.users.filter(user => user.isAdmin === true);\r\n\r\n    // console.log(\"Created drivers>>>>>>>: from headers responses\", responseJson);\r\n    setDrivers(drivers);\r\n    setAdmins(admins);\r\n  }\r\n\r\n  fetchUsers();\r\n}, []);\r\nconsole.log(\"Drivers on dashboard\", drivers.count)\r\nconsole.log(\"Admins on dashboard\", admins.count)\r\n  return (\r\n    <>\r\n      <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\">\r\n        <Container fluid>\r\n          <div className=\"header-body\">\r\n            {/* Card stats */}\r\n            <Row>\r\n              <Col lg=\"6\" xl=\"3\">\r\n                <Card className=\"card-stats mb-4 mb-xl-0\">\r\n                  <CardBody>\r\n                    <Row>\r\n                      <div className=\"col\">\r\n                        <CardTitle\r\n                          tag=\"h5\"\r\n                          className=\"text-uppercase text-muted mb-0\"\r\n                        >\r\n                          Total Drivers\r\n                        </CardTitle>\r\n                        <span className=\"h2 font-weight-bold mb-0\">\r\n                          {drivers.length}\r\n                        </span>\r\n                      </div>\r\n                      <Col className=\"col-auto\">\r\n                        <div className=\"icon icon-shape bg-danger text-white rounded-circle shadow\">\r\n                          <i className=\"fas fa-chart-bar\" />\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                    <p className=\"mt-3 mb-0 text-muted text-sm\">\r\n                      <span className=\"text-success mr-2\">\r\n                        <i className=\"fa fa-arrow-up\" /> %\r\n                      </span>{\" \"}\r\n                      <span className=\"text-nowrap\">Since last month</span>\r\n                    </p>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n              <Col lg=\"6\" xl=\"3\">\r\n                <Card className=\"card-stats mb-4 mb-xl-0\">\r\n                  <CardBody>\r\n                    <Row>\r\n                      <div className=\"col\">\r\n                        <CardTitle\r\n                          tag=\"h5\"\r\n                          className=\"text-uppercase text-muted mb-0\"\r\n                        >\r\n                          Total Admin\r\n                        </CardTitle>\r\n                        <span className=\"h2 font-weight-bold mb-0\">\r\n                       \r\n                            {admins.length}\r\n                        </span>\r\n                      </div>\r\n                      <Col className=\"col-auto\">\r\n                        <div className=\"icon icon-shape bg-warning text-white rounded-circle shadow\">\r\n                          <i className=\"fas fa-chart-pie\" />\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                    <p className=\"mt-3 mb-0 text-muted text-sm\">\r\n                      <span className=\"text-danger mr-2\">\r\n                        <i className=\"fas fa-arrow-down\" /> %\r\n                      </span>{\" \"}\r\n                      <span className=\"text-nowrap\">Since last week</span>\r\n                    </p>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n             <Col lg=\"6\" xl=\"3\">\r\n                <Card className=\"card-stats mb-4 mb-xl-0\">\r\n                  <CardBody>\r\n                    <Row>\r\n                      <div className=\"col\">\r\n                        <CardTitle\r\n                          tag=\"h5\"\r\n                          className=\"text-uppercase text-muted mb-0\"\r\n                        >\r\n                          Total Active Driver\r\n                        </CardTitle>\r\n                        <span className=\"h2 font-weight-bold mb-0\">                            \r\n                        {drivers.length}\r\n                        </span>\r\n                      </div>\r\n                      <Col className=\"col-auto\">\r\n                        <div className=\"icon icon-shape bg-yellow text-white rounded-circle shadow\">\r\n                          <i className=\"fas fa-users\" />\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                    <p className=\"mt-3 mb-0 text-muted text-sm\">\r\n                      <span className=\"text-warning mr-2\">\r\n                        <i className=\"fas fa-arrow-down\" /> 1.10%\r\n                      </span>{\" \"}\r\n                      <span className=\"text-nowrap\">Since yesterday</span>\r\n                    </p>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col> \r\n               <Col lg=\"6\" xl=\"3\">\r\n                <Card className=\"card-stats mb-4 mb-xl-0\">\r\n                  <CardBody>\r\n                    <Row>\r\n                      <div className=\"col\">\r\n                        <CardTitle\r\n                          tag=\"h5\"\r\n                          className=\"text-uppercase text-muted mb-0\"\r\n                        >\r\n                          Payments\r\n                        </CardTitle>\r\n                        <span className=\"h2 font-weight-bold mb-0\">49,65%</span>\r\n                      </div>\r\n                      <Col className=\"col-auto\">\r\n                        <div className=\"icon icon-shape bg-info text-white rounded-circle shadow\">\r\n                          <i className=\"fas fa-percent\" />\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                    <p className=\"mt-3 mb-0 text-muted text-sm\">\r\n                      <span className=\"text-success mr-2\">\r\n                        <i className=\"fas fa-arrow-up\" /> 12%\r\n                      </span>{\" \"}\r\n                      <span className=\"text-nowrap\">Since last month</span>\r\n                    </p>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col> \r\n            </Row>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","\r\nimport React, { useState, useEffect, useReducer } from \"react\";\r\n// node.js library that concatenates classes (strings)\r\nimport classnames from \"classnames\";\r\n// javascipt plugin for creating charts\r\nimport Chart from \"chart.js\";\r\n// react plugin used to create charts\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\n// import { useEffect } from \"react\";\r\n// import { isSuccessful } from \"utils/tools\";\r\nimport getCurrentUser from \"../services/auth_service\"\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  NavItem,\r\n  NavLink,\r\n  Nav,\r\n  Progress,\r\n  Table,\r\n  Container,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\n\r\n// core components\r\nimport {\r\n  chartOptions,\r\n  parseOptions,\r\n  chartExample1,\r\n  chartExample2,\r\n} from \"variables/charts.js\";\r\n\r\nimport Header from \"components/Headers/Header.js\";\r\n// import { fetchAllDrivers } from \"services/onboarding-service\";\r\n// import axios from \"axios\";\r\n// import { endpoints } from \"../api-endpoints\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n\r\n\r\n\r\nconst Index = (props) => {\r\n\r\n// const dispatch = useDispatch();\r\n\r\n  const [activeNav, setActiveNav] = useState(1);\r\n\r\n  const [chartExample1Data, setChartExample1Data] = useState(\"data1\");\r\n  // const [, setIsFetching] = useState(false);\r\n  \r\n\r\n  if (window.Chart) {\r\n    parseOptions(Chart, chartOptions());\r\n  }\r\n\r\n  const toggleNavs = (e, index) => {\r\n    e.preventDefault();\r\n    setActiveNav(index);\r\n    setChartExample1Data(\"data\" + index);\r\n  };\r\n\r\n\r\n\r\n\t// const [user, setValues] = \r\n\r\n    // useEffect(() => {\r\n    //   // getCurrentUser()\r\n    //   console.log('Data from server>>>:', localStorage.getItem(\"user\"))\r\n    //   // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    // }, []);\r\n// var retrievedObject = localStorage.getItem(\"user\");\r\n\r\n// console.log(\"Local Storage item\", window.localStorage.getItem(\"user\"));\r\n\r\n    //  useEffect(() => {\r\n    //    // Using an IIFE\r\n    //    (async function fetchAllDrivers() {\r\n    //     let config = {\r\n    //       method: \"post\",\r\n    //       url: endpoints.getDrivers,\r\n    //       headers: {\r\n    //         Accept: \"application/json, text/plain, /\",\r\n    //         \"Content-Type\": \"multipart/form-data\",\r\n    //       },\r\n    //     };\r\n    //      let data = await axios.get(config);\r\n    //   console.log(\"Data from server>>>:\", data);\r\n    //    })();\r\n    //  }, []);  \r\n//  const getUsers = async () => {\r\n//    let url = endpoints.getDrivers;\r\n//    const users = await axios.get(url);\r\n//    if (users) {\r\n//      let totalUsers = users.count;\r\n     \r\n//        setDrivers({\r\n//          count: totalUsers,\r\n//        }\r\n//      );\r\n//    console.log(\"Total users:>>>>\", totalUsers);\r\n\r\n//    }\r\n//    console.log(\"users:>>>>\", users);\r\n//    getUsers(); \r\n//  };\r\n\r\n    //  useEffect(() => {\r\n    //    getUsers(); // run it, run it\r\n    //  }, [users]);\r\n \r\n    // const doFetchDrivers = async () => {\r\n    //   try {\r\n    //     setIsFetching(true);\r\n    //     const res = await fetchAllDrivers();\r\n    //     setIsFetching(false);\r\n    //     if (res && isSuccessful(res?.actionResponse?.code)) {\r\n    //       setDrivers(res.responses);\r\n    //       // console.log(\"Created driver>>>>>>>: from header\", res.responses)\r\n    //     }\r\n    //   } catch (error) {\r\n    //     setIsFetching(false);\r\n    //     // handleMyErrors(error);\r\n    //   }\r\n    // };\r\n\r\n    // console.log(\"Created drivers>>>>>>>:\", drivers);\r\n    // useEffect(() => {\r\n    //   doFetchDrivers();\r\n    \r\n    //   return () => {};\r\n    //   // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    // }, [drivers]);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      \r\n      {/* <Container className=\"mt--7\" fluid>\r\n        <Row>\r\n          <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\r\n            <Card className=\"bg-gradient-default shadow\">\r\n              <CardHeader className=\"bg-transparent\">\r\n                <Row className=\"align-items-center\">\r\n                  {/* <div className=\"col\">\r\n                    <h6 className=\"text-uppercase text-light ls-1 mb-1\">\r\n                      Overview\r\n                    </h6>\r\n                    <h2 className=\"text-white mb-0\">Sales value </h2>\r\n                  </div> */}\r\n                  {/* <div className=\"col\">\r\n                    <Nav className=\"justify-content-end\" pills>\r\n                      <NavItem>\r\n                        <NavLink\r\n                          className={classnames(\"py-2 px-3\", {\r\n                            active: activeNav === 1,\r\n                          })}\r\n                          href=\"#pablo\"\r\n                          onClick={(e) => toggleNavs(e, 1)}\r\n                        >\r\n                          <span className=\"d-none d-md-block\">Month</span>\r\n                          <span className=\"d-md-none\">M</span>\r\n                        </NavLink>\r\n                      </NavItem>\r\n                      <NavItem>\r\n                        <NavLink\r\n                          className={classnames(\"py-2 px-3\", {\r\n                            active: activeNav === 2,\r\n                          })}\r\n                          data-toggle=\"tab\"\r\n                          href=\"#pablo\"\r\n                          onClick={(e) => toggleNavs(e, 2)}\r\n                        >\r\n                          <span className=\"d-none d-md-block\">Week</span>\r\n                          <span className=\"d-md-none\">W</span>\r\n                        </NavLink>\r\n                      </NavItem>\r\n                    </Nav>\r\n                  </div> */}\r\n                {/* </Row>\r\n              </CardHeader>\r\n              <CardBody> */}\r\n                {/* Chart */}\r\n                {/* <div className=\"chart\">\r\n                  <Line\r\n                    data={chartExample1[chartExample1Data]}\r\n                    options={chartExample1.options}\r\n                    getDatasetAtEvent={(e) => console.log(e)}\r\n                  />\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n          <Col xl=\"4\">\r\n            <Card className=\"shadow\">\r\n              <CardHeader className=\"bg-transparent\"> */}\r\n                {/* <Row className=\"align-items-center\">\r\n                  <div className=\"col\">\r\n                    <h6 className=\"text-uppercase text-muted ls-1 mb-1\">\r\n                      Performance\r\n                    </h6>\r\n                    <h2 className=\"mb-0\">Total orders</h2>\r\n                  </div>\r\n                </Row> */}\r\n              {/* </CardHeader>\r\n              <CardBody>\r\n                {/* Chart */}\r\n                {/* <div className=\"chart\">\r\n                  <Bar\r\n                    data={chartExample2.data}\r\n                    options={chartExample2.options}\r\n                  />\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mt-5\">\r\n          <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\r\n            <Card className=\"shadow\">\r\n              <CardHeader className=\"border-0\">\r\n                <Row className=\"align-items-center\">\r\n                  <div className=\"col\">\r\n                    <h3 className=\"mb-0\">Page visits</h3>\r\n                  </div>\r\n                  <div className=\"col text-right\">\r\n                    <Button\r\n                      color=\"primary\"\r\n                      href=\"#pablo\"\r\n                      onClick={(e) => e.preventDefault()}\r\n                      size=\"sm\"\r\n                    >\r\n                      See all\r\n                    </Button>\r\n                  </div>\r\n                </Row>\r\n              </CardHeader>\r\n              <Table className=\"align-items-center table-flush\" responsive>\r\n                <thead className=\"thead-light\">\r\n                  <tr>\r\n                    <th scope=\"col\">Page name</th>\r\n                    <th scope=\"col\">Visitors</th>\r\n                    <th scope=\"col\">Unique users</th>\r\n                    <th scope=\"col\">Bounce rate</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <th scope=\"row\">/argon/</th>\r\n                    <td>4,569</td>\r\n                    <td>340</td>\r\n                    <td>\r\n                      <i className=\"fas fa-arrow-up text-success mr-3\" /> 46,53%\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">/argon/index.html</th>\r\n                    <td>3,985</td>\r\n                    <td>319</td>\r\n                    <td>\r\n                      <i className=\"fas fa-arrow-down text-warning mr-3\" />{\" \"}\r\n                      46,53%\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">/argon/charts.html</th>\r\n                    <td>3,513</td>\r\n                    <td>294</td>\r\n                    <td>\r\n                      <i className=\"fas fa-arrow-down text-warning mr-3\" />{\" \"}\r\n                      36,49%\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">/argon/tables.html</th>\r\n                    <td>2,050</td>\r\n                    <td>147</td>\r\n                    <td>\r\n                      <i className=\"fas fa-arrow-up text-success mr-3\" /> 50,87%\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">/argon/profile.html</th>\r\n                    <td>1,795</td>\r\n                    <td>190</td>\r\n                    <td>\r\n                      <i className=\"fas fa-arrow-down text-danger mr-3\" />{\" \"}\r\n                      46,53%\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </Table>\r\n            </Card>\r\n          </Col>\r\n          <Col xl=\"4\">\r\n            <Card className=\"shadow\">\r\n              <CardHeader className=\"border-0\">\r\n                <Row className=\"align-items-center\">\r\n                  <div className=\"col\">\r\n                    <h3 className=\"mb-0\">Social traffic</h3>\r\n                  </div>\r\n                  <div className=\"col text-right\">\r\n                    <Button\r\n                      color=\"primary\"\r\n                      href=\"#pablo\"\r\n                      onClick={(e) => e.preventDefault()}\r\n                      size=\"sm\"\r\n                    >\r\n                      See all\r\n                    </Button>\r\n                  </div>\r\n                </Row>\r\n              </CardHeader>\r\n              <Table className=\"align-items-center table-flush\" responsive>\r\n                <thead className=\"thead-light\">\r\n                  <tr>\r\n                    <th scope=\"col\">Referral</th>\r\n                    <th scope=\"col\">Visitors</th>\r\n                    <th scope=\"col\" />\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <th scope=\"row\">Facebook</th>\r\n                    <td>1,480</td>\r\n                    <td>\r\n                      <div className=\"d-flex align-items-center\">\r\n                        <span className=\"mr-2\">60%</span>\r\n                        <div>\r\n                          <Progress\r\n                            max=\"100\"\r\n                            value=\"60\"\r\n                            barClassName=\"bg-gradient-danger\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">Facebook</th>\r\n                    <td>5,480</td>\r\n                    <td>\r\n                      <div className=\"d-flex align-items-center\">\r\n                        <span className=\"mr-2\">70%</span>\r\n                        <div>\r\n                          <Progress\r\n                            max=\"100\"\r\n                            value=\"70\"\r\n                            barClassName=\"bg-gradient-success\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">Google</th>\r\n                    <td>4,807</td>\r\n                    <td>\r\n                      <div className=\"d-flex align-items-center\">\r\n                        <span className=\"mr-2\">80%</span>\r\n                        <div>\r\n                          <Progress max=\"100\" value=\"80\" />\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">Instagram</th>\r\n                    <td>3,678</td>\r\n                    <td>\r\n                      <div className=\"d-flex align-items-center\">\r\n                        <span className=\"mr-2\">75%</span>\r\n                        <div>\r\n                          <Progress\r\n                            max=\"100\"\r\n                            value=\"75\"\r\n                            barClassName=\"bg-gradient-info\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">twitter</th>\r\n                    <td>2,645</td>\r\n                    <td>\r\n                      <div className=\"d-flex align-items-center\">\r\n                        <span className=\"mr-2\">30%</span>\r\n                        <div>\r\n                          <Progress\r\n                            max=\"100\"\r\n                            value=\"30\"\r\n                            barClassName=\"bg-gradient-warning\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </Table>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>  */} \r\n    </>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","\r\n// reactstrap components\r\nimport { Button, Container, Row, Col } from \"reactstrap\";\r\nimport React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\n\r\n  function getFormValues() {\r\n    const storedValues = localStorage.getItem(\"user\");\r\n    if (!storedValues)\r\n      return {\r\n        email: \"\",\r\n        message: \"\",\r\n        name: \"\",\r\n        telephone: \"\",\r\n      };\r\n    return JSON.parse(storedValues);\r\n  }\r\n\r\n  \r\n\r\n\r\nconst UserHeader = () => {\r\n      const [user, setUser] = React.useState(getFormValues);\r\n\r\n      React.useEffect(() => {\r\n        localStorage.getItem(\"user\", JSON.stringify(user));\r\n      }, [user]);\r\n\r\n      console.log(\"User data\", user);\r\n      // const { user: currentUser } = useSelector((state) => state.auth);\r\n\r\n      if (!user) {\r\n        return <Redirect to=\"/login\" />;\r\n      }\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"header pb-8 pt-5 pt-lg-8 d-flex align-items-center\"\r\n        style={{\r\n          minHeight: \"600px\",\r\n          backgroundImage:\r\n            \"url(\" +\r\n            require(\"../../assets/img/brand/qevla_logo.png\").default +\r\n            \")\",\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center top\",\r\n        }}\r\n      >\r\n        {/* Mask */}\r\n        <span className=\"mask bg-gradient-default opacity-8\" />\r\n        {/* Header container */}\r\n        <Container className=\"d-flex align-items-center\" fluid>\r\n          <Row>\r\n            <Col lg=\"7\" md=\"10\">\r\n              <h1 className=\"display-2 text-white\">Hello {user.first_name}</h1>\r\n              <p className=\"text-white mt-0 mb-5\">\r\n                This is your profile page. You can see the progress you've made\r\n                with your work and manage your projects or assigned tasks\r\n              </p>\r\n              <Button\r\n                color=\"info\"\r\n                href=\"#pablo\"\r\n                onClick={(e) => e.preventDefault()}\r\n              >\r\n                Edit profile\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserHeader;\r\n","\r\nimport React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Container,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\n// core components\r\nimport UserHeader from \"components/Headers/UserHeader.js\";\r\nimport userService from \"services/user.service\";\r\n\r\n  function getFormValues() {\r\n    const storedValues = localStorage.getItem(\"user\");\r\n    if (!storedValues)\r\n      return {\r\n        email: \"\",\r\n        message: \"\",\r\n        name: \"\",\r\n        telephone: \"\",\r\n      };\r\n    return JSON.parse(storedValues);\r\n  }\r\n\r\n  const Profile = () => {\r\n    const [user, setUser] = React.useState(getFormValues);\r\n\r\n    React.useEffect(() => {\r\n      localStorage.getItem(\"user\", JSON.stringify(user));\r\n    }, [user]);\r\n\r\n    console.log(\"User data\", user);\r\n    // const { user: currentUser } = useSelector((state) => state.auth);\r\n\r\n    if (!user) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n    return (\r\n      <>\r\n        <UserHeader />\r\n        {/* Page content */}\r\n        <Container className=\"mt--7\" fluid>\r\n          <Row>\r\n            <Col className=\"order-xl-2 mb-5 mb-xl-0\" xl=\"4\">\r\n              <Card className=\"card-profile shadow\">\r\n                <Row className=\"justify-content-center\">\r\n                  <Col className=\"order-lg-2\" lg=\"3\">\r\n                    <div className=\"card-profile-image\">\r\n                      <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\r\n                        <img\r\n                          alt=\"...\"\r\n                          className=\"rounded-circle\"\r\n                          src={\r\n                            require(\"../assets/img/theme/team-4-800x800.jpg\")\r\n                              .default\r\n                          }\r\n                        />\r\n                      </a>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <CardHeader className=\"text-center border-0 pt-8 pt-md-4 pb-0 pb-md-4\">\r\n                  <div className=\"d-flex justify-content-between\">\r\n                    <Button\r\n                      className=\"mr-4\"\r\n                      color=\"info\"\r\n                      href=\"#pablo\"\r\n                      onClick={(e) => e.preventDefault()}\r\n                      size=\"sm\"\r\n                    >\r\n                      {/* Approve */}\r\n                    </Button>\r\n                    <Button\r\n                      className=\"float-right\"\r\n                      color=\"default\"\r\n                      href=\"#pablo\"\r\n                      onClick={(e) => e.preventDefault()}\r\n                      size=\"sm\"\r\n                    >\r\n                      {/* Delete */}\r\n                    </Button>\r\n                  </div>\r\n                </CardHeader>\r\n                <CardBody className=\"pt-0 pt-md-4\">\r\n                  <Row>\r\n                    <div className=\"col\">\r\n                      <div className=\"card-profile-stats d-flex justify-content-center mt-md-5\">\r\n                        <div>\r\n                          <span className=\"heading\">22</span>\r\n                          <span className=\"description\">Total Tows</span>\r\n                        </div>\r\n                        <div>\r\n                          <span className=\"heading\">10</span>\r\n                          <span className=\"description\">Commissioned Tows</span>\r\n                        </div>\r\n                        <div>\r\n                          <span className=\"heading\">89</span>\r\n                          <span className=\"description\">Total tow Commission owed</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Row>\r\n                  <div className=\"text-center\">\r\n                    <h3>\r\n                      {user.first_name} {user.last_name}\r\n                      <span className=\"font-weight-light\"></span>\r\n                    </h3>\r\n                    <div className=\"h5 font-weight-300\">\r\n                      <i className=\"ni location_pin mr-2\" />\r\n                      Current Address: <b>{user.vehicle_details.address}</b>\r\n                    </div>\r\n                    {/* <div className=\"h5 mt-4\">\r\n                      <i className=\"ni business_briefcase-24 mr-2\" />\r\n                      Solution Manager - Creative Tim Officer\r\n                    </div>\r\n                    <div>\r\n                      <i className=\"ni education_hat mr-2\" />\r\n                      University of Computer Science\r\n                    </div> */}\r\n                    <hr className=\"my-4\" />\r\n                    <p>\r\n                      {user.first_name} — registered on {user.createdAt}, with\r\n                      license <b>{user.vehicle_details.v_license}</b>\r\n                      {/* Nick Murphy — writes, performs and records all of his own\r\n                      music. */}\r\n                    </p>\r\n                    {/* <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\r\n                      Show more\r\n                    </a> */}\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n            <Col className=\"order-xl-1\" xl=\"8\">\r\n              <Card className=\"bg-secondary shadow\">\r\n                <CardHeader className=\"bg-white border-0\">\r\n                  <Row className=\"align-items-center\">\r\n                    <Col xs=\"8\">\r\n                      <h3 className=\"mb-0\">My account</h3>\r\n                    </Col>\r\n                    <Col className=\"text-right\" xs=\"4\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        href=\"#pablo\"\r\n                        onClick={(e) => e.preventDefault()}\r\n                        size=\"sm\"\r\n                      >\r\n                        Settings\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <Form>\r\n                    <h6 className=\"heading-small text-muted mb-4\">\r\n                      User information\r\n                    </h6>\r\n                    <div className=\"pl-lg-4\">\r\n                      <Row>\r\n                        <Col lg=\"6\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-username\"\r\n                            >\r\n                              Username\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={user.first_name}\r\n                              id=\"input-username\"\r\n                              placeholder=\"Username\"\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"6\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-email\"\r\n                            >\r\n                              Email address\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              id=\"input-email\"\r\n                              placeholder={user.email}\r\n                              type=\"email\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col lg=\"6\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-first-name\"\r\n                            >\r\n                              First name\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={user.first_name}\r\n                              id=\"input-first-name\"\r\n                              placeholder=\"First name\"\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"6\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-last-name\"\r\n                            >\r\n                              Last name\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={user.last_name}\r\n                              id=\"input-last-name\"\r\n                              placeholder=\"Last name\"\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                    <hr className=\"my-4\" />\r\n                    {/* Address */}\r\n                    <h6 className=\"heading-small text-muted mb-4\">\r\n                      Contact information\r\n                    </h6>\r\n                    <div className=\"pl-lg-4\">\r\n                      <Row>\r\n                        <Col md=\"12\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-address\"\r\n                            >\r\n                              Address\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={user.vehicle_details.address}\r\n                              id=\"input-address\"\r\n                              placeholder=\"Vehicle Address\"\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col lg=\"4\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-city\"\r\n                            >\r\n                              Phone Number\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={user.number}\r\n                              id=\"input-city\"\r\n                              placeholder=\"Phone Number\"\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                    <hr className=\"my-4\" />\r\n                    {/* Address */}\r\n                    <h6 className=\"heading-small text-muted mb-4\">\r\n                      Vehicle information\r\n                    </h6>\r\n                    <div className=\"pl-lg-4\">\r\n                      <Row>\r\n                        <Col md=\"12\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-address\"\r\n                            >\r\n                              Manufacturer\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={user.vehicle_details.address}\r\n                              id=\"input-address\"\r\n                              placeholder=\"Manufacturer\"\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col lg=\"4\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-city\"\r\n                            >\r\n                              Vehicle Type\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={user.vehicle_details.address}\r\n                              id=\"input-city\"\r\n                              placeholder=\"Vehicle Type\"\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"4\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-country\"\r\n                            >\r\n                              Max Weight\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={user.vehicle_details.max_weight}\r\n                              id=\"input-country\"\r\n                              placeholder=\"Max Weight\"\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"4\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-country\"\r\n                            >\r\n                              Vehicle License\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              id=\"input-postal-code\"\r\n                              defaultValue={user.vehicle_details.v_license}\r\n                              placeholder=\"Vehicle License\"\r\n                              type=\"number\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                    <hr className=\"my-4\" />\r\n                    {/* Description */}\r\n                    <h6 className=\"heading-small text-muted mb-4\">\r\n                      Payment Details\r\n                    </h6>\r\n                    <div className=\"pl-lg-4\">\r\n                      <Row>\r\n                        <Col md=\"12\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-address\"\r\n                            >\r\n                              Account Holder Name\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={\r\n                                user.payment_details.bank_holder_name\r\n                              }\r\n                              id=\"input-address\"\r\n                              placeholder=\"Account Holder Name\"\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col lg=\"4\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-city\"\r\n                            >\r\n                              Account Number\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={user.payment_details.account_number}\r\n                              id=\"input-city\"\r\n                              placeholder=\"Account Number\"\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"4\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-country\"\r\n                            >\r\n                              Bank Name\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={user.payment_details.bank_name}\r\n                              id=\"input-country\"\r\n                              placeholder=\"Bank Name\"\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                  </Form>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  };\r\n\r\nexport default Profile;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { GoogleMap, InfoWindow, Marker } from \"@react-google-maps/api\";\r\n// core components\r\nimport Header from \"components/Headers/Header.js\";\r\nimport { endpoints } from \"../api-endpoints\";\r\n\r\n// const io = require('socket.io-client');\r\n// import \"assets/css/style.css\"\r\n\r\nfunction Map() {\r\n  const [activeMarker, setActiveMarker] = useState(null);\r\n  const [drivers, setDrivers] = useState([]);\r\n  const marker = [];\r\n  const marker2 = [];\r\n  const markerAddress = [];\r\n  const [latLng, setLatlng] = useState();\r\n\r\n  const handleActiveMarker = (drivers) => {\r\n    if (drivers === activeMarker) {\r\n      return;\r\n    }\r\n    setActiveMarker(drivers);\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetchUsers() {\r\n      const fullResponse = await fetch(endpoints.getDrivers);\r\n      const responseJson = await fullResponse.json();\r\n      const drivers = responseJson.users.filter(user => user.isAdmin === false);\r\n      setDrivers(drivers);\r\n      console.log(\"Endpoint response>>>>>>>>:\", responseJson.users);\r\n      console.log(\"Endpoint called>>>>>>>>:\", endpoints.getDrivers);\r\n      setLatlng();\r\n    }\r\n\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  drivers.forEach((user) => {\r\n    const driverInfo = (\r\n      // <div>\r\n      <div\r\n        style={{\r\n          width: \"41em\",\r\n          height: \"22em\",\r\n          color: \"#777\",\r\n          backgroundColor: \"#F0F0F0\",\r\n          margin: \"5% auto 0 auto\",\r\n          borderRadius: \"0.4em\",\r\n          borderTopRightRadius: \"0.37em\",\r\n          borderBottomRightRadius: \"0.37em\",\r\n          boxShadow: \"0 0 3px rgba(0, 0, 0, 0.15)\",\r\n          transition: \"box-shadow 200ms ease-in\",\r\n        }}\r\n      >\r\n        {/* {\" Driver Information\"} */}\r\n\r\n        <div style={{ padding: \"1.6em 2em 2em 14em\" }}>\r\n          <h1\r\n            style={{\r\n              color: \"#008080\",\r\n              fontSize: \"2.2em\",\r\n              letterSpacing: \"1px\",\r\n            }}\r\n          >\r\n            {user.first_name} {user.last_name}\r\n          </h1>\r\n          <h2\r\n            style={{ color: \"#00CED1\", fontSize: \"1.2em\", marginTop: \"0.2em\" }}\r\n          >\r\n            {user.vehicle_details.v_manufacturer}\r\n          </h2>\r\n          <hr />\r\n          <p\r\n            style={{\r\n              fontFamily: \"'Ubuntu Mono', monospace\",\r\n              margin: \"1em 0\",\r\n              fontWeight: \"700\",\r\n              color: \"black\",\r\n            }}\r\n          >\r\n            {user.vehicle_details.address}\r\n          </p>\r\n          <p\r\n            style={{\r\n              fontFamily: \"'Ubuntu Mono', monospace\",\r\n              margin: \"1em 0\",\r\n              fontWeight: \"700\",\r\n              color: \"black\",\r\n            }}\r\n          >\r\n            {user.number}\r\n          </p>\r\n          <hr />\r\n          <p\r\n            style={{\r\n              fontFamily: \"'Ubuntu Mono', monospace\",\r\n              margin: \"1em 0\",\r\n              fontWeight: \"700\",\r\n              color: \"black\",\r\n            }}\r\n          >\r\n            {user.email}\r\n          </p>\r\n          <p\r\n            style={{\r\n              fontFamily: \"'Ubuntu Mono', monospace\",\r\n              margin: \"1em 0\",\r\n              fontWeight: \"700\",\r\n              color: \"black\",\r\n            }}\r\n          >\r\n            {user.website}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n    marker.push({\r\n      id: user._id,\r\n      name: driverInfo,\r\n      position: user.address,\r\n    });\r\n  });\r\n\r\n  console.log(\r\n    \"Created drivers>>>>>>> from headers from map markers used\",\r\n    markerAddress\r\n  );\r\n\r\n  const google = window.google;\r\n\r\n  var qevLoc = new google.maps.LatLng(6.45084, 3.35011);\r\n  const handleOnLoad = (map) => {\r\n    var bounds = new google.maps.LatLngBounds();\r\n    bounds.extend(qevLoc);\r\n    marker.forEach(({ position }) => bounds.extend(position));\r\n    map.fitBounds(bounds);\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <GoogleMap\r\n        onLoad={handleOnLoad}\r\n        onClick={() => setActiveMarker(null)}\r\n        mapContainerStyle={{ height: \"600px\" }}\r\n        options={{\r\n          zoom: 10,\r\n          scrollwheel: false,\r\n          zoomControl: true,\r\n          styles: [\r\n            {\r\n              featureType: \"administrative\",\r\n              elementType: \"labels.text.fill\",\r\n              stylers: [{ color: \"#444444\" }],\r\n            },\r\n            {\r\n              featureType: \"landscape\",\r\n              elementType: \"all\",\r\n              stylers: [{ color: \"#f2f2f2\" }],\r\n            },\r\n            {\r\n              featureType: \"poi\",\r\n              elementType: \"all\",\r\n              stylers: [{ visibility: \"off\" }],\r\n            },\r\n            {\r\n              featureType: \"road\",\r\n              elementType: \"all\",\r\n              stylers: [{ saturation: -100 }, { lightness: 45 }],\r\n            },\r\n            {\r\n              featureType: \"road.highway\",\r\n              elementType: \"all\",\r\n              stylers: [{ visibility: \"simplified\" }],\r\n            },\r\n            {\r\n              featureType: \"road.arterial\",\r\n              elementType: \"labels.icon\",\r\n              stylers: [{ visibility: \"off\" }],\r\n            },\r\n            {\r\n              featureType: \"transit\",\r\n              elementType: \"all\",\r\n              stylers: [{ visibility: \"off\" }],\r\n            },\r\n            {\r\n              featureType: \"water\",\r\n              elementType: \"all\",\r\n              stylers: [{ color: \"#5e72e4\" }, { visibility: \"on\" }],\r\n            },\r\n          ],\r\n        }}\r\n      >\r\n        {marker.map(({ id, name, position }) => (\r\n          <Marker\r\n            key={id}\r\n            position={position}\r\n            onClick={() => handleActiveMarker(id)}\r\n          >\r\n            {activeMarker === id ? (\r\n              <InfoWindow onCloseClick={() => setActiveMarker(null)}>\r\n                <div>{name}</div>\r\n              </InfoWindow>\r\n            ) : null}\r\n          </Marker>\r\n        ))}\r\n      </GoogleMap>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","\r\n// reactstrap components\r\nimport { Button, Container, Row, Col, Card, CardBody, CardTitle } from \"reactstrap\";\r\nimport React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { } from \"reactstrap\";\r\n\r\n\r\n\r\n\r\n  function getFormValues() {\r\n    const storedValues = localStorage.getItem(\"user\");\r\n    if (!storedValues)\r\n      return {\r\n        email: \"\",\r\n        message: \"\",\r\n        name: \"\",\r\n        telephone: \"\",\r\n      };\r\n    return JSON.parse(storedValues);\r\n  }\r\n\r\n  \r\n\r\n\r\nconst PaymentHeader = () => {\r\n      const [user, setUser] = React.useState(getFormValues);\r\n\r\n      React.useEffect(() => {\r\n        localStorage.getItem(\"user\", JSON.stringify(user));\r\n      }, [user]);\r\n\r\n      if (!user) {\r\n        return <Redirect to=\"/login\" />;\r\n      }\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"header pb-8 pt-5 pt-lg-8 d-flex align-items-center\"\r\n        style={{\r\n          minHeight: \"600px\",\r\n          backgroundImage:\r\n            \"url(\" +\r\n            require(\"../../assets/img/brand/qevla_logo.png\").default +\r\n            \")\",\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center top\",\r\n        }}\r\n      >\r\n        {/* Mask */}\r\n        <span className=\"mask bg-gradient-default opacity-8\" />\r\n        {/* Header container */}\r\n        <Container className=\"d-flex align-items-center\" fluid>\r\n       \r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaymentHeader;\r\n","import React from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nconst PaymentModal = ({ selectedPayment, showModal, onClose }) => {\r\n  if (!selectedPayment) {\r\n    return null; // Render nothing if selectedPayment is undefined\r\n  }\r\n\r\n  return (\r\n    <Modal show={showModal} onHide={onClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Payment Authorization URL</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <p><strong>Payment ID:</strong> {selectedPayment.id}</p>\r\n        <p><strong>Account Holder Name:</strong> {selectedPayment.subaccount.business_name}</p>\r\n        <p><strong>Account Number:</strong> {selectedPayment.subaccount.account_number}</p>\r\n        <p><strong>Bank Name:</strong> {selectedPayment.subaccount.settlement_bank}</p>\r\n        <p><strong>Amount:</strong> {selectedPayment.amount}</p>\r\n        {/* Add a \"Copy to Clipboard\" button here */}\r\n        {/* Implement copy-to-clipboard logic */}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={onClose}>\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default PaymentModal;\r\n","import React, { useState } from \"react\";\r\nimport {Dropdown, DropdownButton } from \"react-bootstrap\";\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    ModalHeader,\r\n    ModalBody\r\n} from \"reactstrap\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport PaymentModal from \"./PaymentModal\";\r\n\r\n// ...\r\n\r\n// Define a component to display the transaction data in a table\r\nconst TransactionTable = ({ data }) => {\r\n    const [show, setShow] = useState(false);\r\n    const [selectedPayment, setSelectedPayment] = useState(null);\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    // Handle row click to show the modal\r\n    const handleRowClick = (row) => {\r\n        setSelectedPayment(row);\r\n        setShowModal(true);\r\n    };\r\n\r\n    // Close the modal\r\n    const closeModal = () => {\r\n        setSelectedPayment(null);\r\n        setShowModal(false);\r\n    }\r\n\r\n    console.log(selectedPayment);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    // Define columns for the table\r\n    const columns = [\r\n        { dataField: \"id\", text: \"Payment ID\" },\r\n        { dataField: \"subaccount.business_name\", text: \"Acc Holder\", style: { whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis' } },\r\n        { dataField: \"subaccount.account_number\", text: \"Acc Number\", style: { whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis' } },\r\n        { dataField: \"subaccount.settlement_bank\", text: \"Bank Name\", style: { whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis' } },\r\n        { dataField: \"amount\", text: \"Amount\" },\r\n        // Add more payment-related columns as needed\r\n        // {\r\n        //     text: \"Actions\",\r\n        //     formatter: (cellContent, row) => (\r\n        //         <DropdownButton title=\"Actions\">\r\n        //             <Dropdown.Item onClick={() => handleRowClick(row)}>View</Dropdown.Item>\r\n        //             {/* <Dropdown.Item onClick={() => handleDeleteRow(row.id)}>Delete</Dropdown.Item> */}\r\n        //         </DropdownButton>\r\n        //     ),\r\n        // },\r\n    ];\r\n\r\n    return (\r\n        <Card className=\"bg-secondary shadow\">\r\n            <CardHeader className=\"border-0\">\r\n                <h3 className=\"mb-0\" style={{ float: \"left\" }}>\r\n                    Track Driver Payment History\r\n                </h3>\r\n            </CardHeader>\r\n            <CardBody>\r\n                <Row>\r\n                    <div className=\"col\">\r\n                        <Card className=\"shadow\">\r\n                            <BootstrapTable\r\n                                keyField=\"id\"\r\n                                data={data} // Pass the transaction data to the table\r\n                                columns={columns}\r\n                                pagination={paginationFactory()}\r\n                                rowEvents={{ onClick: handleRowClick }} // Handle row click event\r\n                            />\r\n                        </Card>\r\n                    </div>\r\n                </Row>\r\n            </CardBody>\r\n            {/* Modal */}\r\n            {selectedPayment && (\r\n                <PaymentModal\r\n                    show={showModal}\r\n                    onHide={closeModal}\r\n                    payment={selectedPayment}\r\n                />\r\n            )}\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default TransactionTable;\r\n","\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  ModalHeader, ModalBody\r\n} from \"reactstrap\";\r\n// core components\r\nimport PaymentHeader from \"components/Headers/Payment.js\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\n// import PaginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport \"./modal.css\"\r\nimport { Dropdown, DropdownButton } from 'react-bootstrap';\r\nimport CopyToClipboard from \"react-copy-to-clipboard\";\r\nimport TransactionTable from \"./TransactionTable\";\r\n\r\n\r\nfunction getFormValues() {\r\n  const storedValues = localStorage.getItem(\"user\");\r\n  if (!storedValues)\r\n    return {\r\n      email: \"\",\r\n      message: \"\",\r\n      name: \"\",\r\n      telephone: \"\",\r\n    };\r\n  return JSON.parse(storedValues);\r\n}\r\n\r\n\r\n\r\nconst Paymnt = ({data}) => {\r\n  const [user, setUser] = React.useState(getFormValues);\r\n  const [modalInfo, setModalInfo] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const driver = [];\r\n  const [responseData, setResponseData] = useState(null);\r\n  const [apiResponse, setApiResponse] = useState(null);\r\n  const [transactionData, setTransactionData] = useState([]);\r\n\r\n  const [formData, setFormData] = useState({\r\n    email: \"dare@qevla.com\",\r\n    amount: \"\",\r\n    subaccount: \"ACCT_s95h9r7ezsdqgft\",\r\n    transaction_charge: 10000,\r\n  });\r\n  // const navigate = useHistory();\r\n\r\n  // const { SearchBar } = Search;\r\n\r\n  const toggleModal = () => {\r\n    setModalOpen(!modalOpen);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    // fetch(\"http://qevla.com:3001/api/user/payment/transactions\") // Replace with your API endpoint\r\n    fetch(\"http://qevla.com:3001/api/user/payment/transactions\") // Replace with your API endpoint\r\n      .then((response) => response.json())\r\n      .then((data) => setTransactionData(data.data));\r\n  }, []);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { email, amount, subaccount, transaction_charge } = formData;\r\n    const payload = {\r\n      email,\r\n      amount,\r\n      subaccount,\r\n      transaction_charge,\r\n    };\r\n\r\n    // fetch(\"http://qevla.com:3001/api/user/accept-payment\", {\r\n      fetch(\"http://qevla.com:3001/api/user/accept-payment\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNjI2ZjE5NmNjNmUwOGY2ZGU0ZTc3YTFjIiwibnVtYmVyIjoiMTIzNDU2NzgiLCJpYXQiOjE2NTE0NTA4NDEsImV4cCI6MTY1MTQ1ODA0MX0.I0ebFo0X6W3BYZ2zZNTuedBnYYa3_zdKAGnpg7u5Nvo\",\r\n      },\r\n      body: JSON.stringify(payload),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setApiResponse(data.data.authorization_url);\r\n        console.log(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      });\r\n  };\r\n\r\n\r\n  const PaymentModal = ({ responseData, showModal, onClose }) => {\r\n    const [copySuccess, setCopySuccess] = React.useState(false); // Initialize copySuccess state\r\n\r\n    const copyTextRef = useRef(null);\r\n    return (\r\n      <Modal show={showModal} onHide={onClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Payment Authorization URL</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div ref={copyTextRef}>{responseData}</div>\r\n          <CopyToClipboard\r\n            text={responseData} // Text to copy\r\n            onCopy={() => setCopySuccess(true)} // Callback when copy is successful\r\n          >\r\n            <Button variant=\"primary\">\r\n              {copySuccess ? 'Copied!' : 'Copy to Clipboard'}\r\n            </Button>\r\n          </CopyToClipboard>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={onClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n    \r\n  };\r\n\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  // Function to open the modal\r\n  const openModal = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  // Function to close the modal\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const handleApiResponse = (apiResponse) => {\r\n    setResponseData(apiResponse);\r\n    openModal(); // Open the modal after receiving the response\r\n  };\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const rowEvents = {\r\n    onClick: (e, row) => {\r\n      console.log(\"Row list test\", row.id);\r\n      setModalInfo(row);\r\n      // toggleTrueFalse();\r\n    },\r\n  };\r\n\r\n  if (!user) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <PaymentHeader />\r\n      {/* Page content */}\r\n      <Container className=\"mt--7\" fluid>\r\n        <Row>\r\n          <Col>\r\n            <Card className=\"bg-secondary shadow\">\r\n              <CardHeader className=\"bg-white border-0\">\r\n                <Row className=\"align-items-center\">\r\n                  <Col xs=\"8\">\r\n                    <h3 className=\"mb-0\">Add Payment for the order</h3>\r\n                  </Col>\r\n                  <Col className=\"text-right\" xs=\"4\"></Col>\r\n                </Row>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <h6 className=\"heading-small text-muted mb-4\">\r\n                    Enter transaction details below\r\n                  </h6>\r\n                  <div className=\"pl-lg-4\">\r\n                    <FormGroup>\r\n                      <label for=\"amount\">Enter Amount</label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"amount\"\r\n                        id=\"amount\"\r\n                        placeholder=\"Enter amount\"\r\n                        value={formData.amount} // Populate the input value from state\r\n                        onChange={handleInputChange} // Attach event handler\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"pl-lg-4\">\r\n                    <FormGroup>\r\n                      <label for=\"subaccount\">Sub Account</label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"subaccount\"\r\n                        id=\"subaccount\"\r\n                        placeholder=\"Enter subaccount code\"\r\n                        value={formData.subaccount} // Populate the input value from state\r\n                        onChange={handleInputChange} // Attach event handler\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"pl-lg-4\">\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                      Submit\r\n                    </Button>\r\n                  </div>\r\n                  <Button variant=\"primary\" style={{ float: \"right\" }} onClick={() => handleApiResponse(apiResponse)}>Copy the payment link</Button>\r\n\r\n                  {/* Display the modal */}\r\n                  <PaymentModal\r\n                    responseData={responseData}\r\n                    showModal={showModal}\r\n                    onClose={closeModal}\r\n                  />\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n          {/* </Row> */}\r\n          {/* <Row> */}\r\n          <Col className=\"order-xl-1\" xl=\"8\">\r\n          <TransactionTable data={transactionData} />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Paymnt;\r\n","import React from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { Dropdown, DropdownButton } from \"react-bootstrap\";\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    Container,\r\n    Row,\r\n    Col,\r\n  } from \"reactstrap\";\r\n\r\nconst SubaccountTable = ({ data }) => {\r\n  const columns = [\r\n    { dataField: \"id\", text: \"Payment ID\" },\r\n    { dataField: \"business_name\", text: \"Account Holder Name\", style: { whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis' } },\r\n    { dataField: \"account_number\", text: \"Account Number\", style: { whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis' } },\r\n    { dataField: \"settlement_bank\", text: \"Bank Name\", style: { whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis' } },\r\n    { dataField: \"percentage_charge\", text: \"Percentage Charge\", style: { whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis' } },\r\n    // {\r\n    //   text: \"Actions\",\r\n    //   formatter: (cellContent, row) => (\r\n    //     <DropdownButton title=\"Actions\">\r\n    //       <Dropdown.Item onClick={() => handleShow(row)}>View</Dropdown.Item>\r\n    //       <Dropdown.Item onClick={() => handleDeleteRow(row.id)}>\r\n    //         Delete\r\n    //       </Dropdown.Item>\r\n    //     </DropdownButton>\r\n    //   ),\r\n    // },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"col\">\r\n      <Card className=\"shadow\">\r\n        <BootstrapTable\r\n          keyField=\"id\"\r\n          data={data}\r\n          columns={columns}\r\n          pagination={paginationFactory()}\r\n        />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubaccountTable;\r\n","\r\nimport React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Container,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\n// core components\r\nimport PaymentHeader from \"components/Headers/Payment.js\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\n// import PaginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { useState, useEffect } from \"react\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport \"./modal.css\"\r\nimport { Dropdown, DropdownButton } from 'react-bootstrap';\r\nimport SubaccountTable from \"./SubAccountTable\";\r\n\r\nfunction getFormValues() {\r\n  const storedValues = localStorage.getItem(\"user\");\r\n  if (!storedValues)\r\n    return {\r\n      email: \"\",\r\n      message: \"\",\r\n      name: \"\",\r\n      telephone: \"\",\r\n    };\r\n  return JSON.parse(storedValues);\r\n}\r\n\r\nconst SubAccounts = () => {\r\n  const [user, setUser] = React.useState(getFormValues);\r\n  const [modalInfo, setModalInfo] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [state, setState] = useState();\r\n  const [drivers, setDrivers] = useState([]);\r\n  const driver = [];\r\n\r\n  const [subaccountData, setSubaccountData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch subaccount data from your API here\r\n    // Example fetch request:\r\n    fetchSubaccountData();\r\n  }, []);\r\n\r\n  const fetchSubaccountData = async () => {\r\n    try {\r\n      // Replace with your API endpoint and authorization header\r\n      const response = await fetch(\r\n        \"http://qevla.com:3001/api/user/payment/get-subaccount\",\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer YOUR_ACCESS_TOKEN\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        const responseData = await response.json();\r\n        setSubaccountData(responseData.data);\r\n      } else {\r\n        console.error(\"Failed to fetch subaccount data\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching subaccount data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const [formData, setFormData] = useState({\r\n    business_name: \"\",\r\n    settlement_bank: \"\",\r\n    account_number: \"\",\r\n    percentage_charge: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Prepare the POST request data\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer YOUR_ACCESS_TOKEN`, // Replace with your actual token\r\n      },\r\n      body: JSON.stringify(formData),\r\n    };\r\n\r\n    // Send the POST request\r\n    try {\r\n      const response = await fetch(\r\n        \"http://qevla.com:3001/api/user/create-subaccount\",\r\n        requestOptions\r\n      );\r\n\r\n      if (response.ok) {\r\n        console.log(\"Subaccount created successfully!\");\r\n        // Handle success, e.g., show a success message to the user\r\n      } else {\r\n        console.error(\"Failed to create subaccount\");\r\n        // Handle error, e.g., show an error message to the user\r\n      }\r\n    } catch (error) {\r\n      console.error(\"An error occurred:\", error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  const rowEvents = {\r\n    onClick: (e, row) => {\r\n      console.log(\"Row list test\", row.id);\r\n      setModalInfo(row);\r\n      // toggleTrueFalse();\r\n    },\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    localStorage.getItem(\"user\", JSON.stringify(user));\r\n  }, [user]);\r\n\r\n  console.log(\"User data\", user);\r\n  // const { user: currentUser } = useSelector((state) => state.auth);\r\n\r\n  if (!user) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  const columns = [\r\n    { dataField: \"id\", text: \"Payment ID\" },\r\n    { dataField: \"account_holder_name\", text: \"Account Holder Name\" },\r\n    { dataField: \"account_number\", text: \"Account Number\" },\r\n    { dataField: \"bank_name\", text: \"Bank Name\" },\r\n    { dataField: \"amount\", text: \"Amount\" },\r\n    // Add more payment-related columns as needed\r\n    {\r\n      text: \"Actions\",\r\n      formatter: (cellContent, row) => (\r\n        <DropdownButton title=\"Actions\">\r\n          <Dropdown.Item onClick={() => handleShow(row)}>View</Dropdown.Item>\r\n          <Dropdown.Item onClick={() => handleDeleteRow(row.id)}>\r\n            Delete\r\n          </Dropdown.Item>\r\n        </DropdownButton>\r\n      ),\r\n    },\r\n  ];\r\n\r\n\r\n  // Function to handle row deletion\r\n  const handleDeleteRow = (id) => {\r\n    // Construct the request body\r\n    const requestBody = {\r\n      id: id\r\n    };\r\n\r\n    fetch('http://qevla.com:3001/api/user/delete', {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(requestBody)\r\n    })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          const updatedDriver = driver.filter(driver => driver.id !== id);\r\n          setModalInfo(updatedDriver);\r\n          window.location.reload();\r\n        } else {\r\n          console.error('Failed to delete driver:', response.statusText);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('Failed to delete driver:', error);\r\n      });\r\n  };\r\n\r\n\r\n  const ModalContent = () => {\r\n    return (\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        className=\"modal-width\"\r\n        contentClassName=\"transparentBgClass\"\r\n        dialogClassName=\"modal-width\"\r\n        aria-labelledby=\"example-custom-modal-styling-title\"\r\n      >\r\n        <Modal.Header closeLabel=\"X\">\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Modal.Title>\r\n            {modalInfo.first_name} {modalInfo.last_name}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Container fluid>\r\n            <Row>\r\n              <Col className=\"order-xl-2 mb-5 mb-xl-0\" xl=\"4\">\r\n                <Card className=\"card-profile shadow\">\r\n                  <Row className=\"justify-content-center\">\r\n                    <Col className=\"order-lg-2\" lg=\"3\">\r\n                      <div className=\"card-profile-image\">\r\n                        <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\r\n                          <img\r\n                            alt=\"...\"\r\n                            className=\"rounded-circle\"\r\n                            src={\r\n                              require(\"../assets/img/brand/qevla_logo1.png\")\r\n                                .default\r\n                            }\r\n                          />\r\n                        </a>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <CardHeader className=\"text-center border-0 pt-8 pt-md-4 pb-0 pb-md-4\">\r\n                    <div className=\"d-flex justify-content-between\">\r\n                      <Button\r\n                        className=\"mr-4\"\r\n                        color=\"info\"\r\n                        href=\"#pablo\"\r\n                        onClick={(e) => e.preventDefault()}\r\n                        size=\"sm\"\r\n                      >\r\n                        {/* Approve */}\r\n                      </Button>\r\n                      <Button\r\n                        className=\"float-right\"\r\n                        color=\"default\"\r\n                        href=\"#pablo\"\r\n                        onClick={(e) => e.preventDefault()}\r\n                        size=\"sm\"\r\n                      >\r\n                        {/* Delete */}\r\n                      </Button>\r\n                    </div>\r\n                  </CardHeader>\r\n                  <CardBody className=\"pt-0 pt-md-4\">\r\n                    <Row>\r\n                      <div className=\"col\">\r\n                        <div className=\"card-profile-stats d-flex justify-content-center mt-md-5\">\r\n                          <div>\r\n                            <span className=\"heading\">22</span>\r\n                            <span className=\"description\">Total Tows</span>\r\n                          </div>\r\n                          <div>\r\n                            <span className=\"heading\">10</span>\r\n                            <span className=\"description\">Commissioned Tows</span>\r\n                          </div>\r\n                          <div>\r\n                            <span className=\"heading\">89</span>\r\n                            <span className=\"description\">\r\n                              Total tow Commission owed\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Row>\r\n                    <div className=\"text-center\">\r\n                      <h3>\r\n                        {modalInfo.first_name} {modalInfo.last_name}\r\n                        <span className=\"font-weight-light\"></span>\r\n                      </h3>\r\n                      <div className=\"h5 font-weight-300\">\r\n                        <i className=\"ni location_pin mr-2\" />\r\n                        Current Address:{\" \"}\r\n                        <b>{modalInfo.vehicle_details.address}</b>\r\n                      </div>\r\n\r\n                      <hr className=\"my-4\" />\r\n                      <p>\r\n                        {modalInfo.first_name} — registered on{\" \"}\r\n                        {modalInfo.createdAt}, with license{\" \"}\r\n                        <b>{modalInfo.vehicle_details.v_license}</b>\r\n                      </p>\r\n                    </div>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n              <Col className=\"order-xl-1\" xl=\"8\">\r\n                <Card className=\"bg-secondary shadow\">\r\n                  <CardHeader className=\"bg-white border-0\">\r\n                    <Row className=\"align-items-center\">\r\n                      <Col xs=\"8\">\r\n                        <h3 className=\"mb-0\">My account</h3>\r\n                      </Col>\r\n                      <Col className=\"text-right\" xs=\"4\">\r\n                        <Button\r\n                          color=\"primary\"\r\n                          href=\"#pablo\"\r\n                          onClick={(e) => e.preventDefault()}\r\n                          size=\"sm\"\r\n                        >\r\n                          Settings\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <Form>\r\n                      <h6 className=\"heading-small text-muted mb-4\">\r\n                        User information\r\n                      </h6>\r\n                      <div className=\"pl-lg-4\">\r\n                        <Row>\r\n                          <Col lg=\"6\">\r\n                            <FormGroup>\r\n                              <label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"input-username\"\r\n                              >\r\n                                Username\r\n                              </label>\r\n                              <Input\r\n                                className=\"form-control-alternative\"\r\n                                defaultValue={modalInfo.first_name}\r\n                                id=\"input-username\"\r\n                                placeholder=\"Username\"\r\n                                // onChange={() => handleOnChange}\r\n                                type=\"text\"\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col lg=\"6\">\r\n                            <FormGroup>\r\n                              <label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"input-email\"\r\n                              >\r\n                                Email address\r\n                              </label>\r\n                              <Input\r\n                                className=\"form-control-alternative\"\r\n                                id=\"input-email\"\r\n                                placeholder={modalInfo.email}\r\n                                // onChange={() => handleOnChange}\r\n                                type=\"email\"\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col lg=\"6\">\r\n                            <FormGroup>\r\n                              <label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"input-first-name\"\r\n                              >\r\n                                First name\r\n                              </label>\r\n                              <Input\r\n                                className=\"form-control-alternative\"\r\n                                defaultValue={modalInfo.first_name}\r\n                                id=\"input-first-name\"\r\n                                placeholder=\"First name\"\r\n                                // onChange={() => handleOnChange}\r\n                                type=\"text\"\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col lg=\"6\">\r\n                            <FormGroup>\r\n                              <label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"input-last-name\"\r\n                              >\r\n                                Last name\r\n                              </label>\r\n                              <Input\r\n                                className=\"form-control-alternative\"\r\n                                defaultValue={modalInfo.last_name}\r\n                                id=\"input-last-name\"\r\n                                placeholder=\"Last name\"\r\n                                // onChange={() => handleOnChange}\r\n                                type=\"text\"\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n                      <hr className=\"my-4\" />\r\n                      <h6 className=\"heading-small text-muted mb-4\">\r\n                        Contact information\r\n                      </h6>\r\n                      <div className=\"pl-lg-4\">\r\n                        <Row>\r\n                          <Col md=\"12\">\r\n                            <FormGroup>\r\n                              <label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"input-address\"\r\n                              >\r\n                                Address\r\n                              </label>\r\n                              <Input\r\n                                className=\"form-control-alternative\"\r\n                                defaultValue={modalInfo.vehicle_details.address}\r\n                                id=\"input-address\"\r\n                                placeholder=\"Vehicle Address\"\r\n                                // onChange={() => handleOnChange}\r\n                                type=\"text\"\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col lg=\"4\">\r\n                            <FormGroup>\r\n                              <label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"input-city\"\r\n                              >\r\n                                Phone Number\r\n                              </label>\r\n                              <Input\r\n                                className=\"form-control-alternative\"\r\n                                defaultValue={modalInfo.number}\r\n                                id=\"input-city\"\r\n                                placeholder=\"Phone Number\"\r\n                                // onChange={() => handleOnChange}\r\n                                type=\"text\"\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n                      <hr className=\"my-4\" />\r\n                      <h6 className=\"heading-small text-muted mb-4\">\r\n                        Vehicle information\r\n                      </h6>\r\n                      <div className=\"pl-lg-4\">\r\n                        <Row>\r\n                          <Col md=\"12\">\r\n                            <FormGroup>\r\n                              <label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"input-address\"\r\n                              >\r\n                                Manufacturer\r\n                              </label>\r\n                              <Input\r\n                                className=\"form-control-alternative\"\r\n                                defaultValue={modalInfo.vehicle_details.address}\r\n                                id=\"input-address\"\r\n                                placeholder=\"Manufacturer\"\r\n                                // onChange={() => handleOnChange}\r\n                                type=\"text\"\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col lg=\"4\">\r\n                            <FormGroup>\r\n                              <label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"input-city\"\r\n                              >\r\n                                Vehicle Type\r\n                              </label>\r\n                              <Input\r\n                                className=\"form-control-alternative\"\r\n                                defaultValue={modalInfo.vehicle_details.address}\r\n                                id=\"input-city\"\r\n                                placeholder=\"Vehicle Type\"\r\n                                // onChange={() => handleOnChange}\r\n                                type=\"text\"\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col lg=\"4\">\r\n                            <FormGroup>\r\n                              <label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"input-country\"\r\n                              >\r\n                                Max Weight\r\n                              </label>\r\n                              <Input\r\n                                className=\"form-control-alternative\"\r\n                                defaultValue={\r\n                                  modalInfo.vehicle_details.max_weight\r\n                                }\r\n                                id=\"input-country\"\r\n                                placeholder=\"Max Weight\"\r\n                                // onChange={() => handleOnChange}\r\n                                type=\"text\"\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col lg=\"4\">\r\n                            <FormGroup>\r\n                              <label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"input-country\"\r\n                              >\r\n                                Vehicle License\r\n                              </label>\r\n                              <Input\r\n                                className=\"form-control-alternative\"\r\n                                id=\"input-postal-code\"\r\n                                defaultValue={modalInfo.vehicle_details.v_license}\r\n                                placeholder=\"Vehicle License\"\r\n                                // onChange={() => handleOnChange}\r\n                                type=\"number\"\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n                      <hr className=\"my-4\" />\r\n                      <h6 className=\"heading-small text-muted mb-4\">\r\n                        Payment Details\r\n                      </h6>\r\n                      <div className=\"pl-lg-4\">\r\n                        <Row>\r\n                          <Col md=\"12\">\r\n                            <FormGroup>\r\n                              <label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"input-address\"\r\n                              >\r\n                                Account Holder Name\r\n                              </label>\r\n                              <Input\r\n                                className=\"form-control-alternative\"\r\n                                defaultValue={\r\n                                  modalInfo.payment_details.bank_holder_name\r\n                                }\r\n                                id=\"input-address\"\r\n                                placeholder=\"Account Holder Name\"\r\n                                // onChange={() => handleOnChange}\r\n                                type=\"text\"\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col lg=\"4\">\r\n                            <FormGroup>\r\n                              <label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"input-city\"\r\n                              >\r\n                                Account Number\r\n                              </label>\r\n                              <Input\r\n                                className=\"form-control-alternative\"\r\n                                defaultValue={\r\n                                  modalInfo.payment_details.account_number\r\n                                }\r\n                                id=\"input-city\"\r\n                                placeholder=\"Account Number\"\r\n                                // onChange={() => handleOnChange}\r\n                                type=\"text\"\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col lg=\"4\">\r\n                            <FormGroup>\r\n                              <label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"input-country\"\r\n                              >\r\n                                Bank Name\r\n                              </label>\r\n                              <Input\r\n                                className=\"form-control-alternative\"\r\n                                defaultValue={modalInfo.payment_details.bank_name}\r\n                                id=\"input-country\"\r\n                                placeholder=\"Bank Name\"\r\n                                // onChange={() => handleOnChange()}\r\n                                type=\"text\"\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n                    </Form>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          {/* <Button variant=\"secondary\" onClick={handleUpdate}>\r\n          Update\r\n        </Button> */}\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <PaymentHeader />\r\n      {/* Page content */}\r\n      <Container className=\"mt--7\" fluid>\r\n        <Row>\r\n\r\n          <Col>\r\n            <Card className=\"bg-secondary shadow\">\r\n              <CardHeader className=\"bg-white border-0\">\r\n                <Row className=\"align-items-center\">\r\n                  <Col xs=\"8\">\r\n                    <h3 className=\"mb-0\">Add Driver Account as SubAccount</h3>\r\n                  </Col>\r\n                  <Col className=\"text-right\" xs=\"4\"></Col>\r\n                </Row>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <h6 className=\"heading-small text-muted mb-4\">\r\n                    Enter transaction details below\r\n                  </h6>\r\n                  <div className=\"pl-lg-4\">\r\n                    <Row>\r\n                      <Col lg=\"6\">\r\n                        <FormGroup>\r\n                          <label\r\n                            className=\"form-control-label\"\r\n                            htmlFor=\"input-username\"\r\n                          >\r\n                            Business Name\r\n                          </label>\r\n                          <Input\r\n                            className=\"form-control-alternative\"\r\n                            id=\"business_name\"\r\n                            name=\"business_name\"\r\n                            placeholder=\"Enter Business Name\"\r\n                            type=\"text\"\r\n                            value={formData.business_name}\r\n                            onChange={handleChange}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col lg=\"6\">\r\n                        <FormGroup>\r\n                          <label className=\"form-control-label\" htmlFor=\"account_number\">\r\n                            Settlement Bank\r\n                          </label>\r\n                          <Input\r\n                            className=\"form-control-alternative\"\r\n                            id=\"settlement_bank\"\r\n                            name=\"settlement_bank\"\r\n                            type=\"text\"\r\n                            value={formData.settlement_bank}\r\n                            onChange={handleChange}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col lg=\"6\">\r\n                        <FormGroup>\r\n                          <label className=\"form-control-label\" htmlFor=\"percentage_charge\">\r\n                            Percentage Charge\r\n                          </label>\r\n                          <Input\r\n                            className=\"form-control-alternative\"\r\n                            id=\"percentage_charge\"\r\n                            name=\"percentage_charge\"\r\n                            type=\"text\"\r\n                            value={formData.percentage_charge}\r\n                            onChange={handleChange}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col lg=\"6\">\r\n                        <FormGroup>\r\n                          <label className=\"form-control-label\" htmlFor=\"account_number\">\r\n                            Account Number\r\n                          </label>\r\n                          <Input\r\n                            className=\"form-control-alternative\"\r\n                            id=\"account_number\"\r\n                            name=\"account_number\"\r\n                            type=\"text\"\r\n                            value={formData.account_number}\r\n                            onChange={handleChange}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n\r\n                    </Row>\r\n                  </div>\r\n\r\n                  <div className=\"pl-lg-4\">\r\n                    <Button variant=\"primary\">Submit</Button>\r\n                  </div>\r\n                  <div className=\"left\"></div>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n          {/* </Row> */}\r\n          {/* <Row> */}\r\n          <Col className=\"order-xl-1\" xl=\"8\">\r\n           <SubaccountTable data={ subaccountData } />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SubAccounts;\r\n","\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AuthService from \"../services/auth_service\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  InputGroup,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const navigate = useHistory();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await AuthService.login(email, password).then(\r\n        () => {\r\n          navigate.push(\"/admin/index\");\r\n          // window.location.reload();\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n      console.log(response.data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handlePassChange = (e) => {\r\n    // window.open(\"http://qevla.com:3001/api/auth/forgot-password\");\r\n    window.open(\"http://qevla.com:3001/api/auth/forgot-password\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Col lg=\"5\" md=\"7\">\r\n        <Card className=\"bg-secondary shadow border-0\">\r\n          <CardHeader className=\"bg-transparent pb-5\">\r\n            <div className=\"text-muted text-center mt-2 mb-3\">\r\n              <small>Sign in here</small>\r\n            </div>\r\n            <div className=\"btn-wrapper text-center\"></div>\r\n          </CardHeader>\r\n          <CardBody className=\"px-lg-5 py-lg-5\">\r\n            <div className=\"text-center text-muted mb-4\">\r\n              <small></small>\r\n            </div>\r\n            <Form role=\"form\" onSubmit={handleLogin}>\r\n              <FormGroup className=\"mb-3\">\r\n                <InputGroup className=\"input-group-alternative\">\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText>\r\n                      <i className=\"ni ni-email-83\" />\r\n                    </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input\r\n                    placeholder=\"Email address\"\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                </InputGroup>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <InputGroup className=\"input-group-alternative\">\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText>\r\n                      <i className=\"ni ni-lock-circle-open\" />\r\n                    </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input\r\n                    type=\"password\"\r\n                    placeholder=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  />\r\n                </InputGroup>\r\n              </FormGroup>\r\n              <div className=\"custom-control custom-control-alternative custom-checkbox\">\r\n                <input\r\n                  className=\"custom-control-input\"\r\n                  id=\" customCheckLogin\"\r\n                  type=\"checkbox\"\r\n                />\r\n                <label\r\n                  className=\"custom-control-label\"\r\n                  htmlFor=\" customCheckLogin\"\r\n                >\r\n                  <span className=\"text-muted\">Remember me</span>\r\n                </label>\r\n              </div>\r\n              {/* <div className=\"text-center\">\r\n                <Button type=\"submit\" className=\"my-4\" color=\"primary\">\r\n                  Sign in\r\n                </Button>\r\n              </div> */}\r\n              <div className=\"my-4\" color=\"primary\">\r\n                <button\r\n                  className=\"btn btn-primary btn-block\"\r\n                  // disabled={loading}\r\n                >\r\n                  {/* {loading && (\r\n                    <span className=\"spinner-border spinner-border-sm\"></span>\r\n                  )} */}\r\n                  <span>Login</span>\r\n                </button>\r\n              </div>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n        <Row className=\"mt-3\">\r\n          <Col xs=\"6\">\r\n            <a\r\n              className=\"text-light\"\r\n              href=\"#qev\"\r\n              // target=\"_blank\"\r\n              // rel=\"noopener noreferrer\"\r\n              onClick={handlePassChange}\r\n            >\r\n              <small>Forgot password?</small>\r\n            </a>\r\n          </Col>\r\n          <Col className=\"text-right\" xs=\"6\">\r\n            <a\r\n              className=\"text-light\"\r\n              href=\"/register\"\r\n              // onClick={(e) => e.preventDefault()}\r\n            >\r\n              <small>Create new account</small>\r\n            </a>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;","\r\n// reactstrap components\r\nimport { Button, Container, Row, Col } from \"reactstrap\";\r\nimport React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n  \r\n\r\n\r\nconst DriverRegHeader = () => {\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"header pb-8 pt-5 pt-lg-8 d-flex align-items-center\"\r\n        style={{\r\n          minHeight: \"300px\",\r\n          backgroundImage:\r\n            \"url(\" +\r\n            require(\"../../assets/img/brand/qevla_logo.png\").default +\r\n            \")\",\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center top\",\r\n        }}\r\n      >\r\n        {/* Mask */}\r\n        <span className=\"mask bg-gradient-default opacity-8\" />\r\n        {/* Header container */}\r\n        <Container className=\"d-flex align-items-center\" fluid>\r\n          {/* <Row>\r\n            <Col lg=\"7\" md=\"10\">\r\n              <h1 className=\"display-2 text-white\">Hello {user.first_name}</h1>\r\n              <p className=\"text-white mt-0 mb-5\">\r\n                This is your profile page. You can see the progress you've made\r\n                with your work and manage your projects or assigned tasks\r\n              </p>\r\n              <Button\r\n                color=\"info\"\r\n                href=\"#pablo\"\r\n                onClick={(e) => e.preventDefault()}\r\n              >\r\n                Edit profile\r\n              </Button>\r\n            </Col>\r\n          </Row> */}\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DriverRegHeader;\r\n","\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AuthService from \"../services/auth_service\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  InputGroup,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\n\r\n  function getFormValues() {\r\n    const storedValues = localStorage.getItem(\"passReq\");\r\n    if (!storedValues)\r\n      return {\r\n        token: \"\",\r\n        userId: \"\",\r\n\r\n      };\r\n    return JSON.parse(storedValues);\r\n  }\r\n\r\n\r\nconst PasswordReset = () => {\r\n  const [passReq, setPassReq] = React.useState(getFormValues);\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const navigate = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    localStorage.getItem(\"passReq\", JSON.stringify(passReq));\r\n  }, [passReq]);\r\n\r\n  console.log(\"PasswordResetRequest stored data\", passReq);\r\n\r\n  const handlePassRequest = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await AuthService.passwordReset;\r\n(passReq.token, passReq.userId, password).then(\r\n  () => {\r\n    navigate.push(\"/auth/login\");\r\n    // window.location.reload();\r\n  },\r\n  (error) => {\r\n    console.log(error);\r\n  }\r\n);\r\n      console.log(response.data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n    const handleLoginButton = (e) => {\r\n      e.preventDefault();\r\n      navigate.push(\"/auth/login\");\r\n    };\r\n  return (\r\n    <>\r\n      <Col lg=\"5\" md=\"7\">\r\n        <Card className=\"bg-secondary shadow border-0\">\r\n          <CardHeader className=\"bg-transparent pb-5\">\r\n            <div className=\"text-muted text-center mt-2 mb-3\">\r\n              <small>Sign in here</small>\r\n            </div>\r\n            <div className=\"btn-wrapper text-center\"></div>\r\n          </CardHeader>\r\n          <CardBody className=\"px-lg-5 py-lg-5\">\r\n            <div className=\"text-center text-muted mb-4\">\r\n              <small></small>\r\n            </div>\r\n            <Form role=\"form\" onSubmit={handlePassRequest}>\r\n              {/* <FormGroup className=\"mb-3\">\r\n                <InputGroup className=\"input-group-alternative\">\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText>\r\n                      <i className=\"ni ni-email-83\" />\r\n                    </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input\r\n                    placeholder=\"Email address\"\r\n                    type=\"email\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  />\r\n                </InputGroup>\r\n              </FormGroup> */}\r\n              <FormGroup>\r\n                <InputGroup className=\"input-group-alternative\">\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText>\r\n                      <i className=\"ni ni-lock-circle-open\" />\r\n                    </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input\r\n                    type=\"password\"\r\n                    placeholder=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  />\r\n                </InputGroup>\r\n              </FormGroup>\r\n              {/* <div className=\"custom-control custom-control-alternative custom-checkbox\">\r\n                <input\r\n                  className=\"custom-control-input\"\r\n                  id=\" customCheckLogin\"\r\n                  type=\"checkbox\"\r\n                />\r\n                <label\r\n                  className=\"custom-control-label\"\r\n                  htmlFor=\" customCheckLogin\"\r\n                >\r\n                  <span className=\"text-muted\">Remember me</span>\r\n                </label>\r\n              </div> */}\r\n              {/* <div className=\"text-center\">\r\n                <Button type=\"submit\" className=\"my-4\" color=\"primary\">\r\n                  Sign in\r\n                </Button>\r\n              </div> */}\r\n              <div className=\"my-4\" color=\"primary\">\r\n                <button\r\n                  className=\"btn btn-primary btn-block\"\r\n                  // disabled={loading}\r\n                >\r\n                  {/* {loading && (\r\n                    <span className=\"spinner-border spinner-border-sm\"></span>\r\n                  )} */}\r\n                  <span>Reset Password</span>\r\n                </button>\r\n              </div>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n        <Row className=\"mt-3\">\r\n          {/* <Col xs=\"6\">\r\n            <a\r\n              className=\"text-light\"\r\n              href=\"#pablo\"\r\n              onClick={(e) => e.preventDefault()}\r\n            >\r\n              <small>Forgot passwordword?</small>\r\n            </a>\r\n          </Col> */}\r\n          <Col className=\"text-right\" xs=\"6\">\r\n            <a\r\n              className=\"text-light\"\r\n              href=\"auth/login\"\r\n              onClick={() => handleLoginButton()}\r\n            >\r\n              <small>Remembered password? Login!</small>\r\n            </a>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PasswordReset;\r\n\r\n","\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AuthService from \"../services/auth_service\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  InputGroup,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\n\r\nconst PasswordResetRequest = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const navigate = useHistory();\r\n\r\n  const handlePassRequest = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await AuthService.requestPasswordReset(\r\n        email\r\n      ).then(\r\n        () => {\r\n          navigate.push(\"/auth/reset-password\");\r\n          // window.location.reload();\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n      console.log(response.data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n    const handleLoginButton = (e) => {\r\n      e.preventDefault();\r\n      navigate.push(\"/auth/login\");\r\n    };\r\n  return (\r\n    <>\r\n      <Col lg=\"5\" md=\"7\">\r\n        <Card className=\"bg-secondary shadow border-0\">\r\n          <CardHeader className=\"bg-transparent pb-5\">\r\n            <div className=\"text-muted text-center mt-2 mb-3\">\r\n              <small>Enter your email to request a password change</small>\r\n            </div>\r\n            <div className=\"btn-wrapper text-center\"></div>\r\n          </CardHeader>\r\n          <CardBody className=\"px-lg-5 py-lg-5\">\r\n            <Form role=\"form\" onSubmit={handlePassRequest}>\r\n              <FormGroup className=\"mb-3\">\r\n                <InputGroup className=\"input-group-alternative\">\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText>\r\n                      <i className=\"ni ni-email-83\" />\r\n                    </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input\r\n                    placeholder=\"Enter your email address\"\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                </InputGroup>\r\n              </FormGroup>\r\n              <div className=\"my-4\" color=\"primary\">\r\n                <button className=\"btn btn-primary btn-block\">\r\n                  <span>Request Password Reset</span>\r\n                </button>\r\n              </div>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n        <Row className=\"mt-3\">\r\n          <Col className=\"text-right\" xs=\"6\">\r\n            <a\r\n              className=\"text-light\"\r\n              href=\"auth/login\"\r\n              onClick={() => handleLoginButton()}\r\n            >\r\n              <small>Remembered password? Login!</small>\r\n            </a>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PasswordResetRequest;\r\n\r\n","import {\r\n  Card,\r\n  CardHeader,\r\n  Container,\r\n  Row,\r\n} from \"reactstrap\";\r\n\r\nimport {\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\n// import PaginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Header from \"components/Headers/Header.js\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { endpoints } from \"../api-endpoints\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport \"./modal.css\"\r\nimport userService from \"services/user.service\";\r\nimport { Dropdown, DropdownButton } from 'react-bootstrap';\r\nimport axios from \"axios\";\r\n// import { param } from \"jquery\";\r\n\r\nconst Admins = () => {\r\n  const [modalInfo, setModalInfo] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [state, setState] = useState();\r\n  const [drivers, setDrivers] = useState([]);\r\n  const driver = [];\r\n  // const navigate = useHistory();\r\n\r\n  // const { SearchBar } = Search;\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  useEffect(() => {\r\n    async function fetchUsers() {\r\n      const fullResponse = await fetch(endpoints.getDrivers);\r\n      const responseJson = await fullResponse.json();\r\n      const drivers = responseJson.users.filter(user => user.isAdmin === true);\r\n      setDrivers(drivers);\r\n    }\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  drivers.forEach((user) => {\r\n    driver.push(user);\r\n  });\r\n\r\n  console.log(\r\n    \"Created drivers>>>>>>> from headers from map markers used\",\r\n    driver\r\n  );\r\n\r\n\r\n  const rowEvents = {\r\n    onClick: (e, row) => {\r\n      console.log(\"Row list test\", row.id);\r\n      setModalInfo(row);\r\n      // toggleTrueFalse();\r\n    },\r\n  };\r\n\r\n  const toggleTrueFalse = () => {\r\n    setShowModal(handleShow)\r\n  }\r\n\r\n//   const submitform() {\r\n//     //Now I have the all values wrapped in a object to send to server\r\n// }\r\n\r\nconst handleOnChange = (e) => {\r\n    const { value, name } = e.target\r\n    setState({ [name] : value })\r\n};\r\n\r\n    const handleUpdate = async (e) => {\r\n      e.preventDefault();\r\n      try {\r\n    const formData = state\r\n\r\n        const response = await userService.updateUser.concat(`${modalInfo.Id}`).then(\r\n          () => {\r\n            // navigate.push(\"/admin/index\");\r\n            console.log(response)\r\n            // window.location.reload();\r\n          },\r\n          (error) => {\r\n            console.log(error);\r\n          }\r\n        );\r\n        console.log(response.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\nconst ModalContent = () => {\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={handleClose}\r\n      className=\"modal-width\"\r\n      contentClassName=\"transparentBgClass\"\r\n      dialogClassName=\"modal-width\"\r\n      aria-labelledby=\"example-custom-modal-styling-title\"\r\n    >\r\n      <Modal.Header closeLabel=\"X\">\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Close\r\n        </Button>\r\n        <Modal.Title>\r\n          {modalInfo.first_name} {modalInfo.last_name}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Container fluid>\r\n          <Row>\r\n            <Col className=\"order-xl-2 mb-5 mb-xl-0\" xl=\"4\">\r\n              <Card className=\"card-profile shadow\">\r\n                <Row className=\"justify-content-center\">\r\n                  <Col className=\"order-lg-2\" lg=\"3\">\r\n                    <div className=\"card-profile-image\">\r\n                      <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\r\n                        <img\r\n                          alt=\"...\"\r\n                          className=\"rounded-circle\"\r\n                          src={\r\n                            require(\"../assets/img/brand/qevla_logo1.png\")\r\n                              .default\r\n                          }\r\n                        />\r\n                      </a>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <CardHeader className=\"text-center border-0 pt-8 pt-md-4 pb-0 pb-md-4\">\r\n                  <div className=\"d-flex justify-content-between\">\r\n                    <Button\r\n                      className=\"mr-4\"\r\n                      color=\"info\"\r\n                      href=\"#pablo\"\r\n                      onClick={(e) => e.preventDefault()}\r\n                      size=\"sm\"\r\n                    >\r\n                      {/* Approve */}\r\n                    </Button>\r\n                    <Button\r\n                      className=\"float-right\"\r\n                      color=\"default\"\r\n                      href=\"#pablo\"\r\n                      onClick={(e) => e.preventDefault()}\r\n                      size=\"sm\"\r\n                    >\r\n                      {/* Delete */}\r\n                    </Button>\r\n                  </div>\r\n                </CardHeader>\r\n                <CardBody className=\"pt-0 pt-md-4\">\r\n                  <Row>\r\n                    <div className=\"col\">\r\n                      <div className=\"card-profile-stats d-flex justify-content-center mt-md-5\">\r\n                        <div>\r\n                          <span className=\"heading\">22</span>\r\n                          <span className=\"description\">Total Tows</span>\r\n                        </div>\r\n                        <div>\r\n                          <span className=\"heading\">10</span>\r\n                          <span className=\"description\">Commissioned Tows</span>\r\n                        </div>\r\n                        <div>\r\n                          <span className=\"heading\">89</span>\r\n                          <span className=\"description\">\r\n                            Total tow Commission owed\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Row>\r\n                  <div className=\"text-center\">\r\n                    <h3>\r\n                      {modalInfo.first_name} {modalInfo.last_name}\r\n                      <span className=\"font-weight-light\"></span>\r\n                    </h3>\r\n                    <div className=\"h5 font-weight-300\">\r\n                      <i className=\"ni location_pin mr-2\" />\r\n                      Current Address:{\" \"}\r\n                      <b>{modalInfo.vehicle_details.address}</b>\r\n                    </div>\r\n\r\n                    <hr className=\"my-4\" />\r\n                    <p>\r\n                      {modalInfo.first_name} — registered on{\" \"}\r\n                      {modalInfo.createdAt}, with license{\" \"}\r\n                      <b>{modalInfo.vehicle_details.v_license}</b>\r\n                    </p>\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n            <Col className=\"order-xl-1\" xl=\"8\">\r\n              <Card className=\"bg-secondary shadow\">\r\n                <CardHeader className=\"bg-white border-0\">\r\n                  <Row className=\"align-items-center\">\r\n                    <Col xs=\"8\">\r\n                      <h3 className=\"mb-0\">My account</h3>\r\n                    </Col>\r\n                    <Col className=\"text-right\" xs=\"4\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        href=\"#pablo\"\r\n                        onClick={(e) => e.preventDefault()}\r\n                        size=\"sm\"\r\n                      >\r\n                        Settings\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <Form>\r\n                    <h6 className=\"heading-small text-muted mb-4\">\r\n                      User information\r\n                    </h6>\r\n                    <div className=\"pl-lg-4\">\r\n                      <Row>\r\n                        <Col lg=\"6\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-username\"\r\n                            >\r\n                              Username\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={modalInfo.first_name}\r\n                              id=\"input-username\"\r\n                              placeholder=\"Username\"\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"6\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-email\"\r\n                            >\r\n                              Email address\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              id=\"input-email\"\r\n                              placeholder={modalInfo.email}\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"email\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col lg=\"6\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-first-name\"\r\n                            >\r\n                              First name\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={modalInfo.first_name}\r\n                              id=\"input-first-name\"\r\n                              placeholder=\"First name\"\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"6\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-last-name\"\r\n                            >\r\n                              Last name\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={modalInfo.last_name}\r\n                              id=\"input-last-name\"\r\n                              placeholder=\"Last name\"\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                    <hr className=\"my-4\" />\r\n                    <h6 className=\"heading-small text-muted mb-4\">\r\n                      Contact information\r\n                    </h6>\r\n                    <div className=\"pl-lg-4\">\r\n                      <Row>\r\n                        <Col md=\"12\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-address\"\r\n                            >\r\n                              Address\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={modalInfo.vehicle_details.address}\r\n                              id=\"input-address\"\r\n                              placeholder=\"Vehicle Address\"\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col lg=\"4\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-city\"\r\n                            >\r\n                              Phone Number\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={modalInfo.number}\r\n                              id=\"input-city\"\r\n                              placeholder=\"Phone Number\"\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                    <hr className=\"my-4\" />\r\n                    <h6 className=\"heading-small text-muted mb-4\">\r\n                      Vehicle information\r\n                    </h6>\r\n                    <div className=\"pl-lg-4\">\r\n                      <Row>\r\n                        <Col md=\"12\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-address\"\r\n                            >\r\n                              Manufacturer\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={modalInfo.vehicle_details.address}\r\n                              id=\"input-address\"\r\n                              placeholder=\"Manufacturer\"\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col lg=\"4\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-city\"\r\n                            >\r\n                              Vehicle Type\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={modalInfo.vehicle_details.address}\r\n                              id=\"input-city\"\r\n                              placeholder=\"Vehicle Type\"\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"4\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-country\"\r\n                            >\r\n                              Max Weight\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={\r\n                                modalInfo.vehicle_details.max_weight\r\n                              }\r\n                              id=\"input-country\"\r\n                              placeholder=\"Max Weight\"\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"4\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-country\"\r\n                            >\r\n                              Vehicle License\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              id=\"input-postal-code\"\r\n                              defaultValue={modalInfo.vehicle_details.v_license}\r\n                              placeholder=\"Vehicle License\"\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"number\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                    <hr className=\"my-4\" />\r\n                    <h6 className=\"heading-small text-muted mb-4\">\r\n                      Payment Details\r\n                    </h6>\r\n                    <div className=\"pl-lg-4\">\r\n                      <Row>\r\n                        <Col md=\"12\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-address\"\r\n                            >\r\n                              Account Holder Name\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={\r\n                                modalInfo.payment_details.bank_holder_name\r\n                              }\r\n                              id=\"input-address\"\r\n                              placeholder=\"Account Holder Name\"\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col lg=\"4\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-city\"\r\n                            >\r\n                              Account Number\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={\r\n                                modalInfo.payment_details.account_number\r\n                              }\r\n                              id=\"input-city\"\r\n                              placeholder=\"Account Number\"\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"4\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-country\"\r\n                            >\r\n                              Bank Name\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={modalInfo.payment_details.bank_name}\r\n                              id=\"input-country\"\r\n                              placeholder=\"Bank Name\"\r\n                              // onChange={() => handleOnChange()}\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                  </Form>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        {/* <Button variant=\"secondary\" onClick={handleUpdate}>\r\n          Update\r\n        </Button> */}\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\n// Function to handle row deletion\r\nconst handleDeleteRow = (id) => {\r\n  // Construct the request body\r\n  const requestBody = {\r\n    id: id \r\n  };\r\n\r\n  fetch('http://qevla.com:3001/api/user/delete', {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(requestBody)\r\n  })\r\n    .then(response => {\r\n      if (response.ok) {\r\n        const updatedDriver = driver.filter(driver => driver.id !== id);\r\n        setModalInfo(updatedDriver);\r\n        window.location.reload();\r\n      } else {\r\n        console.error('Failed to delete driver:', response.statusText);\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Failed to delete driver:', error);\r\n    });\r\n};\r\n\r\n\r\n  const columns = [\r\n    { dataField: \"first_name\", text: \"Driver First Name\" },\r\n    { dataField: \"last_name\", text: \"Driver Last Name\" },\r\n    { dataField: \"email\", text: \"Driver Email\" },\r\n    { dataField: \"number\", text: \"Driver Phone\" },\r\n    { dataField: \"vehicle_details.v_license\", text: \"License Number\" },\r\n    // {\r\n    //   text: 'Actions',\r\n    //   formatter: (cell, row) => (\r\n    //     <button onClick={() => handleDeleteRow(row._id)}>Delete</button>\r\n    //   ),\r\n    // },\r\n   \r\n    {\r\n      text: \"Actions\",\r\n      formatter: (cellContent, row) => (\r\n        <DropdownButton title=\"Actions\">\r\n          <Dropdown.Item onClick={() => handleShow(row)}>View</Dropdown.Item>\r\n          <Dropdown.Item onClick={() => handleDeleteRow(row._id)}>Delete</Dropdown.Item>\r\n        </DropdownButton>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  function handleDelete(id) {\r\n    axios.delete(\"http://qevla.com:3001/api/user/delete\", {\r\n      // method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ id })\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to delete the row.\");\r\n        }\r\n        // Implement the logic to update the table after the row is deleted\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n  \r\n  \r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container className=\"mt--7\" fluid>\r\n        <CardHeader className=\"border-0\">\r\n          <h3 className=\"mb-0\">Drivers list</h3>\r\n        </CardHeader>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card className=\"shadow\">\r\n              <CardHeader className=\"border-0\">\r\n                <h3 className=\"mb-0\">Drivers list</h3>\r\n              </CardHeader>\r\n\r\n              <BootstrapTable\r\n                keyField=\"email\"\r\n                data={driver}\r\n                columns={columns}\r\n                pagination={paginationFactory()}\r\n                rowEvents={rowEvents}\r\n              />\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n        {show ? <ModalContent /> : null}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Admins;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UncontrolledDropdown } from \"reactstrap\";\r\nimport {\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"reactstrap\";\r\n\r\nimport Index from \"views/Index.js\";\r\nimport Profile from \"views/Profile.js\";\r\nimport Maps from \"views/Maps.js\";\r\nimport Paymnt from \"views/Paymnt.js\";\r\nimport SubAccounts from \"views/Subaccounts.js\";\r\nimport Register from \"views/Register.js\";\r\nimport Login from \"views/Login.js\";\r\nimport Drivers from \"views/Drivers.js\";\r\nimport AddAdmin from \"views/AddAdmin\";\r\nimport AddDriver from \"views/AddDriver\";\r\nimport PasswordReset from \"views/PasswordReset\";\r\nimport PasswordResetRequest from \"views/PasswordResetRequest\";\r\nimport Admins from \"views/Admins\";\r\n\r\nvar routes = [\r\n  {\r\n    path: \"/index\",\r\n    name: \"Dashboard\",\r\n    icon: \"ni ni-tv-2 text-primary\",\r\n    component: Index,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/subaccount\",\r\n    name: \"Sub Accounts\",\r\n    icon: \"ni ni-pin-3 text-orange\",\r\n    component: SubAccounts,\r\n    layout: \"/admin\"\r\n  },\r\n  {\r\n    path: \"/payments\",\r\n    name: \"Payments\",\r\n    icon: \"ni ni-pin-3 text-orange\",\r\n    component: Paymnt,\r\n    layout: \"/admin\",\r\n    // Add a submenu for \"Payments\"\r\n    submenu: [\r\n      {\r\n        path: \"/payments/new\",\r\n        name: \"New Payment\",\r\n        component: Admins,\r\n        layout: \"/admin\",\r\n      },\r\n      {\r\n        path: \"/payments/history\",\r\n        name: \"Payment History\",\r\n        component: Paymnt,\r\n        layout: \"/admin\",\r\n      },\r\n      // Add more submenu items as needed\r\n    ],\r\n  },\r\n  {\r\n    path: \"/maps\",\r\n    name: \"Maps\",\r\n    icon: \"ni ni-pin-3 text-orange\",\r\n    component: Maps,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/user-profile\",\r\n    name: \"User Profile\",\r\n    icon: \"ni ni-single-02 text-yellow\",\r\n    component: Profile,\r\n    layout: \"/admin\",\r\n  },\r\n  // {\r\n  //   path: \"/driver-profile/:id\",\r\n  //   name: \"Driver Profile\",\r\n  //   icon: \"ni ni-single-02 text-yellow\",\r\n  //   component: DriverProfile,\r\n  //   layout: \"/admin\",\r\n  // },\r\n  {\r\n    path: \"/drivers\",\r\n    name: \"Drivers\",\r\n    icon: \"ni ni-bullet-list-67 text-red\",\r\n    component: Drivers,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/admins\",\r\n    name: \"Admins\",\r\n    icon: \"ni ni-bullet-list-67 text-red\",\r\n    component: Admins,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/add-admin\",\r\n    name: \"Add new Admin\",\r\n    icon: \"ni ni-key-25 text-info\",\r\n    component: AddAdmin,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/add-driver\",\r\n    name: \"Add New Driver\",\r\n    icon: \"ni ni-circle-08 text-pink\",\r\n    component: AddDriver,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/login\",\r\n    // name: \"Driver Profile\",\r\n    // icon: \"ni ni-single-02 text-yellow\",\r\n    component: Login,\r\n    layout: \"/auth\",\r\n  },\r\n  {\r\n    path: \"/reset-password\",\r\n    // name: \"Driver Profile\",\r\n    // icon: \"ni ni-single-02 text-yellow\",\r\n    component: PasswordReset,\r\n    layout: \"/auth\",\r\n  },\r\n  {\r\n    path: \"/request-reset-password\",\r\n    // name: \"Driver Profile\",\r\n    // icon: \"ni ni-single-02 text-yellow\",\r\n    component: PasswordResetRequest,\r\n    layout: \"/auth\",\r\n  },\r\n];\r\n\r\nconst renderSubmenu = (submenuItems) => {\r\n  return (\r\n    <DropdownMenu>\r\n      {submenuItems.map((item, index) => (\r\n        <DropdownItem key={index} to={item.layout + item.path} tag={Link}>\r\n          {item.name}\r\n        </DropdownItem>\r\n      ))}\r\n    </DropdownMenu>\r\n  );\r\n};\r\n\r\nexport { routes, renderSubmenu };\r\n","\r\nimport React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Container,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport DriverRegHeader from \"components/Headers/DriverRegHeader\";\r\n\r\n  const AddAdmin = () => {\r\n\r\n    return (\r\n      <>\r\n        <DriverRegHeader />\r\n        {/* Page content */}\r\n        <Container lassName=\"mt--14 my-auto\">\r\n          <Row lassName=\"mt--14\">\r\n            <Col className=\"order-xl-2 mb-5 mb-xl-0\" xl=\"4\">\r\n              <Card className=\"card-profile shadow\"></Card>\r\n            </Col>\r\n            <Col className=\"order-xl-1\" xl=\"8\">\r\n              <Card className=\"bg-secondary shadow\">\r\n                <CardHeader className=\"bg-white border-0\">\r\n                  <Row className=\"align-items-center\">\r\n                    <Col xs=\"8\">\r\n                      <h3 className=\"mb-0\">Add New Admin</h3>\r\n                    </Col>\r\n                    <Col className=\"text-right\" xs=\"4\"></Col>\r\n                  </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <Form>\r\n                    <h6 className=\"heading-small text-muted mb-4\">\r\n                      Personal information\r\n                    </h6>\r\n                    <div className=\"pl-lg-4\">\r\n                      <Row>\r\n                        <Col lg=\"6\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-username\"\r\n                            >\r\n                              First name\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={\"\"}\r\n                              id=\"input-username\"\r\n                              placeholder=\"First Name\"\r\n                              name=\"first_name\"\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"6\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-username\"\r\n                            >\r\n                              Last name\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={\"\"}\r\n                              id=\"input-username\"\r\n                              placeholder=\"Last Name\"\r\n                              name=\"last_name\"\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"6\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-username\"\r\n                            >\r\n                              Phone Number\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={\"\"}\r\n                              id=\"number\"\r\n                              placeholder=\"Phone Number\"\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"number\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"6\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"email\"\r\n                            >\r\n                              Email address\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              id=\"email\"\r\n                              placeholder={\"\"}\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"email\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col lg=\"6\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-first-name\"\r\n                            >\r\n                              DOB\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={\"\"}\r\n                              id=\"dbo\"\r\n                              placeholder=\"Date of birth\"\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"date\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"6\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-last-name\"\r\n                            >\r\n                              Password\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={\"123456\"}\r\n                              id=\"password\"\r\n                              readOnly\r\n                              // placeholder=\"Last name\"\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                    <hr className=\"my-4\" />\r\n                    <h6 className=\"heading-small text-muted mb-4\">\r\n                      Contact information\r\n                    </h6>\r\n                    <div className=\"pl-lg-4\">\r\n                      <Row>\r\n                        <Col md=\"12\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-address\"\r\n                            >\r\n                              Address\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={\"\"}\r\n                              id=\"input-address\"\r\n                              placeholder=\"Vehicle Address\"\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Button variant=\"secondary\">Submit</Button>\r\n                    </div>\r\n                    <div className=\"left\"></div>\r\n                  </Form>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  };\r\n\r\nexport default AddAdmin;\r\n","\r\nimport React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Container,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport DriverRegHeader from \"components/Headers/DriverRegHeader\";\r\n\r\n  const AddDriver = () => {\r\n\r\n    return (\r\n      <>\r\n        <DriverRegHeader />\r\n        {/* Page content */}\r\n        <Container lassName=\"mt--14 my-auto\">\r\n          <Row lassName=\"mt--14\">\r\n            <Col className=\"order-xl-2 mb-5 mb-xl-0\" xl=\"4\">\r\n              <Card className=\"card-profile shadow\"></Card>\r\n            </Col>\r\n            <Col className=\"order-xl-1\" xl=\"8\">\r\n              <Card className=\"bg-secondary shadow\">\r\n                <CardHeader className=\"bg-white border-0\">\r\n                  <Row className=\"align-items-center\">\r\n                    <Col xs=\"8\">\r\n                      <h3 className=\"mb-0\">My account</h3>\r\n                    </Col>\r\n                    <Col className=\"text-right\" xs=\"4\">\r\n                      {/* <Button\r\n                        color=\"primary\"\r\n                        href=\"#pablo\"\r\n                        onClick={(e) => e.preventDefault()}\r\n                        size=\"sm\"\r\n                      >\r\n                        Settings\r\n                      </Button> */}\r\n                    </Col>\r\n                  </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <Form>\r\n                    <h6 className=\"heading-small text-muted mb-4\">\r\n                      Personal information\r\n                    </h6>\r\n                    <div className=\"pl-lg-4\">\r\n                      <Row>\r\n                        <Col lg=\"6\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-username\"\r\n                            >\r\n                              First name\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={\"\"}\r\n                              id=\"input-username\"\r\n                              placeholder=\"First Name\"\r\n                              name=\"first_name\"\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"6\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-username\"\r\n                            >\r\n                              Last name\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={\"\"}\r\n                              id=\"input-username\"\r\n                              placeholder=\"Last Name\"\r\n                              name=\"last_name\"\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"6\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-username\"\r\n                            >\r\n                              Phone Number\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={\"\"}\r\n                              id=\"number\"\r\n                              placeholder=\"Phone Number\"\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"number\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"6\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"email\"\r\n                            >\r\n                              Email address\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              id=\"email\"\r\n                              placeholder={\"\"}\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"email\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col lg=\"6\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-first-name\"\r\n                            >\r\n                              DOB\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={\"\"}\r\n                              id=\"dbo\"\r\n                              placeholder=\"Date of birth\"\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"date\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"6\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-last-name\"\r\n                            >\r\n                              Password\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={\"123456\"}\r\n                              id=\"password\"\r\n                              readOnly\r\n                              // placeholder=\"Last name\"\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                    <hr className=\"my-4\" />\r\n                    <h6 className=\"heading-small text-muted mb-4\">\r\n                      Vehicle information\r\n                    </h6>\r\n                    <div className=\"pl-lg-4\">\r\n                      <Row>\r\n                        <Col md=\"12\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-address\"\r\n                            >\r\n                              Manufacturer\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={\"\"}\r\n                              id=\"input-address\"\r\n                              placeholder=\"Manufacturer\"\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col lg=\"4\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-city\"\r\n                            >\r\n                              Vehicle Type\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={\"\"}\r\n                              id=\"input-city\"\r\n                              placeholder=\"Vehicle Type\"\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"4\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-country\"\r\n                            >\r\n                              Max Weight\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={\"\"}\r\n                              id=\"input-country\"\r\n                              placeholder=\"Max Weight\"\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"4\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-country\"\r\n                            >\r\n                              Vehicle License\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              id=\"input-postal-code\"\r\n                              defaultValue={\"\"}\r\n                              placeholder=\"Vehicle License\"\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"number\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                    <hr className=\"my-4\" />\r\n                    <h6 className=\"heading-small text-muted mb-4\">\r\n                      Payment Details\r\n                    </h6>\r\n                    <div className=\"pl-lg-4\">\r\n                      <Row>\r\n                        <Col md=\"12\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-address\"\r\n                            >\r\n                              Account Holder Name\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={\"\"}\r\n                              id=\"input-address\"\r\n                              placeholder=\"Account Holder Name\"\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col lg=\"4\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-city\"\r\n                            >\r\n                              Account Number\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={\"\"}\r\n                              id=\"input-city\"\r\n                              placeholder=\"Account Number\"\r\n                              // onChange={() => handleOnChange}\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"4\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-country\"\r\n                            >\r\n                              Bank Name\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              defaultValue={\"\"}\r\n                              id=\"input-country\"\r\n                              placeholder=\"Bank Name\"\r\n                              // onChange={() => handleOnChange()}\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                    <div className=\"align-items-center\">\r\n                    <Button variant=\"secondary\" >\r\n                      Submit\r\n                    </Button></div>\r\n                  </Form>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  };\r\n\r\nexport default AddDriver;\r\n","import React from \"react\";\r\nimport { useLocation, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { Container } from \"reactstrap\";\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\r\nimport AdminFooter from \"components/Footers/AdminFooter.js\";\r\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\r\nimport { routes, renderSubmenu } from \"routes.js\";\r\n\r\nconst Admin = (props) => {\r\n  const mainContent = React.useRef(null);\r\n  const location = useLocation();\r\n\r\n  React.useEffect(() => {\r\n    document.documentElement.scrollTop = 0;\r\n    document.scrollingElement.scrollTop = 0;\r\n    mainContent.current.scrollTop = 0;\r\n  }, [location]);\r\n\r\n  const getRoutes = (routes) => {\r\n    return routes.map((prop, key) => {\r\n      if (prop.layout === \"/admin\") {\r\n        if (prop.submenu) {\r\n          return (\r\n            <Route\r\n              path={prop.layout + prop.path}\r\n              key={key}\r\n              render={() => (\r\n                <>\r\n                  {prop.submenu && renderSubmenu(prop.submenu)}\r\n                  <prop.component {...props} />\r\n                </>\r\n              )}\r\n            />\r\n          );\r\n        } else {\r\n          return (\r\n            <Route\r\n              path={prop.layout + prop.path}\r\n              component={prop.component}\r\n              key={key}\r\n            />\r\n          );\r\n        }\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n\r\n  const getBrandText = (path) => {\r\n    for (let i = 0; i < routes.length; i++) {\r\n      if (\r\n        props.location.pathname.indexOf(routes[i].layout + routes[i].path) !==\r\n        -1\r\n      ) {\r\n        return routes[i].name;\r\n      }\r\n    }\r\n    return \"Brand\";\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Sidebar\r\n        {...props}\r\n        routes={routes}\r\n        logo={{\r\n          innerLink: \"/admin/index\",\r\n          imgSrc: require(\"../assets/img/brand/qevla_logo.png\").default,\r\n          imgAlt: \"...\",\r\n        }}\r\n      />\r\n      <div className=\"main-content\" ref={mainContent}>\r\n        <AdminNavbar\r\n          {...props}\r\n          brandText={getBrandText(props.location.pathname)}\r\n        />\r\n        <Switch>\r\n          {getRoutes(routes)}\r\n          <Redirect from=\"*\" to=\"/admin/index\" />\r\n        </Switch>\r\n        <Container fluid>\r\n          <AdminFooter />\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","import { Link } from \"react-router-dom\";\r\n// reactstrap components\r\nimport {\r\n  UncontrolledCollapse,\r\n  NavbarBrand,\r\n  Navbar,\r\n  NavItem,\r\n  NavLink,\r\n  Nav,\r\n  Container,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\n\r\nconst AdminNavbar = () => {\r\n  return (\r\n    <>\r\n      <Navbar className=\"navbar-top navbar-horizontal navbar-dark\" expand=\"md\">\r\n        <Container className=\"px-4\">\r\n          <NavbarBrand to=\"/\" tag={Link}>\r\n            <img\r\n              alt=\"...\"\r\n              src={\r\n                require(\"../../assets/img/brand/qevla_logo.png\").default\r\n              }\r\n            />\r\n          </NavbarBrand>\r\n          <button className=\"navbar-toggler\" id=\"navbar-collapse-main\">\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          <UncontrolledCollapse navbar toggler=\"#navbar-collapse-main\">\r\n            <div className=\"navbar-collapse-header d-md-none\">\r\n              <Row>\r\n                <Col className=\"collapse-brand\" xs=\"6\">\r\n                  <Link to=\"/\">\r\n                    <img\r\n                      alt=\"...\"\r\n                      src={\r\n                        require(\"../../assets/img/brand/qevla_logo.png\")\r\n                          .default\r\n                      }\r\n                    />\r\n                  </Link>\r\n                </Col>\r\n                <Col className=\"collapse-close\" xs=\"6\">\r\n                  <button className=\"navbar-toggler\" id=\"navbar-collapse-main\">\r\n                    <span />\r\n                    <span />\r\n                  </button>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <NavItem>\r\n                <NavLink\r\n                  className=\"nav-link-icon\"\r\n                  to=\"/auth/register\"\r\n                  tag={Link}\r\n                >\r\n                  <i className=\"ni ni-circle-08\" />\r\n                  <span className=\"nav-link-inner--text\">Register</span>\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink className=\"nav-link-icon\" to=\"/auth/login\" tag={Link}>\r\n                  <i className=\"ni ni-key-25\" />\r\n                  <span className=\"nav-link-inner--text\">Login</span>\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          </UncontrolledCollapse>\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminNavbar;\r\n","\r\nimport {  Container, Row, Col } from \"reactstrap\";\r\n\r\nconst Login = () => {\r\n  return (\r\n    <>\r\n      <footer className=\"py-5\">\r\n        <Container>\r\n          <Row className=\"align-items-center justify-content-xl-between\">\r\n            <Col xl=\"6\">\r\n              <div className=\"copyright text-center text-xl-left text-muted\">\r\n                © {new Date().getFullYear()}{\" \"}\r\n                <p\r\n                  className=\"font-weight-bold ml-1\"\r\n                  target=\"_blank\"\r\n                >\r\n                  Qevla Inc\r\n                </p>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","\r\nimport React from \"react\";\r\nimport { useLocation, Route, Switch, Redirect } from \"react-router-dom\";\r\n// reactstrap components\r\nimport { Container, Row, Col } from \"reactstrap\";\r\n\r\n// core components\r\nimport AuthNavbar from \"components/Navbars/AuthNavbar.js\";\r\nimport AuthFooter from \"components/Footers/AuthFooter.js\";\r\n\r\nimport { routes, renderSubmenu } from \"routes.js\";\r\n\r\nconst Auth = (props) => {\r\n  const mainContent = React.useRef(null);\r\n  const location = useLocation();\r\n\r\n  React.useEffect(() => {\r\n    document.body.classList.add(\"bg-default\");\r\n    return () => {\r\n      document.body.classList.remove(\"bg-default\");\r\n    };\r\n  }, []);\r\n  React.useEffect(() => {\r\n    document.documentElement.scrollTop = 0;\r\n    document.scrollingElement.scrollTop = 0;\r\n    mainContent.current.scrollTop = 0;\r\n  }, [location]);\r\n\r\n  const getRoutes = (routes) => {\r\n    return routes.map((prop, key) => {\r\n      if (prop.layout === \"/auth\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"main-content\" ref={mainContent}>\r\n        <AuthNavbar />\r\n        <div className=\"header bg-gradient-info py-7 py-lg-8\">\r\n          <Container>\r\n            <div className=\"header-body text-center mb-7\">\r\n              <Row className=\"justify-content-center\">\r\n                <Col lg=\"5\" md=\"6\">\r\n                  <h1 className=\"text-white\">Welcome!</h1>\r\n                  <p className=\"text-lead text-light\">\r\n                    Please login!\r\n                  </p>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </Container>\r\n          <div className=\"separator separator-bottom separator-skew zindex-100\">\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              preserveAspectRatio=\"none\"\r\n              version=\"1.1\"\r\n              viewBox=\"0 0 2560 100\"\r\n              x=\"0\"\r\n              y=\"0\"\r\n            >\r\n              <polygon\r\n                className=\"fill-default\"\r\n                points=\"2560 0 2560 100 0 100\"\r\n              />\r\n            </svg>\r\n          </div>\r\n        </div>\r\n        {/* Page content */}\r\n        <Container className=\"mt--8 pb-5\">\r\n          <Row className=\"justify-content-center\">\r\n            <Switch>\r\n              {getRoutes(routes)}\r\n              <Redirect from=\"*\" to=\"/auth/login\" />\r\n            </Switch>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n      <AuthFooter />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n} from \"../actions/types\";\r\n\r\nconst user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\nconst initialState = user\r\n  ? { isLoggedIn: true, user }\r\n  : { isLoggedIn: false, user: null };\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case REGISTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n      };\r\n    case REGISTER_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        user: payload.user,\r\n      };\r\n    case LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_MESSAGE:\r\n      return { message: payload };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return { message: \"\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\nimport message from \"./message\";\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  message,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport \"assets/plugins/nucleo/css/nucleo.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"assets/scss/argon-dashboard-react.scss\";\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\n\r\nimport AdminLayout from \"./layouts/Admin.js\";\r\nimport AuthLayout from \"./layouts/Auth.js\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"store\";\r\n// import Login from \"components/Login.js\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/admin\" render={(props) => <AdminLayout {...props} />} />\r\n        <Route path=\"/auth\" render={(props) => <AuthLayout {...props} />} />\r\n        <Redirect from=\"/\" to=\"/auth/login\" />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/qevla_logo.0e390610.png\";"],"sourceRoot":""}