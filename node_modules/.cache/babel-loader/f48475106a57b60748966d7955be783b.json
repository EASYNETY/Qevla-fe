{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/123/Documents/Easynet/argon-dashboard/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/123/Documents/Easynet/argon-dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { endpoints } from \"api-endpoints\";\nimport axios from \"axios\";\nimport { handleMyErrors } from \"./error-handler-service\";\nexport var fetchAllDrivers = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var data;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return axios.get(endpoints.getDrivers);\n\n          case 3:\n            data = _context.sent;\n            return _context.abrupt(\"return\", data);\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            return _context.abrupt(\"return\", handleMyErrors(_context.t0));\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n\n  return function fetchAllDrivers() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var fetchUserByCorpId = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(corporateId) {\n    var data;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return httpServiceInterfaceOauth2.get(endpoints.fetchUserByCorpId.concat(corporateId));\n\n          case 3:\n            data = _context2.sent;\n            return _context2.abrupt(\"return\", data);\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            return _context2.abrupt(\"return\", handleMyErrors(_context2.t0));\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 7]]);\n  }));\n\n  return function fetchUserByCorpId(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["endpoints","axios","handleMyErrors","fetchAllDrivers","get","getDrivers","data","fetchUserByCorpId","corporateId","httpServiceInterfaceOauth2","concat"],"sources":["C:/Users/123/Documents/Easynet/argon-dashboard/src/services/onboarding-service.js"],"sourcesContent":["import { endpoints } from \"api-endpoints\";\r\nimport axios from \"axios\";\r\nimport { handleMyErrors } from \"./error-handler-service\";\r\n\r\n\r\n\r\n\r\nexport const fetchAllDrivers = async () => {\r\n  try {\r\n    let data = await axios.get(endpoints.getDrivers);\r\n    return data;\r\n  } catch (err) {\r\n    return handleMyErrors(err);\r\n  }\r\n};\r\n\r\nexport const fetchUserByCorpId = async (corporateId: string) => {\r\n  try {\r\n    const data = await httpServiceInterfaceOauth2.get(\r\n      endpoints.fetchUserByCorpId.concat(corporateId)\r\n    );\r\n\r\n    return data;\r\n  } catch (error) {\r\n    return handleMyErrors(error);\r\n  }\r\n};"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,eAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,yBAA/B;AAKA,OAAO,IAAMC,eAAe;EAAA,sEAAG;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,OAEVF,KAAK,CAACG,GAAN,CAAUJ,SAAS,CAACK,UAApB,CAFU;;UAAA;YAEvBC,IAFuB;YAAA,iCAGpBA,IAHoB;;UAAA;YAAA;YAAA;YAAA,iCAKpBJ,cAAc,aALM;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAAfC,eAAe;IAAA;EAAA;AAAA,GAArB;AASP,OAAO,IAAMI,iBAAiB;EAAA,uEAAG,kBAAOC,WAAP;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,OAEVC,0BAA0B,CAACL,GAA3B,CACjBJ,SAAS,CAACO,iBAAV,CAA4BG,MAA5B,CAAmCF,WAAnC,CADiB,CAFU;;UAAA;YAEvBF,IAFuB;YAAA,kCAMtBA,IANsB;;UAAA;YAAA;YAAA;YAAA,kCAQtBJ,cAAc,cARQ;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAAjBK,iBAAiB;IAAA;EAAA;AAAA,GAAvB"},"metadata":{},"sourceType":"module"}