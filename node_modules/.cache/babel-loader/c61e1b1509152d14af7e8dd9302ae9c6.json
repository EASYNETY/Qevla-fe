{"ast":null,"code":"import { v4 as uuidv4 } from \"uuid\";\nimport { encryptStorage } from \"./encryptor\"; // import { utils, writeFile } from \"xlsx\";\n\nimport { getTokenVal, isEmptyArray, isEmptyString, isNullOrUndefined, parseJwt } from \"./tools\";\nexport var generateRandomChars = function generateRandomChars() {\n  var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 31;\n  var chars = uuidv4();\n  var uuidChars = chars.toString().replace(/-/g, \"\");\n  return uuidChars.substring(1, length);\n};\nexport var generateRandomNumber = function generateRandomNumber() {\n  var max = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n  return Math.floor(Math.random() * max) + 1;\n};\nexport var generateNumericString = function generateNumericString(length) {\n  var chars = \"0123456789\";\n  var randomNumericString = \"\";\n\n  for (var i = 0; i < length; i++) {\n    var rnum = Math.floor(Math.random() * chars.length);\n    randomNumericString += chars.substring(rnum, rnum + 1);\n  }\n\n  return randomNumericString;\n};\nexport var formatNumber = function formatNumber(str) {\n  try {\n    if (isNullOrUndefined(str)) throw new Error(\"Invalid value found\");\n    str = Number(str).toLocaleString();\n    var dotIndex = str.indexOf(\".\");\n    if (dotIndex === -1) str = str + \".00\";else if (str.length - dotIndex === 2) str = str + \"0\";\n    return str;\n  } catch (error) {\n    return \"N/A\";\n  }\n};\nexport var filterData = function filterData(data, filterby, queryText) {\n  if (isEmptyString(filterby) || isEmptyString(queryText) || isEmptyArray(data)) return data;\n  return data.filter(function (item) {\n    return item[filterby].toLowerCase().includes(queryText.toLowerCase());\n  });\n};\nexport var getValueFromUserDetail = function getValueFromUserDetail(valueToGet) {\n  var valueToReturn;\n  var tokenVal = getTokenVal();\n  var userDetails = parseJwt(tokenVal);\n\n  switch (valueToGet) {\n    case \"username\":\n      var username = !isNullOrUndefined(userDetails) ? userDetails === null || userDetails === void 0 ? void 0 : userDetails.user_name : \"\";\n      valueToReturn = username;\n      break;\n\n    case \"firstName\":\n      var encFName = encryptStorage.getItem(\"firstName\");\n      var firstName = !isNullOrUndefined(encFName) ? encFName : \"\";\n      valueToReturn = firstName;\n      break;\n\n    case \"tokenEnabled\":\n      var tokenEnabled = !isNullOrUndefined(userDetails) ? userDetails === null || userDetails === void 0 ? void 0 : userDetails.user_token_enabled : \"\";\n      valueToReturn = tokenEnabled;\n      break;\n\n    case \"isLoggedIn\":\n      valueToReturn = !isNullOrUndefined(encryptStorage.getItem(\"isLoggedIn\")) ? encryptStorage.getItem(\"isLoggedIn\") : \"false\";\n      break;\n\n    case \"userRole\":\n      var userRole = !isNullOrUndefined(userDetails) ? userDetails === null || userDetails === void 0 ? void 0 : userDetails.roleIds : \"\";\n      valueToReturn = userRole;\n      break;\n\n    case \"userId\":\n      var userId = !isNullOrUndefined(userDetails) ? userDetails === null || userDetails === void 0 ? void 0 : userDetails.user_id : \"\";\n      valueToReturn = userId;\n      break;\n\n    case \"corporateId\":\n      var corporateId = !isNullOrUndefined(userDetails) ? userDetails === null || userDetails === void 0 ? void 0 : userDetails.corporate_id : \"\";\n      valueToReturn = corporateId;\n      break;\n\n    case \"corporateCode\":\n      var corporateCode = !isNullOrUndefined(userDetails) ? userDetails === null || userDetails === void 0 ? void 0 : userDetails.corporate_code : \"\";\n      valueToReturn = corporateCode;\n      break;\n\n    case \"companyName\":\n      var encComName = encryptStorage.getItem(\"companyName\");\n      var companyName = !isNullOrUndefined(encComName) ? encComName : \"\";\n      valueToReturn = companyName;\n      break;\n\n    default:\n      valueToReturn = \"\";\n      break;\n  }\n\n  return valueToReturn;\n};\nexport var exportData = function exportData(data, outputFormat) {\n  if (outputFormat === \"excel\") exportToExcel();\n  if (outputFormat === \"csv\") exportToCsv(); // function getSheet() {\n  //   return utils.json_to_sheet(data);\n  // }\n  // function exportToExcel() {\n  //   const workSheet = getSheet();\n  //   const workBook = { Sheets: { data: workSheet }, SheetNames: [\"data\"] };\n  //   writeFile(workBook, \"Account Statement.xlsx\", { bookType: \"xlsx\" });\n  // }\n\n  function exportToCsv() {\n    var workSheet = getSheet();\n    var workBook = {\n      Sheets: {\n        data: workSheet\n      },\n      SheetNames: [\"data\"]\n    };\n    writeFile(workBook, \"Account Statement.csv\", {\n      bookType: \"csv\"\n    });\n  }\n};\nexport var useTimer = function useTimer(initTime) {\n  var duration = initTime;\n  var start = Date.now(),\n      diff,\n      minutes,\n      seconds;\n\n  function timer() {\n    diff = duration - ((Date.now() - start) / 1000 | 0);\n    minutes = diff / 60 | 0;\n    seconds = diff % 60 | 0;\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n    if (diff <= 0) {\n      start = Date.now() + 1000;\n      clearInterval(myCountdown);\n    }\n  }\n\n  timer();\n  var myCountdown = setInterval(timer, 1000);\n  return {\n    diff: diff\n  };\n};","map":{"version":3,"names":["v4","uuidv4","encryptStorage","getTokenVal","isEmptyArray","isEmptyString","isNullOrUndefined","parseJwt","generateRandomChars","length","chars","uuidChars","toString","replace","substring","generateRandomNumber","max","Math","floor","random","generateNumericString","randomNumericString","i","rnum","formatNumber","str","Error","Number","toLocaleString","dotIndex","indexOf","error","filterData","data","filterby","queryText","filter","item","toLowerCase","includes","getValueFromUserDetail","valueToGet","valueToReturn","tokenVal","userDetails","username","user_name","encFName","getItem","firstName","tokenEnabled","user_token_enabled","userRole","roleIds","userId","user_id","corporateId","corporate_id","corporateCode","corporate_code","encComName","companyName","exportData","outputFormat","exportToExcel","exportToCsv","workSheet","getSheet","workBook","Sheets","SheetNames","writeFile","bookType","useTimer","initTime","duration","start","Date","now","diff","minutes","seconds","timer","clearInterval","myCountdown","setInterval"],"sources":["C:/Users/123/Documents/Easynet/argon-dashboard/src/utils/helpers.js"],"sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\r\nimport { encryptStorage } from \"./encryptor\";\r\n// import { utils, writeFile } from \"xlsx\";\r\nimport { getTokenVal, isEmptyArray, isEmptyString, isNullOrUndefined, parseJwt } from \"./tools\";\r\n\r\nexport const generateRandomChars = (length: number = 31) => {\r\n  const chars = uuidv4();\r\n  const uuidChars = chars.toString().replace(/-/g, \"\");\r\n  return uuidChars.substring(1, length);\r\n};\r\n\r\nexport const generateRandomNumber = (max: number = 10) => {\r\n  return Math.floor(Math.random() * max) + 1;\r\n};\r\n\r\nexport const generateNumericString = (length: number) => {\r\n  let chars = \"0123456789\";\r\n  let randomNumericString = \"\";\r\n  for (let i = 0; i < length; i++) {\r\n    let rnum = Math.floor(Math.random() * chars.length);\r\n    randomNumericString += chars.substring(rnum, rnum + 1);\r\n  }\r\n  return randomNumericString;\r\n};\r\n\r\nexport const formatNumber = (str: string) => {\r\n  try {\r\n    if (isNullOrUndefined(str)) throw new Error(\"Invalid value found\")\r\n    str = Number(str).toLocaleString()\r\n    let dotIndex = str.indexOf(\".\")\r\n    if (dotIndex === -1) str = str + \".00\"\r\n    else if (str.length - dotIndex === 2) str = str + \"0\"\r\n    return str\r\n  } catch (error) {\r\n    return \"N/A\"\r\n  }\r\n\r\n}\r\n\r\nexport const filterData = (data: any[], filterby: string, queryText: string) => {\r\n  if (isEmptyString(filterby) || isEmptyString(queryText) || isEmptyArray(data)) return data\r\n  return data.filter(item => item[filterby].toLowerCase().includes(queryText.toLowerCase()));\r\n}\r\n\r\nexport const getValueFromUserDetail = (valueToGet: any) => {\r\n  let valueToReturn;\r\n  let tokenVal = getTokenVal();\r\n  let userDetails = parseJwt(tokenVal);\r\n  switch (valueToGet) {\r\n    case \"username\":\r\n      let username = !isNullOrUndefined(userDetails)\r\n        ? userDetails?.user_name\r\n        : \"\";\r\n      valueToReturn = username;\r\n      break;\r\n    case \"firstName\":\r\n      let encFName = encryptStorage.getItem(\"firstName\");\r\n      let firstName = !isNullOrUndefined(encFName) ? encFName : \"\";\r\n      valueToReturn = firstName;\r\n      break;\r\n    case \"tokenEnabled\":\r\n      let tokenEnabled = !isNullOrUndefined(userDetails)\r\n        ? userDetails?.user_token_enabled\r\n        : \"\";\r\n      valueToReturn = tokenEnabled;\r\n      break;\r\n    case \"isLoggedIn\":\r\n      valueToReturn = !isNullOrUndefined(encryptStorage.getItem(\"isLoggedIn\"))\r\n        ? encryptStorage.getItem(\"isLoggedIn\")\r\n        : \"false\";\r\n      break;\r\n    case \"userRole\":\r\n      let userRole = !isNullOrUndefined(userDetails)\r\n        ? userDetails?.roleIds\r\n        : \"\";\r\n      valueToReturn = userRole;\r\n      break;\r\n    case \"userId\":\r\n      let userId = !isNullOrUndefined(userDetails)\r\n        ? userDetails?.user_id\r\n        : \"\";\r\n      valueToReturn = userId;\r\n      break;\r\n    case \"corporateId\":\r\n      let corporateId = !isNullOrUndefined(userDetails)\r\n        ? userDetails?.corporate_id\r\n        : \"\";\r\n      valueToReturn = corporateId;\r\n      break;\r\n    case \"corporateCode\":\r\n      let corporateCode = !isNullOrUndefined(userDetails)\r\n        ? userDetails?.corporate_code\r\n        : \"\";\r\n      valueToReturn = corporateCode;\r\n      break;\r\n    case \"companyName\":\r\n      let encComName = encryptStorage.getItem(\"companyName\");\r\n      let companyName = !isNullOrUndefined(encComName) ? encComName : \"\";\r\n      valueToReturn = companyName;\r\n      break;\r\n\r\n    default:\r\n      valueToReturn = \"\";\r\n      break;\r\n  }\r\n  return valueToReturn;\r\n};\r\n\r\nexport const exportData = (data: any, outputFormat: string) => {\r\n  if (outputFormat === \"excel\") exportToExcel()\r\n  if (outputFormat === \"csv\") exportToCsv()\r\n\r\n  // function getSheet() {\r\n  //   return utils.json_to_sheet(data);\r\n  // }\r\n\r\n  // function exportToExcel() {\r\n  //   const workSheet = getSheet();\r\n  //   const workBook = { Sheets: { data: workSheet }, SheetNames: [\"data\"] };\r\n  //   writeFile(workBook, \"Account Statement.xlsx\", { bookType: \"xlsx\" });\r\n  // }\r\n\r\n  function exportToCsv() {\r\n    const workSheet = getSheet();\r\n    const workBook = { Sheets: { data: workSheet }, SheetNames: [\"data\"] };\r\n    writeFile(workBook, \"Account Statement.csv\", { bookType: \"csv\" });\r\n  }\r\n}\r\nexport const useTimer = (initTime: number) => {\r\n  var duration = initTime;\r\n\r\n  var start = Date.now(),\r\n    diff,\r\n    minutes,\r\n    seconds;\r\n\r\n  function timer() {\r\n    diff = duration - (((Date.now() - start) / 1000) | 0);\r\n\r\n    minutes = (diff / 60) | 0;\r\n    seconds = diff % 60 | 0;\r\n\r\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n\r\n    seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n\r\n    if (diff <= 0) {\r\n      start = Date.now() + 1000;\r\n\r\n      clearInterval(myCountdown);\r\n    }\r\n  }\r\n\r\n  timer();\r\n\r\n  var myCountdown = setInterval(timer, 1000);\r\n  return { diff };\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}