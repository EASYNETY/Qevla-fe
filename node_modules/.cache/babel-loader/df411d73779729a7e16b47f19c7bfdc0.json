{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/123/Documents/Easynet/argon-dashboard/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/123/Documents/Easynet/argon-dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport axios, { AxiosInstance } from \"axios\";\nimport { authBaseUrl } from \"../api-endpoints\";\nimport { encryptStorage } from \"../utils/encryptor\";\nimport { clearTimeouts, isEmptyString, isNullOrUndefined, isTokenCloseToExpiry, tokenRefreshTimeout, tokenRequeryProcessing } from \"../utils/tools\";\nimport { handleMyErrors } from \"./error-handler-service\";\nimport queryString from \"query-string\";\nvar myOauth2Axios = axios.create({\n  baseURL: \"\"\n});\nmyOauth2Axios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\nmyOauth2Axios.defaults.headers.post[\"Accept\"] = \"application/json\";\nmyOauth2Axios.defaults.timeout = 120000;\nmyOauth2Axios.interceptors.request.use(function (request) {\n  return request;\n});\n\nfunction setJwt(jwt) {\n  myOauth2Axios.defaults.headers.common[\"Authorization\"] = \"Bearer \".concat(jwt);\n}\n\nfunction getRefreshToken() {\n  var tokenVal = encryptStorage.getItem(\"refreshToken\");\n  return tokenVal;\n}\n\nfunction getJwt() {\n  var tokenVal = myOauth2Axios.defaults.headers.common[\"Authorization\"];\n\n  if (!isNullOrUndefined(tokenVal)) {\n    var tokenValSplit = tokenVal.split(\" \");\n\n    if (tokenValSplit.length > 1 && tokenValSplit[1].length > 0) {\n      return tokenVal;\n    } else {\n      return null;\n    }\n  } else {\n    return null;\n  }\n}\n\nexport var listenForTokenExpiry = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var _Number;\n\n    var expiresAt;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            expiresAt = encryptStorage.getItem(\"expiresAt\");\n\n            if (!isTokenCloseToExpiry((_Number = Number(expiresAt)) !== null && _Number !== void 0 ? _Number : -1)) {\n              _context.next = 4;\n              break;\n            }\n\n            _context.next = 4;\n            return refreshToken();\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function listenForTokenExpiry() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var refreshToken = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n    var refT, _process$env$REACT_AP, options, url, _yield$myOauth2Axios$, status, data, jwtToken;\n\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            refT = getRefreshToken();\n\n            if (!(!isNullOrUndefined(refT) || !isEmptyString(refT))) {\n              _context2.next = 17;\n              break;\n            }\n\n            options = {\n              headers: {\n                \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\n                Authorization: \"Basic \".concat((_process$env$REACT_AP = process.env.REACT_APP_BASIC_AUTH) !== null && _process$env$REACT_AP !== void 0 ? _process$env$REACT_AP : \"\")\n              }\n            };\n            url = \"\".concat(authBaseUrl, \"/oauth/token\");\n            _context2.next = 7;\n            return myOauth2Axios.post(url, queryString.stringify({\n              grant_type: \"refresh_token\",\n              client_id: \"SYSTEM\",\n              refresh_token: refT\n            }), options);\n\n          case 7:\n            _yield$myOauth2Axios$ = _context2.sent;\n            status = _yield$myOauth2Axios$.status;\n            data = _yield$myOauth2Axios$.data;\n\n            if (!(status === 200 && data)) {\n              _context2.next = 17;\n              break;\n            }\n\n            jwtToken = data.access_token;\n            clearTimeouts(tokenRefreshTimeout);\n            encryptStorage.setItem(\"refreshToken\", data.refresh_token);\n            tokenRequeryProcessing(jwtToken); // recursiveCountdownTo(tRes.tokenRequeryInterval, true);\n\n            httpServiceInterfaceOauth2.setJwt(jwtToken);\n            return _context2.abrupt(\"return\", data);\n\n          case 17:\n            _context2.next = 23;\n            break;\n\n          case 19:\n            _context2.prev = 19;\n            _context2.t0 = _context2[\"catch\"](0);\n            httpServiceInterfaceOauth2.setJwt(\"\");\n            return _context2.abrupt(\"return\", handleMyErrors(_context2.t0));\n\n          case 23:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 19]]);\n  }));\n\n  return function refreshToken() {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar doGet = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(url, _config) {\n    var resData, _yield$myOauth2Axios$2, data;\n\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            resData = {};\n            _context3.prev = 1;\n            _context3.next = 4;\n            return myOauth2Axios.get(url);\n\n          case 4:\n            _yield$myOauth2Axios$2 = _context3.sent;\n            data = _yield$myOauth2Axios$2.data;\n            return _context3.abrupt(\"return\", data);\n\n          case 9:\n            _context3.prev = 9;\n            _context3.t0 = _context3[\"catch\"](1);\n            resData = handleMyErrors(_context3.t0);\n\n          case 12:\n            return _context3.abrupt(\"return\", resData);\n\n          case 13:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[1, 9]]);\n  }));\n\n  return function doGet(_x, _x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar doPost = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(url, requestBody) {\n    var config,\n        resData,\n        _yield$myOauth2Axios$3,\n        data,\n        _args4 = arguments;\n\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            config = _args4.length > 2 && _args4[2] !== undefined ? _args4[2] : {};\n            _context4.prev = 1;\n            _context4.next = 4;\n            return myOauth2Axios.post(url, requestBody, config);\n\n          case 4:\n            _yield$myOauth2Axios$3 = _context4.sent;\n            data = _yield$myOauth2Axios$3.data;\n            return _context4.abrupt(\"return\", data);\n\n          case 9:\n            _context4.prev = 9;\n            _context4.t0 = _context4[\"catch\"](1);\n            resData = handleMyErrors(_context4.t0);\n\n          case 12:\n            return _context4.abrupt(\"return\", resData);\n\n          case 13:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[1, 9]]);\n  }));\n\n  return function doPost(_x3, _x4) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar doPut = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(url, requestBody) {\n    var config,\n        resData,\n        _yield$myOauth2Axios$4,\n        data,\n        _args5 = arguments;\n\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            config = _args5.length > 2 && _args5[2] !== undefined ? _args5[2] : {};\n            _context5.prev = 1;\n            _context5.next = 4;\n            return myOauth2Axios.put(url, requestBody, config);\n\n          case 4:\n            _yield$myOauth2Axios$4 = _context5.sent;\n            data = _yield$myOauth2Axios$4.data;\n            return _context5.abrupt(\"return\", data);\n\n          case 9:\n            _context5.prev = 9;\n            _context5.t0 = _context5[\"catch\"](1);\n            resData = handleMyErrors(_context5.t0);\n\n          case 12:\n            return _context5.abrupt(\"return\", resData);\n\n          case 13:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[1, 9]]);\n  }));\n\n  return function doPut(_x5, _x6) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nexport var httpServiceInterfaceOauth2 = {\n  myAxios: axios,\n  setJwt: setJwt,\n  // setRefreshToken: setRefreshToken,\n  getJwt: getJwt,\n  get: doGet,\n  post: doPost,\n  put: doPut\n};","map":{"version":3,"names":["axios","AxiosInstance","authBaseUrl","encryptStorage","clearTimeouts","isEmptyString","isNullOrUndefined","isTokenCloseToExpiry","tokenRefreshTimeout","tokenRequeryProcessing","handleMyErrors","queryString","myOauth2Axios","create","baseURL","defaults","headers","post","timeout","interceptors","request","use","setJwt","jwt","common","getRefreshToken","tokenVal","getItem","getJwt","tokenValSplit","split","length","listenForTokenExpiry","expiresAt","Number","refreshToken","refT","options","Authorization","concat","process","env","REACT_APP_BASIC_AUTH","url","stringify","grant_type","client_id","refresh_token","status","data","jwtToken","access_token","setItem","httpServiceInterfaceOauth2","doGet","_config","resData","get","doPost","requestBody","config","doPut","put","myAxios"],"sources":["C:/Users/123/Documents/Easynet/argon-dashboard/src/services/http-service-oauth.js"],"sourcesContent":["import axios, { AxiosInstance } from \"axios\";\r\nimport { authBaseUrl } from \"../api-endpoints\";\r\nimport { encryptStorage } from \"../utils/encryptor\";\r\nimport {\r\n  clearTimeouts,\r\n  isEmptyString,\r\n  isNullOrUndefined,\r\n  isTokenCloseToExpiry,\r\n  tokenRefreshTimeout,\r\n  tokenRequeryProcessing,\r\n} from \"../utils/tools\";\r\nimport { handleMyErrors } from \"./error-handler-service\";\r\nimport queryString from \"query-string\";\r\n\r\nconst myOauth2Axios: AxiosInstance = axios.create({\r\n  baseURL: \"\",\r\n});\r\nmyOauth2Axios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\nmyOauth2Axios.defaults.headers.post[\"Accept\"] = \"application/json\";\r\nmyOauth2Axios.defaults.timeout = 120000;\r\nmyOauth2Axios.interceptors.request.use((request) => {\r\n  return request;\r\n});\r\n\r\nfunction setJwt(jwt: string | null) {\r\n  myOauth2Axios.defaults.headers.common[\"Authorization\"] = `Bearer ${jwt}`;\r\n}\r\n\r\nfunction getRefreshToken() {\r\n  let tokenVal = encryptStorage.getItem(\"refreshToken\");\r\n  return tokenVal;\r\n}\r\n\r\nfunction getJwt() {\r\n  let tokenVal: string = myOauth2Axios.defaults.headers.common[\"Authorization\"];\r\n\r\n  if (!isNullOrUndefined(tokenVal)) {\r\n    let tokenValSplit = tokenVal.split(\" \");\r\n    if (tokenValSplit.length > 1 && tokenValSplit[1].length > 0) {\r\n      return tokenVal;\r\n    } else {\r\n      return null;\r\n    }\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport const listenForTokenExpiry = async () => {\r\n  let expiresAt = encryptStorage.getItem(\"expiresAt\");\r\n  if (isTokenCloseToExpiry(Number(expiresAt) ?? -1)) {\r\n    await refreshToken();\r\n  }\r\n};\r\n\r\nexport const refreshToken = async () => {\r\n  try {\r\n    let refT = getRefreshToken();\r\n    if (!isNullOrUndefined(refT) || !isEmptyString(refT)) {\r\n      const options = {\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          Authorization: \"Basic \".concat(\r\n            process.env.REACT_APP_BASIC_AUTH ?? \"\"\r\n          ),\r\n        },\r\n      };\r\n      const url = `${authBaseUrl}/oauth/token`;\r\n      const { status, data } = await myOauth2Axios.post(\r\n        url,\r\n        queryString.stringify({\r\n          grant_type: \"refresh_token\",\r\n          client_id: \"SYSTEM\",\r\n          refresh_token: refT,\r\n        }),\r\n        options\r\n      );\r\n\r\n      if (status === 200 && data) {\r\n        const jwtToken = data.access_token;\r\n        clearTimeouts(tokenRefreshTimeout);\r\n        encryptStorage.setItem(\"refreshToken\", data.refresh_token);\r\n        tokenRequeryProcessing(jwtToken);\r\n\r\n        // recursiveCountdownTo(tRes.tokenRequeryInterval, true);\r\n        httpServiceInterfaceOauth2.setJwt(jwtToken);\r\n        return data;\r\n      }\r\n    }\r\n  } catch (err) {\r\n    httpServiceInterfaceOauth2.setJwt(\"\");\r\n    return handleMyErrors(err);\r\n  }\r\n};\r\n\r\nconst doGet = async (url: string, _config?: any) => {\r\n  let resData: any = {};\r\n  try {\r\n    // if (httpServiceInterfaceOauth2.getJwt() === null) {\r\n    //   await refreshToken();\r\n    // }\r\n    const { data } = await myOauth2Axios.get(url);\r\n    return data;\r\n  } catch (err) {\r\n    resData = handleMyErrors(err);\r\n  }\r\n  return resData;\r\n};\r\n\r\nconst doPost = async (url: string, requestBody: any, config: any = {}) => {\r\n  let resData: any;\r\n  try {\r\n    // await authHttpForUser();\r\n    const { data } = await myOauth2Axios.post(url, requestBody, config);\r\n    return data;\r\n  } catch (err) {\r\n    resData = handleMyErrors(err);\r\n  }\r\n  return resData;\r\n};\r\n\r\nconst doPut = async (url: string, requestBody: any, config: any = {}) => {\r\n  let resData: any;\r\n  try {\r\n    // await authHttpForUser();\r\n    const { data } = await myOauth2Axios.put(url, requestBody, config);\r\n    return data;\r\n  } catch (err) {\r\n    resData = handleMyErrors(err);\r\n  }\r\n  return resData;\r\n};\r\n\r\nexport const httpServiceInterfaceOauth2 = {\r\n  myAxios: axios,\r\n  setJwt: setJwt,\r\n  // setRefreshToken: setRefreshToken,\r\n  getJwt: getJwt,\r\n  get: doGet,\r\n  post: doPost,\r\n  put: doPut,\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,SACEC,aADF,EAEEC,aAFF,EAGEC,iBAHF,EAIEC,oBAJF,EAKEC,mBALF,EAMEC,sBANF,QAOO,gBAPP;AAQA,SAASC,cAAT,QAA+B,yBAA/B;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAEA,IAAMC,aAA4B,GAAGZ,KAAK,CAACa,MAAN,CAAa;EAChDC,OAAO,EAAE;AADuC,CAAb,CAArC;AAGAF,aAAa,CAACG,QAAd,CAAuBC,OAAvB,CAA+BC,IAA/B,CAAoC,cAApC,IAAsD,kBAAtD;AACAL,aAAa,CAACG,QAAd,CAAuBC,OAAvB,CAA+BC,IAA/B,CAAoC,QAApC,IAAgD,kBAAhD;AACAL,aAAa,CAACG,QAAd,CAAuBG,OAAvB,GAAiC,MAAjC;AACAN,aAAa,CAACO,YAAd,CAA2BC,OAA3B,CAAmCC,GAAnC,CAAuC,UAACD,OAAD,EAAa;EAClD,OAAOA,OAAP;AACD,CAFD;;AAIA,SAASE,MAAT,CAAgBC,GAAhB,EAAoC;EAClCX,aAAa,CAACG,QAAd,CAAuBC,OAAvB,CAA+BQ,MAA/B,CAAsC,eAAtC,qBAAmED,GAAnE;AACD;;AAED,SAASE,eAAT,GAA2B;EACzB,IAAIC,QAAQ,GAAGvB,cAAc,CAACwB,OAAf,CAAuB,cAAvB,CAAf;EACA,OAAOD,QAAP;AACD;;AAED,SAASE,MAAT,GAAkB;EAChB,IAAIF,QAAgB,GAAGd,aAAa,CAACG,QAAd,CAAuBC,OAAvB,CAA+BQ,MAA/B,CAAsC,eAAtC,CAAvB;;EAEA,IAAI,CAAClB,iBAAiB,CAACoB,QAAD,CAAtB,EAAkC;IAChC,IAAIG,aAAa,GAAGH,QAAQ,CAACI,KAAT,CAAe,GAAf,CAApB;;IACA,IAAID,aAAa,CAACE,MAAd,GAAuB,CAAvB,IAA4BF,aAAa,CAAC,CAAD,CAAb,CAAiBE,MAAjB,GAA0B,CAA1D,EAA6D;MAC3D,OAAOL,QAAP;IACD,CAFD,MAEO;MACL,OAAO,IAAP;IACD;EACF,CAPD,MAOO;IACL,OAAO,IAAP;EACD;AACF;;AAED,OAAO,IAAMM,oBAAoB;EAAA,sEAAG;IAAA;;IAAA;IAAA;MAAA;QAAA;UAAA;YAC9BC,SAD8B,GAClB9B,cAAc,CAACwB,OAAf,CAAuB,WAAvB,CADkB;;YAAA,KAE9BpB,oBAAoB,YAAC2B,MAAM,CAACD,SAAD,CAAP,6CAAsB,CAAC,CAAvB,CAFU;cAAA;cAAA;YAAA;;YAAA;YAAA,OAG1BE,YAAY,EAHc;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAApBH,oBAAoB;IAAA;EAAA;AAAA,GAA1B;AAOP,OAAO,IAAMG,YAAY;EAAA,uEAAG;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAA;YAEpBC,IAFoB,GAEbX,eAAe,EAFF;;YAAA,MAGpB,CAACnB,iBAAiB,CAAC8B,IAAD,CAAlB,IAA4B,CAAC/B,aAAa,CAAC+B,IAAD,CAHtB;cAAA;cAAA;YAAA;;YAIhBC,OAJgB,GAIN;cACdrB,OAAO,EAAE;gBACP,gBAAgB,iDADT;gBAEPsB,aAAa,EAAE,SAASC,MAAT,0BACbC,OAAO,CAACC,GAAR,CAAYC,oBADC,yEACuB,EADvB;cAFR;YADK,CAJM;YAYhBC,GAZgB,aAYPzC,WAZO;YAAA;YAAA,OAaSU,aAAa,CAACK,IAAd,CAC7B0B,GAD6B,EAE7BhC,WAAW,CAACiC,SAAZ,CAAsB;cACpBC,UAAU,EAAE,eADQ;cAEpBC,SAAS,EAAE,QAFS;cAGpBC,aAAa,EAAEX;YAHK,CAAtB,CAF6B,EAO7BC,OAP6B,CAbT;;UAAA;YAAA;YAadW,MAbc,yBAadA,MAbc;YAaNC,IAbM,yBAaNA,IAbM;;YAAA,MAuBlBD,MAAM,KAAK,GAAX,IAAkBC,IAvBA;cAAA;cAAA;YAAA;;YAwBdC,QAxBc,GAwBHD,IAAI,CAACE,YAxBF;YAyBpB/C,aAAa,CAACI,mBAAD,CAAb;YACAL,cAAc,CAACiD,OAAf,CAAuB,cAAvB,EAAuCH,IAAI,CAACF,aAA5C;YACAtC,sBAAsB,CAACyC,QAAD,CAAtB,CA3BoB,CA6BpB;;YACAG,0BAA0B,CAAC/B,MAA3B,CAAkC4B,QAAlC;YA9BoB,kCA+BbD,IA/Ba;;UAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;YAmCxBI,0BAA0B,CAAC/B,MAA3B,CAAkC,EAAlC;YAnCwB,kCAoCjBZ,cAAc,cApCG;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAAZyB,YAAY;IAAA;EAAA;AAAA,GAAlB;;AAwCP,IAAMmB,KAAK;EAAA,uEAAG,kBAAOX,GAAP,EAAoBY,OAApB;IAAA;;IAAA;MAAA;QAAA;UAAA;YACRC,OADQ,GACO,EADP;YAAA;YAAA;YAAA,OAMa5C,aAAa,CAAC6C,GAAd,CAAkBd,GAAlB,CANb;;UAAA;YAAA;YAMFM,IANE,0BAMFA,IANE;YAAA,kCAOHA,IAPG;;UAAA;YAAA;YAAA;YASVO,OAAO,GAAG9C,cAAc,cAAxB;;UATU;YAAA,kCAWL8C,OAXK;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAALF,KAAK;IAAA;EAAA;AAAA,GAAX;;AAcA,IAAMI,MAAM;EAAA,uEAAG,kBAAOf,GAAP,EAAoBgB,WAApB;IAAA;IAAA;IAAA;IAAA;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAsCC,MAAtC,8DAAoD,EAApD;YAAA;YAAA;YAAA,OAIYhD,aAAa,CAACK,IAAd,CAAmB0B,GAAnB,EAAwBgB,WAAxB,EAAqCC,MAArC,CAJZ;;UAAA;YAAA;YAIHX,IAJG,0BAIHA,IAJG;YAAA,kCAKJA,IALI;;UAAA;YAAA;YAAA;YAOXO,OAAO,GAAG9C,cAAc,cAAxB;;UAPW;YAAA,kCASN8C,OATM;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAANE,MAAM;IAAA;EAAA;AAAA,GAAZ;;AAYA,IAAMG,KAAK;EAAA,uEAAG,kBAAOlB,GAAP,EAAoBgB,WAApB;IAAA;IAAA;IAAA;IAAA;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAsCC,MAAtC,8DAAoD,EAApD;YAAA;YAAA;YAAA,OAIahD,aAAa,CAACkD,GAAd,CAAkBnB,GAAlB,EAAuBgB,WAAvB,EAAoCC,MAApC,CAJb;;UAAA;YAAA;YAIFX,IAJE,0BAIFA,IAJE;YAAA,kCAKHA,IALG;;UAAA;YAAA;YAAA;YAOVO,OAAO,GAAG9C,cAAc,cAAxB;;UAPU;YAAA,kCASL8C,OATK;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAALK,KAAK;IAAA;EAAA;AAAA,GAAX;;AAYA,OAAO,IAAMR,0BAA0B,GAAG;EACxCU,OAAO,EAAE/D,KAD+B;EAExCsB,MAAM,EAAEA,MAFgC;EAGxC;EACAM,MAAM,EAAEA,MAJgC;EAKxC6B,GAAG,EAAEH,KALmC;EAMxCrC,IAAI,EAAEyC,MANkC;EAOxCI,GAAG,EAAED;AAPmC,CAAnC"},"metadata":{},"sourceType":"module"}