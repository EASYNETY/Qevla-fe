{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/123/Documents/Easynet/argon-dashboard/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/123/Documents/Easynet/argon-dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"C:/Users/123/Documents/Easynet/argon-dashboard/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\123\\\\Documents\\\\Easynet\\\\argon-dashboard\\\\src\\\\views\\\\Maps.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { GoogleMap, InfoWindow, Marker } from \"@react-google-maps/api\"; // core components\n\nimport Header from \"components/Headers/Header.js\";\nimport { endpoints } from \"../api-endpoints\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Map() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeMarker = _useState2[0],\n      setActiveMarker = _useState2[1]; // let drivers = [];\n\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      drivers = _useState4[0],\n      setDrivers = _useState4[1];\n\n  var marker = [];\n\n  var handleActiveMarker = function handleActiveMarker(drivers) {\n    if (drivers === activeMarker) {\n      return;\n    }\n\n    setActiveMarker(drivers);\n  };\n\n  useEffect(function () {\n    function fetchUsers() {\n      return _fetchUsers.apply(this, arguments);\n    }\n\n    function _fetchUsers() {\n      _fetchUsers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var fullResponse, responseJson;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(endpoints.getDrivers);\n\n              case 2:\n                fullResponse = _context.sent;\n                _context.next = 5;\n                return fullResponse.json();\n\n              case 5:\n                responseJson = _context.sent;\n                setDrivers(responseJson.users);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchUsers.apply(this, arguments);\n    }\n\n    fetchUsers();\n  }, []);\n  drivers.forEach(function (user) {\n    marker.push({\n      id: user.address.lat,\n      name: \"Qevla Driver new one\",\n      position: user.address\n    });\n  });\n  console.log(\"Created drivers>>>>>>> from headers from map markers used\", marker); // const markers = [\n  //   {\n  //     id: 1,\n  //     name: \"Qevla Driver\",\n  //     position: { lat: 6.45469, lng: 3.32042 },\n  //   },\n  //   {\n  //     id: 2,\n  //     name: \"Denver, Colorado\",\n  //     position: { lat: 39.739235, lng: -104.99025 },\n  //   },\n  //   // ,\n  //   // {\n  //   //   id: 3,\n  //   //   name: \"Los Angeles, California\",\n  //   //   position: { lat: 34.052235, lng: -118.243683 },\n  //   // },\n  //   // {\n  //   //   id: 4,\n  //   //   name: \"New York, New York\",\n  //   //   position: { lat: 40.712776, lng: -74.005974 },\n  //   // },\n  // ];\n\n  var google = window.google;\n\n  var handleOnLoad = function handleOnLoad(map) {\n    var bounds = new google.maps.LatLngBounds();\n    marker.forEach(function (_ref) {\n      var position = _ref.position;\n      return bounds.extend(position);\n    });\n    map.fitBounds(bounds);\n  }; // console.log(\"Created drivers>>>>>>> from headers from map marker\", marker);\n\n\n  var mylatLng = new google.maps.LatLng(6.45084, 3.35011);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n      onLoad: handleOnLoad,\n      onClick: function onClick() {\n        return setActiveMarker(null);\n      },\n      mapContainerStyle: {\n        height: \"600px\"\n      },\n      options: {\n        zoom: 12,\n        center: myLatlng,\n        scrollwheel: false,\n        zoomControl: true,\n        styles: [{\n          featureType: \"administrative\",\n          elementType: \"labels.text.fill\",\n          stylers: [{\n            color: \"#444444\"\n          }]\n        }, {\n          featureType: \"landscape\",\n          elementType: \"all\",\n          stylers: [{\n            color: \"#f2f2f2\"\n          }]\n        }, {\n          featureType: \"poi\",\n          elementType: \"all\",\n          stylers: [{\n            visibility: \"off\"\n          }]\n        }, {\n          featureType: \"road\",\n          elementType: \"all\",\n          stylers: [{\n            saturation: -100\n          }, {\n            lightness: 45\n          }]\n        }, {\n          featureType: \"road.highway\",\n          elementType: \"all\",\n          stylers: [{\n            visibility: \"simplified\"\n          }]\n        }, {\n          featureType: \"road.arterial\",\n          elementType: \"labels.icon\",\n          stylers: [{\n            visibility: \"off\"\n          }]\n        }, {\n          featureType: \"transit\",\n          elementType: \"all\",\n          stylers: [{\n            visibility: \"off\"\n          }]\n        }, {\n          featureType: \"water\",\n          elementType: \"all\",\n          stylers: [{\n            color: \"#5e72e4\"\n          }, {\n            visibility: \"on\"\n          }]\n        }]\n      },\n      children: marker.map(function (_ref2) {\n        var id = _ref2.id,\n            name = _ref2.name,\n            position = _ref2.position;\n        return /*#__PURE__*/_jsxDEV(Marker, {\n          position: position,\n          onClick: function onClick() {\n            return handleActiveMarker(id);\n          },\n          children: activeMarker === id ? /*#__PURE__*/_jsxDEV(InfoWindow, {\n            onCloseClick: function onCloseClick() {\n              return setActiveMarker(null);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, _this) : null\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Map, \"ppBNMYry8VJj4CcwadvT++DfFgY=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","InfoWindow","Marker","Header","endpoints","Map","activeMarker","setActiveMarker","drivers","setDrivers","marker","handleActiveMarker","fetchUsers","fetch","getDrivers","fullResponse","json","responseJson","users","forEach","user","push","id","address","lat","name","position","console","log","google","window","handleOnLoad","map","bounds","maps","LatLngBounds","extend","fitBounds","mylatLng","LatLng","height","zoom","center","myLatlng","scrollwheel","zoomControl","styles","featureType","elementType","stylers","color","visibility","saturation","lightness"],"sources":["C:/Users/123/Documents/Easynet/argon-dashboard/src/views/Maps.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { GoogleMap, InfoWindow, Marker } from \"@react-google-maps/api\";\n// core components\nimport Header from \"components/Headers/Header.js\";\nimport { endpoints } from \"../api-endpoints\";\n\nfunction Map() {\n  const [activeMarker, setActiveMarker] = useState(null);\n  // let drivers = [];\n  const [drivers, setDrivers] = useState([]);\n  const marker = [];\n\n  const handleActiveMarker = (drivers) => {\n    if (drivers === activeMarker) {\n      return;\n    }\n    setActiveMarker(drivers);\n  };\n\n  useEffect(() => {\n    async function fetchUsers() {\n      const fullResponse = await fetch(endpoints.getDrivers);\n      const responseJson = await fullResponse.json();\n      setDrivers(responseJson.users);\n    }\n\n    fetchUsers();\n  }, []);\n\n  drivers.forEach((user) => {\n    marker.push({\n      id: user.address.lat,\n      name: \"Qevla Driver new one\",\n      position: user.address,\n    });\n  });\n\n  console.log(\n    \"Created drivers>>>>>>> from headers from map markers used\",\n    marker\n  );\n\n\n  // const markers = [\n  //   {\n  //     id: 1,\n  //     name: \"Qevla Driver\",\n  //     position: { lat: 6.45469, lng: 3.32042 },\n  //   },\n\n  //   {\n  //     id: 2,\n  //     name: \"Denver, Colorado\",\n  //     position: { lat: 39.739235, lng: -104.99025 },\n  //   },\n  //   // ,\n  //   // {\n  //   //   id: 3,\n  //   //   name: \"Los Angeles, California\",\n  //   //   position: { lat: 34.052235, lng: -118.243683 },\n  //   // },\n  //   // {\n  //   //   id: 4,\n  //   //   name: \"New York, New York\",\n  //   //   position: { lat: 40.712776, lng: -74.005974 },\n  //   // },\n  // ];\n  const google = window.google;\n  \n    \n  const handleOnLoad = (map) => {\n    const bounds = new google.maps.LatLngBounds();\n    marker.forEach(({ position }) => bounds.extend(position));\n    map.fitBounds(bounds);\n    \n  };\n  // console.log(\"Created drivers>>>>>>> from headers from map marker\", marker);\n    let mylatLng = new google.maps.LatLng(6.45084, 3.35011);\n\n  return (\n    <>\n      <Header />\n      <GoogleMap\n        onLoad={handleOnLoad}\n        onClick={() => setActiveMarker(null)}\n        mapContainerStyle={{ height: \"600px\" }}\n        options = {{\n      zoom: 12,\n      center: myLatlng,\n      scrollwheel: false,\n      zoomControl: true,\n      styles: [\n        {\n          featureType: \"administrative\",\n          elementType: \"labels.text.fill\",\n          stylers: [{ color: \"#444444\" }],\n        },\n        {\n          featureType: \"landscape\",\n          elementType: \"all\",\n          stylers: [{ color: \"#f2f2f2\" }],\n        },\n        {\n          featureType: \"poi\",\n          elementType: \"all\",\n          stylers: [{ visibility: \"off\" }],\n        },\n        {\n          featureType: \"road\",\n          elementType: \"all\",\n          stylers: [{ saturation: -100 }, { lightness: 45 }],\n        },\n        {\n          featureType: \"road.highway\",\n          elementType: \"all\",\n          stylers: [{ visibility: \"simplified\" }],\n        },\n        {\n          featureType: \"road.arterial\",\n          elementType: \"labels.icon\",\n          stylers: [{ visibility: \"off\" }],\n        },\n        {\n          featureType: \"transit\",\n          elementType: \"all\",\n          stylers: [{ visibility: \"off\" }],\n        },\n        {\n          featureType: \"water\",\n          elementType: \"all\",\n          stylers: [{ color: \"#5e72e4\" }, { visibility: \"on\" }],\n        },\n      ],\n    }}\n      >\n        {marker.map(({ id, name, position }) => (\n          <Marker\n            key={id}\n            position={position}\n            onClick={() => handleActiveMarker(id)}\n          >\n            {activeMarker === id ? (\n              <InfoWindow onCloseClick={() => setActiveMarker(null)}>\n                <div>{name}</div>\n              </InfoWindow>\n            ) : null}\n          </Marker>\n        ))}\n      </GoogleMap>\n    </>\n  );\n}\n\nexport default Map;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}