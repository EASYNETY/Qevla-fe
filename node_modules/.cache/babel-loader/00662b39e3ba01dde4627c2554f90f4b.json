{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/123/Documents/Easynet/argon-dashboard/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/123/Documents/Easynet/argon-dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"C:/Users/123/Documents/Easynet/argon-dashboard/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\123\\\\Documents\\\\Easynet\\\\argon-dashboard\\\\src\\\\views\\\\Maps.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { GoogleMap, InfoWindow, Marker } from \"@react-google-maps/api\"; // core components\n\nimport Header from \"components/Headers/Header.js\";\nimport { endpoints } from \"../api-endpoints\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Map() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeMarker = _useState2[0],\n      setActiveMarker = _useState2[1]; // const [markers, setMarkers] = useState([]);\n\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      marker = _useState4[0],\n      setMarker = _useState4[1];\n\n  var handleActiveMarker = function handleActiveMarker(myMarkers) {\n    if (myMarkers === activeMarker) {\n      return;\n    }\n\n    setActiveMarker(myMarkers);\n  };\n\n  var drivers = [];\n  useEffect(function () {\n    function fetchUsers() {\n      return _fetchUsers.apply(this, arguments);\n    }\n\n    function _fetchUsers() {\n      _fetchUsers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var fullResponse, responseJson, users;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(endpoints.getDrivers);\n\n              case 2:\n                fullResponse = _context.sent;\n                _context.next = 5;\n                return fullResponse.json();\n\n              case 5:\n                responseJson = _context.sent;\n                users = responseJson.users; // setDrivers(users);\n                // setMarker(users?.address);\n\n                users.forEach(function (user) {\n                  driver;\n                  drivers.push({\n                    position: user.address\n                  }); // drivers.push({})\n                  // setDrivers(Object.entries(user.address));\n                  // setDrivers(Object.entries(user.address));\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchUsers.apply(this, arguments);\n    }\n\n    fetchUsers();\n  }, []);\n  console.log(\"Created drivers>>>>>>> from headers from map markers used\", drivers); // useEffect(() => {\n  //     const requestOptions = {\n  //         method: 'GET',\n  //         // eslint-disable-next-line no-useless-concat\n  //         headers: { 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIwicm9sZSI6ImV4cGVydCJ9.6pYrAr_En0nl4N52oP1O7WRJA6PPFGCzUebauBIOEnc\", },\n  //         body: JSON.stringify({\"firebase_id\":\"foCzPM8MgOtg1\"})\n  //     };\n  //         fetch(endpoints.getDrivers, requestOptions)\n  //         .then(response => response.json())\n  //         .then(data => setDrivers(data));    \n  //    }, []);\n  // drivers.forEach((driver) => {\n  //   // setMarker(driver.address);\n  //   setMarker(Object.entries(driver));\n  // });\n  // console.log(\n  //   \"Created drivers>>>>>>> from headers from map markers used\",\n  //   marker.lat\n  // );\n  //  drivers = [\n  //   {\n  //     id: marker.lat,\n  //     name: \"Qevla Driver\",\n  //     position: { lat: marker.lat, lng: marker.long },\n  //   }\n  // ];\n\n  var markers = [{\n    id: 1,\n    name: \"Qevla Driver\",\n    position: {\n      lat: 41.881832,\n      lng: -87.623177\n    }\n  }, {\n    id: 2,\n    name: \"Denver, Colorado\",\n    position: {\n      lat: 39.739235,\n      lng: -104.99025\n    }\n  }, {\n    id: 3,\n    name: \"Los Angeles, California\",\n    position: {\n      lat: 34.052235,\n      lng: -118.243683\n    }\n  }, {\n    id: 4,\n    name: \"New York, New York\",\n    position: {\n      lat: 40.712776,\n      lng: -74.005974\n    }\n  }];\n  var google = window.google;\n\n  var handleOnLoad = function handleOnLoad(map) {\n    var bounds = new google.maps.LatLngBounds();\n    markers.forEach(function (_ref) {\n      var position = _ref.position;\n      return bounds.extend(position);\n    });\n    map.fitBounds(bounds);\n  };\n\n  console.log(\"Created drivers>>>>>>> from headers from map markers\", markers);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n      onLoad: handleOnLoad,\n      onClick: function onClick() {\n        return setActiveMarker(null);\n      },\n      mapContainerStyle: {\n        height: \"600px\"\n      },\n      children: markers.map(function (_ref2) {\n        var id = _ref2.id,\n            name = _ref2.name,\n            position = _ref2.position;\n        return /*#__PURE__*/_jsxDEV(Marker, {\n          position: position,\n          onClick: function onClick() {\n            return handleActiveMarker(id);\n          },\n          children: activeMarker === id ? /*#__PURE__*/_jsxDEV(InfoWindow, {\n            onCloseClick: function onCloseClick() {\n              return setActiveMarker(null);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, _this) : null\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Map, \"MaSRfY9WIBpkgYMYgyyDu/yEB/Y=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","InfoWindow","Marker","Header","endpoints","Map","activeMarker","setActiveMarker","marker","setMarker","handleActiveMarker","myMarkers","drivers","fetchUsers","fetch","getDrivers","fullResponse","json","responseJson","users","forEach","user","driver","push","position","address","console","log","markers","id","name","lat","lng","google","window","handleOnLoad","map","bounds","maps","LatLngBounds","extend","fitBounds","height"],"sources":["C:/Users/123/Documents/Easynet/argon-dashboard/src/views/Maps.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { GoogleMap, InfoWindow, Marker } from \"@react-google-maps/api\";\n// core components\nimport Header from \"components/Headers/Header.js\";\nimport { endpoints } from \"../api-endpoints\";\n\n\n\n\n\n\nfunction Map() {\n  const [activeMarker, setActiveMarker] = useState(null);\n  // const [markers, setMarkers] = useState([]);\n  const [marker, setMarker] = useState();\n\n  const handleActiveMarker = (myMarkers) => {\n    if (myMarkers === activeMarker) {\n      return;\n    }\n    setActiveMarker(myMarkers);\n  };\n  let drivers = [];\n\n  useEffect(() => {\n    async function fetchUsers() {\n       const fullResponse = await fetch(endpoints.getDrivers)\n      // .then(fullResponse => fullResponse.json())\n      // .then(data => setDrivers(data.address));\n      const responseJson = await fullResponse.json();\n      let users = responseJson.users;\n      // setDrivers(users);\n      // setMarker(users?.address);\n\n      users.forEach((user) => {\n        driver\n        drivers.push({position: user.address});\n        // drivers.push({})\n    // setDrivers(Object.entries(user.address));\n        // setDrivers(Object.entries(user.address));\n      });\n    }\n\n    fetchUsers();\n  }, []);\n  console.log(\n    \"Created drivers>>>>>>> from headers from map markers used\",\n    drivers\n  );\n  // useEffect(() => {\n      \n  //     const requestOptions = {\n  //         method: 'GET',\n  //         // eslint-disable-next-line no-useless-concat\n  //         headers: { 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIwicm9sZSI6ImV4cGVydCJ9.6pYrAr_En0nl4N52oP1O7WRJA6PPFGCzUebauBIOEnc\", },\n  //         body: JSON.stringify({\"firebase_id\":\"foCzPM8MgOtg1\"})\n  //     };\n     \n  //         fetch(endpoints.getDrivers, requestOptions)\n  //         .then(response => response.json())\n  //         .then(data => setDrivers(data));    \n  //    }, []);\n\n  // drivers.forEach((driver) => {\n  //   // setMarker(driver.address);\n  //   setMarker(Object.entries(driver));\n  // });\n  // console.log(\n  //   \"Created drivers>>>>>>> from headers from map markers used\",\n  //   marker.lat\n  // );\n\n  //  drivers = [\n  //   {\n  //     id: marker.lat,\n  //     name: \"Qevla Driver\",\n  //     position: { lat: marker.lat, lng: marker.long },\n  //   }\n  // ];\n\n  const markers = [\n    {\n      id: 1,\n      name: \"Qevla Driver\",\n      position: { lat: 41.881832, lng: -87.623177 },\n    },\n    {\n      id: 2,\n      name: \"Denver, Colorado\",\n      position: { lat: 39.739235, lng: -104.99025 },\n    },\n    {\n      id: 3,\n      name: \"Los Angeles, California\",\n      position: { lat: 34.052235, lng: -118.243683 },\n    },\n    {\n      id: 4,\n      name: \"New York, New York\",\n      position: { lat: 40.712776, lng: -74.005974 },\n    },\n  ];\n  const google = window.google;\n  const handleOnLoad = (map) => {\n    const bounds = new google.maps.LatLngBounds();\n    markers.forEach(({ position }) => bounds.extend(position));\n    map.fitBounds(bounds);\n  };\n  console.log(\n    \"Created drivers>>>>>>> from headers from map markers\",\n    markers\n  );\n\n\n  return (\n    <>\n      <Header />\n      <GoogleMap\n        onLoad={handleOnLoad}\n        onClick={() => setActiveMarker(null)}\n        mapContainerStyle={{ height: \"600px\" }}\n      >\n        {markers.map(({ id, name, position }) => (\n          <Marker\n            key={id}\n            position={position}\n            onClick={() => handleActiveMarker(id)}\n          >\n            {activeMarker === id ? (\n              <InfoWindow onCloseClick={() => setActiveMarker(null)}>\n                <div>{name}</div>\n              </InfoWindow>\n            ) : null}\n          </Marker>\n        ))}\n      </GoogleMap>\n    </>\n  );\n}\n\nexport default Map;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}