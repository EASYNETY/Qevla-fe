{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/123/Documents/Easynet/argon-dashboard/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/123/Documents/Easynet/argon-dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"C:/Users/123/Documents/Easynet/argon-dashboard/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\123\\\\Documents\\\\Easynet\\\\argon-dashboard\\\\src\\\\views\\\\Maps.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { GoogleMap, InfoWindow, Marker } from \"@react-google-maps/api\"; // core components\n\nimport Header from \"components/Headers/Header.js\";\nimport { endpoints } from \"../api-endpoints\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Map() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeMarker = _useState2[0],\n      setActiveMarker = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      drivers = _useState4[0],\n      setDrivers = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      markers = _useState6[0],\n      setMarkers = _useState6[1];\n\n  var handleActiveMarker = function handleActiveMarker(marker) {\n    if (marker === activeMarker) {\n      return;\n    }\n\n    setActiveMarker(marker);\n  };\n\n  useEffect(function () {\n    function fetchUsers() {\n      return _fetchUsers.apply(this, arguments);\n    }\n\n    function _fetchUsers() {\n      _fetchUsers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var fullResponse, responseJson, users;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(endpoints.getDrivers);\n\n              case 2:\n                fullResponse = _context.sent;\n                _context.next = 5;\n                return fullResponse.json();\n\n              case 5:\n                responseJson = _context.sent;\n                users = responseJson.users;\n                setDrivers(users); // users.forEach((user) => {\n                //   setDrivers(user);\n                //   // setDrivers(Object.entries(user.address));\n                // });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchUsers.apply(this, arguments);\n    }\n\n    fetchUsers();\n  }, []);\n  console.log(\"Created drivers>>>>>>> from headers from map drivers\", drivers);\n  drivers.forEach(function (driver) {\n    // setDrivers(user);\n    setMarkers(Object.entries(user.address));\n  }); // const markers = [\n  //   {\n  //     id: 1,\n  //     name: \"Chicago, Illinois\",\n  //     position: { lat: 41.881832, lng: -87.623177 },\n  //   },\n  //   {\n  //     id: 2,\n  //     name: \"Denver, Colorado\",\n  //     position: { lat: 39.739235, lng: -104.99025 },\n  //   },\n  //   {\n  //     id: 3,\n  //     name: \"Los Angeles, California\",\n  //     position: { lat: 34.052235, lng: -118.243683 },\n  //   },\n  //   {\n  //     id: 4,\n  //     name: \"New York, New York\",\n  //     position: { lat: 40.712776, lng: -74.005974 },\n  //   },\n  // ];\n\n  var google = window.google;\n\n  var handleOnLoad = function handleOnLoad(map) {\n    var bounds = new google.maps.LatLngBounds();\n    markers.forEach(function (_ref) {\n      var position = _ref.position;\n      return bounds.extend(position);\n    });\n    map.fitBounds(bounds);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n      onLoad: handleOnLoad,\n      onClick: function onClick() {\n        return setActiveMarker(null);\n      },\n      mapContainerStyle: {\n        height: \"600px\"\n      },\n      children: markers.map(function (_ref2) {\n        var id = _ref2.id,\n            name = _ref2.name,\n            position = _ref2.position;\n        return /*#__PURE__*/_jsxDEV(Marker, {\n          position: position,\n          onClick: function onClick() {\n            return handleActiveMarker(id);\n          },\n          children: activeMarker === id ? /*#__PURE__*/_jsxDEV(InfoWindow, {\n            onCloseClick: function onCloseClick() {\n              return setActiveMarker(null);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, _this) : null\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Map, \"QOTOWUQCwspgKwl+LMIhHpcWbBw=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","InfoWindow","Marker","Header","endpoints","Map","activeMarker","setActiveMarker","drivers","setDrivers","markers","setMarkers","handleActiveMarker","marker","fetchUsers","fetch","getDrivers","fullResponse","json","responseJson","users","console","log","forEach","driver","Object","entries","user","address","google","window","handleOnLoad","map","bounds","maps","LatLngBounds","position","extend","fitBounds","height","id","name"],"sources":["C:/Users/123/Documents/Easynet/argon-dashboard/src/views/Maps.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { GoogleMap, InfoWindow, Marker } from \"@react-google-maps/api\";\n// core components\nimport Header from \"components/Headers/Header.js\";\nimport { endpoints } from \"../api-endpoints\";\n\n\n\n\n\n\nfunction Map() {\n  const [activeMarker, setActiveMarker] = useState(null);\n  const [drivers, setDrivers] = useState([]);\n  const [markers, setMarkers] = useState([]);\n\n  const handleActiveMarker = (marker) => {\n    if (marker === activeMarker) {\n      return;\n    }\n    setActiveMarker(marker);\n  };\n\n  useEffect(() => {\n    async function fetchUsers() {\n      const fullResponse = await fetch(endpoints.getDrivers);\n      const responseJson = await fullResponse.json();\n      let users = responseJson.users;\n      setDrivers(users);\n\n      // users.forEach((user) => {\n      //   setDrivers(user);\n      //   // setDrivers(Object.entries(user.address));\n      // });\n    }\n\n    fetchUsers();\n  }, []);\n  console.log(\"Created drivers>>>>>>> from headers from map drivers\", drivers);\n\n  drivers.forEach((driver) => {\n    // setDrivers(user);\n    setMarkers(Object.entries(user.address));\n  });\n  // const markers = [\n  //   {\n  //     id: 1,\n  //     name: \"Chicago, Illinois\",\n  //     position: { lat: 41.881832, lng: -87.623177 },\n  //   },\n  //   {\n  //     id: 2,\n  //     name: \"Denver, Colorado\",\n  //     position: { lat: 39.739235, lng: -104.99025 },\n  //   },\n  //   {\n  //     id: 3,\n  //     name: \"Los Angeles, California\",\n  //     position: { lat: 34.052235, lng: -118.243683 },\n  //   },\n  //   {\n  //     id: 4,\n  //     name: \"New York, New York\",\n  //     position: { lat: 40.712776, lng: -74.005974 },\n  //   },\n  // ];\n  const google = window.google;\n  const handleOnLoad = (map) => {\n    const bounds = new google.maps.LatLngBounds();\n    markers.forEach(({ position }) => bounds.extend(position));\n    map.fitBounds(bounds);\n  };\n\n  return (\n    <>\n      <Header />\n      <GoogleMap\n        onLoad={handleOnLoad}\n        onClick={() => setActiveMarker(null)}\n        mapContainerStyle={{ height: \"600px\" }}\n      >\n        {markers.map(({ id, name, position }) => (\n          <Marker\n            key={id}\n            position={position}\n            onClick={() => handleActiveMarker(id)}\n          >\n            {activeMarker === id ? (\n              <InfoWindow onCloseClick={() => setActiveMarker(null)}>\n                <div>{name}</div>\n              </InfoWindow>\n            ) : null}\n          </Marker>\n        ))}\n      </GoogleMap>\n    </>\n  );\n}\n\nexport default Map;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}