{"ast":null,"code":"import { REGISTER_SUCCESS, REGISTER_FAIL, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, SET_MESSAGE } from \"./types\";\nimport AuthService from \"../services/auth.service\";\nexport var register = function register(phone, email, password) {\n  return function (dispatch) {\n    return AuthService.register(phone, email, password).then(function (response) {\n      dispatch({\n        type: REGISTER_SUCCESS\n      });\n      dispatch({\n        type: SET_MESSAGE,\n        payload: response.data.message\n      });\n      return Promise.resolve();\n    }, function (error) {\n      var message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      dispatch({\n        type: REGISTER_FAIL\n      });\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message\n      });\n      return Promise.reject();\n    });\n  };\n};\nexport var login = function login(phone, password) {\n  return function (dispatch) {\n    return AuthService.login(phone, password).then(function (data) {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: {\n          user: data\n        }\n      });\n      return Promise.resolve();\n    }, function (error) {\n      var message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      dispatch({\n        type: LOGIN_FAIL\n      });\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message\n      });\n      return Promise.reject();\n    });\n  };\n};\nexport var logout = function logout() {\n  return function (dispatch) {\n    AuthService.logout();\n    dispatch({\n      type: LOGOUT\n    });\n  };\n};","map":{"version":3,"names":["REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SET_MESSAGE","AuthService","register","phone","email","password","dispatch","then","response","type","payload","data","message","Promise","resolve","error","toString","reject","login","user","logout"],"sources":["C:/Users/123/Documents/Easynet/argon-dashboard/src/actions/auth.js"],"sourcesContent":["import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  SET_MESSAGE,\n} from \"./types\";\n\nimport AuthService from \"../services/auth.service\";\n\nexport const register = (phone, email, password) => (dispatch) => {\n  return AuthService.register(phone, email, password).then(\n    (response) => {\n      dispatch({\n        type: REGISTER_SUCCESS,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: response.data.message,\n      });\n\n      return Promise.resolve();\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n\n      dispatch({\n        type: REGISTER_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const login = (phone, password) => (dispatch) => {\n  return AuthService.login(phone, password).then(\n    (data) => {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: { user: data },\n      });\n\n      return Promise.resolve();\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n\n      dispatch({\n        type: LOGIN_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const logout = () => (dispatch) => {\n  AuthService.logout();\n\n  dispatch({\n    type: LOGOUT,\n  });\n};\n"],"mappings":"AAAA,SACEA,gBADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,UAJF,EAKEC,MALF,EAMEC,WANF,QAOO,SAPP;AASA,OAAOC,WAAP,MAAwB,0BAAxB;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAQC,KAAR,EAAeC,QAAf;EAAA,OAA4B,UAACC,QAAD,EAAc;IAChE,OAAOL,WAAW,CAACC,QAAZ,CAAqBC,KAArB,EAA4BC,KAA5B,EAAmCC,QAAnC,EAA6CE,IAA7C,CACL,UAACC,QAAD,EAAc;MACZF,QAAQ,CAAC;QACPG,IAAI,EAAEd;MADC,CAAD,CAAR;MAIAW,QAAQ,CAAC;QACPG,IAAI,EAAET,WADC;QAEPU,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcC;MAFhB,CAAD,CAAR;MAKA,OAAOC,OAAO,CAACC,OAAR,EAAP;IACD,CAZI,EAaL,UAACC,KAAD,EAAW;MACT,IAAMH,OAAO,GACVG,KAAK,CAACP,QAAN,IACCO,KAAK,CAACP,QAAN,CAAeG,IADhB,IAECI,KAAK,CAACP,QAAN,CAAeG,IAAf,CAAoBC,OAFtB,IAGAG,KAAK,CAACH,OAHN,IAIAG,KAAK,CAACC,QAAN,EALF;MAOAV,QAAQ,CAAC;QACPG,IAAI,EAAEb;MADC,CAAD,CAAR;MAIAU,QAAQ,CAAC;QACPG,IAAI,EAAET,WADC;QAEPU,OAAO,EAAEE;MAFF,CAAD,CAAR;MAKA,OAAOC,OAAO,CAACI,MAAR,EAAP;IACD,CA/BI,CAAP;EAiCD,CAlCuB;AAAA,CAAjB;AAoCP,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACf,KAAD,EAAQE,QAAR;EAAA,OAAqB,UAACC,QAAD,EAAc;IACtD,OAAOL,WAAW,CAACiB,KAAZ,CAAkBf,KAAlB,EAAyBE,QAAzB,EAAmCE,IAAnC,CACL,UAACI,IAAD,EAAU;MACRL,QAAQ,CAAC;QACPG,IAAI,EAAEZ,aADC;QAEPa,OAAO,EAAE;UAAES,IAAI,EAAER;QAAR;MAFF,CAAD,CAAR;MAKA,OAAOE,OAAO,CAACC,OAAR,EAAP;IACD,CARI,EASL,UAACC,KAAD,EAAW;MACT,IAAMH,OAAO,GACVG,KAAK,CAACP,QAAN,IACCO,KAAK,CAACP,QAAN,CAAeG,IADhB,IAECI,KAAK,CAACP,QAAN,CAAeG,IAAf,CAAoBC,OAFtB,IAGAG,KAAK,CAACH,OAHN,IAIAG,KAAK,CAACC,QAAN,EALF;MAOAV,QAAQ,CAAC;QACPG,IAAI,EAAEX;MADC,CAAD,CAAR;MAIAQ,QAAQ,CAAC;QACPG,IAAI,EAAET,WADC;QAEPU,OAAO,EAAEE;MAFF,CAAD,CAAR;MAKA,OAAOC,OAAO,CAACI,MAAR,EAAP;IACD,CA3BI,CAAP;EA6BD,CA9BoB;AAAA,CAAd;AAgCP,OAAO,IAAMG,MAAM,GAAG,SAATA,MAAS;EAAA,OAAM,UAACd,QAAD,EAAc;IACxCL,WAAW,CAACmB,MAAZ;IAEAd,QAAQ,CAAC;MACPG,IAAI,EAAEV;IADC,CAAD,CAAR;EAGD,CANqB;AAAA,CAAf"},"metadata":{},"sourceType":"module"}