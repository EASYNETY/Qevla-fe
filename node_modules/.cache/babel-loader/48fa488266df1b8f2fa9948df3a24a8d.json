{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/123/Documents/Easynet/argon-dashboard/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/123/Documents/Easynet/argon-dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"C:/Users/123/Documents/Easynet/argon-dashboard/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\123\\\\Documents\\\\Easynet\\\\argon-dashboard\\\\src\\\\views\\\\Maps.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { GoogleMap, InfoWindow, Marker } from \"@react-google-maps/api\"; // core components\n\nimport Header from \"components/Headers/Header.js\";\nimport { endpoints } from \"../api-endpoints\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Map() {\n  _s();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeMarker = _useState2[0],\n      setActiveMarker = _useState2[1]; // let drivers = [];\n\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      drivers = _useState4[0],\n      setDrivers = _useState4[1]; // const [marker, setMarker] = useState();\n\n\n  var handleActiveMarker = function handleActiveMarker(drivers) {\n    if (drivers === activeMarker) {\n      return;\n    }\n\n    setActiveMarker(drivers);\n  };\n\n  useEffect(function () {\n    function fetchUsers() {\n      return _fetchUsers.apply(this, arguments);\n    }\n\n    function _fetchUsers() {\n      _fetchUsers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var fullResponse, responseJson, users;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(endpoints.getDrivers);\n\n              case 2:\n                fullResponse = _context.sent;\n                _context.next = 5;\n                return fullResponse.json();\n\n              case 5:\n                responseJson = _context.sent;\n                users = responseJson.users;\n                setDrivers(); // users.forEach((user) => {\n                //   setDrivers({\n                //     id: user.address.lat,\n                //     name: \"Qevla Driver\",\n                //     position: user.address,\n                //   });\n                // });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchUsers.apply(this, arguments);\n    }\n\n    fetchUsers();\n  }, []);\n  console.log(\"Created drivers>>>>>>> from headers from map markers used\", drivers);\n  var markers = [{\n    id: 1,\n    name: \"Qevla Driver\",\n    position: {\n      lat: 6.45469,\n      lng: 3.32042\n    }\n  }, {\n    id: 2,\n    name: \"Denver, Colorado\",\n    position: {\n      lat: 39.739235,\n      lng: -104.99025\n    }\n  } // ,\n  // {\n  //   id: 3,\n  //   name: \"Los Angeles, California\",\n  //   position: { lat: 34.052235, lng: -118.243683 },\n  // },\n  // {\n  //   id: 4,\n  //   name: \"New York, New York\",\n  //   position: { lat: 40.712776, lng: -74.005974 },\n  // },\n  ];\n  var google = window.google;\n\n  var handleOnLoad = function handleOnLoad(map) {\n    var bounds = new google.maps.LatLngBounds();\n    bounds.extend(drivers.position);\n    map.fitBounds(bounds);\n  }; // console.log(\"Created drivers>>>>>>> from headers from map markers\", markers);\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n      onLoad: handleOnLoad,\n      onClick: function onClick() {\n        return setActiveMarker(null);\n      },\n      mapContainerStyle: {\n        height: \"600px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Marker, {\n        position: drivers.position,\n        onClick: function onClick() {\n          return handleActiveMarker(drivers.id);\n        },\n        children: activeMarker === drivers.id ? /*#__PURE__*/_jsxDEV(InfoWindow, {\n          onCloseClick: function onCloseClick() {\n            return setActiveMarker(null);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: drivers.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this) : null\n      }, drivers.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Map, \"ppBNMYry8VJj4CcwadvT++DfFgY=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","InfoWindow","Marker","Header","endpoints","Map","activeMarker","setActiveMarker","drivers","setDrivers","handleActiveMarker","fetchUsers","fetch","getDrivers","fullResponse","json","responseJson","users","console","log","markers","id","name","position","lat","lng","google","window","handleOnLoad","map","bounds","maps","LatLngBounds","extend","fitBounds","height"],"sources":["C:/Users/123/Documents/Easynet/argon-dashboard/src/views/Maps.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { GoogleMap, InfoWindow, Marker } from \"@react-google-maps/api\";\n// core components\nimport Header from \"components/Headers/Header.js\";\nimport { endpoints } from \"../api-endpoints\";\n\nfunction Map() {\n  const [activeMarker, setActiveMarker] = useState(null);\n  // let drivers = [];\n  const [drivers, setDrivers] = useState([]);\n  // const [marker, setMarker] = useState();\n\n  const handleActiveMarker = (drivers) => {\n    if (drivers === activeMarker) {\n      return;\n    }\n    setActiveMarker(drivers);\n  };\n\n  useEffect(() => {\n    async function fetchUsers() {\n      const fullResponse = await fetch(endpoints.getDrivers);\n      const responseJson = await fullResponse.json();\n      let users = responseJson.users;\n\n      setDrivers()\n      // users.forEach((user) => {\n      //   setDrivers({\n      //     id: user.address.lat,\n      //     name: \"Qevla Driver\",\n      //     position: user.address,\n      //   });\n      // });\n    }\n\n    fetchUsers();\n  }, []);\n   console.log(\n     \"Created drivers>>>>>>> from headers from map markers used\",\n     drivers\n   );\n  const markers = [\n    {\n      id: 1,\n      name: \"Qevla Driver\",\n      position: { lat: 6.45469, lng: 3.32042 },\n    },\n\n    {\n      id: 2,\n      name: \"Denver, Colorado\",\n      position: { lat: 39.739235, lng: -104.99025 },\n    },\n    // ,\n    // {\n    //   id: 3,\n    //   name: \"Los Angeles, California\",\n    //   position: { lat: 34.052235, lng: -118.243683 },\n    // },\n    // {\n    //   id: 4,\n    //   name: \"New York, New York\",\n    //   position: { lat: 40.712776, lng: -74.005974 },\n    // },\n  ];\n  const google = window.google;\n  const handleOnLoad = (map) => {\n    const bounds = new google.maps.LatLngBounds();\n     bounds.extend(drivers.position);\n    map.fitBounds(bounds);\n  };\n  // console.log(\"Created drivers>>>>>>> from headers from map markers\", markers);\n\n  return (\n    <>\n      <Header />\n      <GoogleMap\n        onLoad={handleOnLoad}\n        onClick={() => setActiveMarker(null)}\n        mapContainerStyle={{ height: \"600px\" }}\n      >\n        {/* {drivers.map(({ id, name, position }) => ( */}\n        <Marker\n          key={drivers.id}\n          position={drivers.position}\n          onClick={() => handleActiveMarker(drivers.id)}\n        >\n          {activeMarker === drivers.id ? (\n            <InfoWindow onCloseClick={() => setActiveMarker(null)}>\n              <div>{drivers.name}</div>\n            </InfoWindow>\n          ) : null}\n        </Marker>\n        {/* ))} */}\n      </GoogleMap>\n    </>\n  );\n}\n\nexport default Map;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}