{"version":3,"sources":["variables/charts.js","assets/img/theme/team-1-800x800.jpg","assets/img/icons/common/github.svg","assets/img/icons/common/google.svg","components/Navbars/AdminNavbar.js","components/Footers/AdminFooter.js","components/Sidebar/Sidebar.js","api-endpoints.js","services/auth_service.js","utils/static.js","services/http-service-oauth.js","utils/encryptor.js","utils/tools.js","utils/ui-messages.js","services/error-handler-service.js","actions/types.js","views/Drivers.js","components/Headers/Header.js","views/Index.js","components/Headers/UserHeader.js","views/Profile.js","views/Maps.js","views/Login.js","components/Headers/DriverRegHeader.js","views/PasswordReset.js","views/PasswordResetRequest.js","routes.js","views/AddAdmin.js","views/AddDriver.js","layouts/Admin.js","components/Navbars/AuthNavbar.js","components/Footers/AuthFooter.js","layouts/Auth.js","reducers/auth.js","reducers/message.js","reducers/index.js","store.js","index.js","assets/img/brand/qevla_logo.png","assets/img/theme/team-4-800x800.jpg"],"names":["Chart","require","elements","Rectangle","prototype","draw","left","right","top","bottom","signX","signY","borderSkipped","ctx","this","_chart","vm","_view","borderWidth","horizontal","base","x","y","height","width","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","radius","lineTo","quadraticCurveTo","fill","stroke","fonts","colors","default","primary","secondary","info","success","danger","warning","chartExample1","options","scales","yAxes","gridLines","color","zeroLineColor","ticks","callback","value","tooltips","callbacks","label","item","data","datasets","datasetIndex","yLabel","content","length","data1","canvas","labels","data2","module","exports","chartOptions","defaults","global","responsive","maintainAspectRatio","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","layout","padding","legend","display","position","usePointStyle","point","line","tension","borderCapStyle","rectangle","arc","enabled","mode","intersect","doughnut","cutoutPercentage","legendCallback","chart","forEach","bgColor","scaleService","updateScaleDefaults","borderDash","borderDashOffset","drawBorder","drawTicks","zeroLineWidth","zeroLineBorderDash","zeroLineBorderDashOffset","beginAtZero","drawOnChartArea","parseOptions","parent","chartExample2","maxBarThickness","getFormValues","storedValues","localStorage","getItem","JSON","parse","email","message","name","telephone","AdminNavbar","props","React","useState","user","useEffect","stringify","console","log","Navbar","className","expand","id","Container","fluid","to","brandText","Form","FormGroup","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","placeholder","type","Nav","navbar","UncontrolledDropdown","nav","DropdownToggle","Media","alt","src","first_name","DropdownMenu","DropdownItem","header","tag","Link","divider","href","onClick","e","clear","window","location","Footer","Row","Col","xl","Date","getFullYear","rel","target","Sidebar","navbarBrandProps","collapseOpen","setCollapseOpen","toggleCollapse","closeCollapse","routes","logo","innerLink","outterLink","NavbarBrand","imgAlt","imgSrc","preventDefault","Collapse","isOpen","xs","map","prop","key","NavItem","NavLink","path","NavLinkRRD","activeClassName","icon","createLinks","defaultProps","onboardingService","process","authBaseUrl","authUrl","endpoints","addUser","concat","getDrivers","getDriverById","getAdmins","updateDriverById","getDriverRegStatus","login","adminLogin","requestResetPassword","passwordReset","authService","signup","password","axios","post","addUSer","then","response","accessToken","setItem","Token","logout","removeItem","requestPasswordReset","getCurrentUser","responseCodes","metricValues","resendTime","bvnLength","transactionPinLength","pinValidationTimeout","maxFileSize","accountNumberLength","timeToPageReloadAfterSuccess","monthlyTurnoverMinimum","monthlyTurnoverMaximum","monthlyTurnoverStep","monthlyTurnoverMultiplier","corporateCodeMinLength","usernameMinLength","taxIdLength","minRegNumberLength","minPhoneNumberLength","minCorporateCodeLength","solePropietorBusinessTypeCode","minimumTransferLimit","myOauth2Axios","origin","REACT_APP_BUILD_VERSION","sessionStorage","create","baseURL","headers","timeout","interceptors","request","use","doGet","url","_config","resData","get","handleMyErrors","doPost","requestBody","config","doPut","put","isNullOrUndefined","val","undefined","grouper","array","asObject","reduce","objectsByKeyValue","obj","responseMessage","String","REACT_APP_MAXIMUM_BENEFICIARY_COUNT","toString","err","finalErrRes","responseCode","hasError","errRes","error_description","includes","error","Error","Array","isArray","errResData","errResDataString","Object","entries","keys","values","toLowerCase","REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SET_MESSAGE","CLEAR_MESSAGE","Drivers","modalInfo","setModalInfo","setShowModal","show","setShow","drivers","setDrivers","driver","handleClose","useHistory","Search","SearchBar","handleShow","fetch","fullResponse","json","responseJson","users","fetchUsers","push","rowEvents","row","toggleTrueFalse","ModalContent","Modal","onHide","contentClassName","dialogClassName","Header","closeLabel","Button","variant","Title","last_name","Body","Card","lg","CardHeader","size","CardBody","vehicle_details","address","createdAt","v_license","htmlFor","defaultValue","md","number","max_weight","payment_details","bank_holder_name","account_number","bank_name","keyField","columns","dataField","text","pagination","paginationFactory","CardTitle","count","Index","UserHeader","style","minHeight","backgroundImage","backgroundSize","backgroundPosition","Profile","Map","activeMarker","setActiveMarker","marker","setLatlng","driverInfo","v_manufacturer","lat","google","qevLoc","maps","LatLng","onLoad","bounds","LatLngBounds","extend","fitBounds","mapContainerStyle","zoom","scrollwheel","zoomControl","styles","featureType","elementType","stylers","visibility","saturation","lightness","handleActiveMarker","onCloseClick","Login","setEmail","setPassword","navigate","handleLogin","AuthService","role","onSubmit","onChange","open","DriverRegHeader","token","userId","PasswordReset","passReq","handlePassRequest","PasswordResetRequest","component","Maps","lassName","readOnly","Admin","mainContent","useRef","useLocation","document","documentElement","scrollTop","scrollingElement","current","ref","pathname","getBrandText","from","AdminFooter","UncontrolledCollapse","toggler","Auth","body","classList","add","remove","AuthNavbar","xmlns","preserveAspectRatio","version","viewBox","points","AuthFooter","initialState","isLoggedIn","combineReducers","auth","state","action","payload","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","getElementById"],"mappings":";qHAiBA,IAAMA,EAAQC,EAAQ,IAMtBD,EAAME,SAASC,UAAUC,UAAUC,KAAO,WACxC,IAEIC,EAAMC,EAAOC,EAAKC,EAAQC,EAAOC,EAAOC,EAFxCC,EAAMC,KAAKC,OAAOF,IAClBG,EAAKF,KAAKG,MAEVC,EAAcF,EAAGE,YA2BrB,GAtBKF,EAAGG,YAWNb,EAAOU,EAAGI,KACVb,EAAQS,EAAGK,EACXb,EAAMQ,EAAGM,EAAIN,EAAGO,OAAS,EACzBd,EAASO,EAAGM,EAAIN,EAAGO,OAAS,EAC5Bb,EAAQH,EAAQD,EAAO,GAAK,EAC5BK,EAAQ,EACRC,EAAgBI,EAAGJ,eAAiB,SAfpCN,EAAOU,EAAGK,EAAIL,EAAGQ,MAAQ,EACzBjB,EAAQS,EAAGK,EAAIL,EAAGQ,MAAQ,EAC1BhB,EAAMQ,EAAGM,EAETZ,EAAQ,EACRC,GAFAF,EAASO,EAAGI,MAEKZ,EAAM,GAAK,EAC5BI,EAAgBI,EAAGJ,eAAiB,UAclCM,EAAa,CAEf,IAAIO,EAAUC,KAAKC,IAAID,KAAKE,IAAItB,EAAOC,GAAQmB,KAAKE,IAAIpB,EAAMC,IAE1DoB,GADJX,EAAcA,EAAcO,EAAUA,EAAUP,GACjB,EAE3BY,EAAaxB,GAA0B,SAAlBM,EAA2BiB,EAAanB,EAAQ,GACrEqB,EACFxB,GAA2B,UAAlBK,GAA6BiB,EAAanB,EAAQ,GACzDsB,EAAYxB,GAAyB,QAAlBI,EAA0BiB,EAAalB,EAAQ,GAClEsB,EACFxB,GAA4B,WAAlBG,GAA8BiB,EAAalB,EAAQ,GAE3DmB,IAAeC,IACjBvB,EAAMwB,EACNvB,EAASwB,GAGPD,IAAcC,IAChB3B,EAAOwB,EACPvB,EAAQwB,EAEX,CAEDlB,EAAIqB,YACJrB,EAAIsB,UAAYnB,EAAGoB,gBACnBvB,EAAIwB,YAAcrB,EAAGsB,YACrBzB,EAAI0B,UAAYrB,EAKhB,IAAIsB,EAAU,CACZ,CAAClC,EAAMG,GACP,CAACH,EAAME,GACP,CAACD,EAAOC,GACR,CAACD,EAAOE,IAKNgC,EADU,CAAC,SAAU,OAAQ,MAAO,SACdC,QAAQ9B,EAAe,GAKjD,SAAS+B,EAASC,GAChB,OAAOJ,GAASC,EAAcG,GAAS,EACxC,EANoB,IAAjBH,IACFA,EAAc,GAQhB,IAAII,EAASF,EAAS,GACtB9B,EAAIiC,OAAOD,EAAO,GAAIA,EAAO,IAE7B,IAAK,IAAIE,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1BF,EAASF,EAASI,GAClB,IAAIC,EAAeD,EAAI,EACF,IAAjBC,IACFA,EAAe,GAKjB,IAKIC,EALAzB,EAAQgB,EAAQ,GAAG,GAAKA,EAAQ,GAAG,GACnCjB,EAASiB,EAAQ,GAAG,GAAKA,EAAQ,GAAG,GACpCnB,EAAImB,EAAQ,GAAG,GACflB,EAAIkB,EAAQ,GAAG,IAEfS,EA5Fa,GA+FJ1B,EAAS,IACpB0B,EAAS1B,EAAS,GAEhB0B,EAASzB,EAAQ,IACnByB,EAASzB,EAAQ,GAGnBX,EAAIiC,OAAOzB,EAAI4B,EAAQ3B,GACvBT,EAAIqC,OAAO7B,EAAIG,EAAQyB,EAAQ3B,GAC/BT,EAAIsC,iBAAiB9B,EAAIG,EAAOF,EAAGD,EAAIG,EAAOF,EAAI2B,GAClDpC,EAAIqC,OAAO7B,EAAIG,EAAOF,EAAIC,EAAS0B,GACnCpC,EAAIsC,iBAAiB9B,EAAIG,EAAOF,EAAIC,EAAQF,EAAIG,EAAQyB,EAAQ3B,EAAIC,GACpEV,EAAIqC,OAAO7B,EAAI4B,EAAQ3B,EAAIC,GAC3BV,EAAIsC,iBAAiB9B,EAAGC,EAAIC,EAAQF,EAAGC,EAAIC,EAAS0B,GACpDpC,EAAIqC,OAAO7B,EAAGC,EAAI2B,GAClBpC,EAAIsC,iBAAiB9B,EAAGC,EAAGD,EAAI4B,EAAQ3B,EACxC,CAEDT,EAAIuC,OACAlC,GACFL,EAAIwC,QAEP,EAED,IACIC,EACI,YAIJC,EACI,CACJ,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,WAVLA,EAYK,CACLC,QAAS,UACTC,QAAS,UACTC,UAAW,UACXC,KAAM,UACNC,QAAS,UACTC,OAAQ,UACRC,QAAS,WAnBTP,EAsBK,UAtBLA,EAuBW,cAmIf,IAAIQ,EAAgB,CAClBC,QAAS,CACPC,OAAQ,CACNC,MAAO,CACL,CACEC,UAAW,CACTC,MAAOb,EAAY,KACnBc,cAAed,EAAY,MAE7Be,MAAO,CACLC,SAAU,SAAUC,GAClB,KAAMA,EAAQ,IACZ,MAAO,IAAMA,EAAQ,GAExB,MAKTC,SAAU,CACRC,UAAW,CACTC,MAAO,SAAUC,EAAMC,GACrB,IAAIF,EAAQE,EAAKC,SAASF,EAAKG,cAAcJ,OAAS,GAClDK,EAASJ,EAAKI,OACdC,EAAU,GAOd,OALIJ,EAAKC,SAASI,OAAS,IACzBD,GAAWN,GAGbM,GAAW,IAAMD,EAAS,GAE3B,KAIPG,MAAO,SAACC,GACN,MAAO,CACLC,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC1DP,SAAU,CACR,CACEH,MAAO,cACPE,KAAM,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAI7C,EACDS,MAAO,SAACF,GACN,MAAO,CACLC,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC1DP,SAAU,CACR,CACEH,MAAO,cACPE,KAAM,CAAC,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,MAI5C,GA+CHU,EAAOC,QAAU,CACfC,aAtOF,WAEE,IAAIzB,EAAU,CACZ0B,SAAU,CACRC,OAAQ,CACNC,YAAY,EACZC,qBAAqB,EACrBC,aAAmDvC,EAAY,KAC/DwC,iBAAuDxC,EAAY,KACnEyC,kBAAmB1C,EACnB2C,gBAAiB,GACjBC,OAAQ,CACNC,QAAS,GAEXC,OAAQ,CACNC,SAAS,EACTC,SAAU,SACVjB,OAAQ,CACNkB,eAAe,EACfJ,QAAS,KAGbjG,SAAU,CACRsG,MAAO,CACLvD,OAAQ,EACRb,gBAAiBmB,EAAA,SAEnBkD,KAAM,CACJC,QAAS,GACTxF,YAAa,EACboB,YAAaiB,EAAA,QACbnB,gBAAiBmB,EACjBoD,eAAgB,WAElBC,UAAW,CACTxE,gBAAiBmB,EAAA,SAEnBsD,IAAK,CACHzE,gBAAiBmB,EAAA,QACjBjB,YAAkDiB,EAClDrC,YAAa,IAGjBuD,SAAU,CACRqC,SAAS,EACTC,KAAM,QACNC,WAAW,IAGfC,SAAU,CACRC,iBAAkB,GAClBC,eAAgB,SAAUC,GACxB,IAAIvC,EAAOuC,EAAMvC,KACbI,EAAU,GAcd,OAZAJ,EAAKQ,OAAOgC,SAAQ,SAAU1C,EAAO/B,GACnC,IAAI0E,EAAUzC,EAAKC,SAAS,GAAG1C,gBAAgBQ,GAE/CqC,GAAW,mCACXA,GACE,8DACAqC,EACA,SACFrC,GAAWN,EACXM,GAAW,SACZ,IAEMA,CACR,KA0CP,OApCAjF,EAAMuH,aAAaC,oBAAoB,SAAU,CAC/CrD,UAAW,CACTsD,WAAY,CAAC,GACbC,iBAAkB,CAAC,GACnBtD,MAA4Cb,EAAY,KACxDoE,YAAY,EACZC,WAAW,EACXrF,UAAW,EACXsF,cAAe,EACfxD,cAAoDd,EAAY,KAChEuE,mBAAoB,CAAC,GACrBC,yBAA0B,CAAC,IAE7BzD,MAAO,CACL0D,aAAa,EACb7B,QAAS,GACT5B,SAAU,SAAUC,GAClB,KAAMA,EAAQ,IACZ,OAAOA,CAEV,KAKLxE,EAAMuH,aAAaC,oBAAoB,WAAY,CACjDrD,UAAW,CACTwD,YAAY,EACZM,iBAAiB,EACjBL,WAAW,GAEbtD,MAAO,CACL6B,QAAS,MAINnC,CACR,EAwHCkE,aArHF,SAASA,EAAaC,EAAQnE,GAC5B,IAAK,IAAIY,KAAQZ,EACc,kBAAlBA,EAAQY,GACjBuD,EAAOvD,GAAQZ,EAAQY,GAEvBsD,EAAaC,EAAOvD,GAAOZ,EAAQY,GAGxC,EA8GCb,gBACAqE,cA/CkB,CAClBpE,QAAS,CACPC,OAAQ,CACNC,MAAO,CACL,CACEI,MAAO,CACLC,SAAU,SAAUC,GAClB,KAAMA,EAAQ,IAEZ,OAAOA,CAEV,MAKTC,SAAU,CACRC,UAAW,CACTC,MAAO,SAAUC,EAAMC,GACrB,IAAIF,EAAQE,EAAKC,SAASF,EAAKG,cAAcJ,OAAS,GAClDK,EAASJ,EAAKI,OACdC,EAAU,GAKd,OAJIJ,EAAKC,SAASI,OAAS,IACzBD,GAAWN,GAEbM,GAAWD,CAEZ,KAIPH,KAAM,CACJQ,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,OAC5CP,SAAU,CACR,CACEH,MAAO,QACPE,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAC3BwD,gBAAiB,O,+ECvZzB,OAAe,cAA0B,0C,yDCAzC,OAAe,cAA0B,kC,mCCAzC,OAAe,cAA0B,kC,gRCoBvC,SAASC,IACP,IAAMC,EAAeC,aAAaC,QAAQ,QAC1C,OAAKF,EAOEG,KAAKC,MAAMJ,GANT,CACLK,MAAO,GACPC,QAAS,GACTC,KAAM,GACNC,UAAW,GAGhB,CAEH,IA0FeC,EA1FK,SAACC,GACnB,MAAwBC,IAAMC,SAASb,GAAvC,mBAAOc,EAAP,UAGEF,IAAMG,WAAU,WACdb,aAAaC,QAAQ,OAAQC,KAAKY,UAAUF,GAC7C,GAAE,CAACA,IAEJG,QAAQC,IAAI,YAAaJ,GAM3B,OACE,mCACE,cAACK,EAAA,EAAD,CAAQC,UAAU,yBAAyBC,OAAO,KAAKC,GAAG,cAA1D,SACE,eAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACE,cAAC,IAAD,CACEJ,UAAU,6DACVK,GAAG,IAFL,SAIGd,EAAMe,YAET,cAACC,EAAA,EAAD,CAAMP,UAAU,gFAAhB,SACE,cAACQ,EAAA,EAAD,CAAWR,UAAU,OAArB,SACE,eAACS,EAAA,EAAD,CAAYT,UAAU,0BAAtB,UACE,cAACU,EAAA,EAAD,CAAiBC,UAAU,UAA3B,SACE,cAACC,EAAA,EAAD,UACE,mBAAGZ,UAAU,sBAGjB,cAACa,EAAA,EAAD,CAAOC,YAAY,SAASC,KAAK,gBAIvC,cAACC,EAAA,EAAD,CAAKhB,UAAU,sCAAsCiB,QAAM,EAA3D,SACE,eAACC,EAAA,EAAD,CAAsBC,KAAG,EAAzB,UACE,cAACC,EAAA,EAAD,CAAgBpB,UAAU,OAAOmB,KAAG,EAApC,SACE,eAACE,EAAA,EAAD,CAAOrB,UAAU,qBAAjB,UACE,sBAAMA,UAAU,kCAAhB,SACE,qBACEsB,IAAI,MACJC,IACEhL,EAAQ,IACLuD,YAIT,cAACuH,EAAA,EAAD,CAAOrB,UAAU,yBAAjB,SACE,sBAAMA,UAAU,gCAAhB,SACGN,EAAK8B,oBAKd,eAACC,EAAA,EAAD,CAAczB,UAAU,sBAAsBnJ,OAAK,EAAnD,UACE,cAAC6K,EAAA,EAAD,CAAc1B,UAAU,aAAa2B,QAAM,EAACC,IAAI,MAAhD,SACE,oBAAI5B,UAAU,oBAAd,wBAEF,eAAC0B,EAAA,EAAD,CAAcrB,GAAG,sBAAsBuB,IAAKC,IAA5C,UACE,mBAAG7B,UAAU,oBACb,iDAEF,eAAC0B,EAAA,EAAD,CAAcrB,GAAG,sBAAsBuB,IAAKC,IAA5C,UACE,mBAAG7B,UAAU,2BACb,+CAEF,eAAC0B,EAAA,EAAD,CAAcrB,GAAG,sBAAsBuB,IAAKC,IAA5C,UACE,mBAAG7B,UAAU,2BACb,+CAEF,eAAC0B,EAAA,EAAD,CAAcrB,GAAG,sBAAsBuB,IAAKC,IAA5C,UACE,mBAAG7B,UAAU,qBACb,8CAEF,cAAC0B,EAAA,EAAD,CAAcI,SAAO,IACrB,eAACJ,EAAA,EAAD,CAAcK,KAAK,SAASC,QAAS,SAACC,GAAD,OAlE7CnD,aAAaoD,aACbC,OAAOC,SAASL,KAAO,IAiEsB,EAArC,UACE,mBAAG/B,UAAU,mBACb,2DASjB,E,kBC/FcqC,EAtBA,WACb,OACE,wBAAQrC,UAAU,SAAlB,SACE,cAACsC,EAAA,EAAD,CAAKtC,UAAU,gDAAf,SACE,cAACuC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACE,sBAAKxC,UAAU,gDAAf,mBACK,IAAIyC,MAAOC,cAAe,IAC7B,mBACE1C,UAAU,wBACV+B,KAAK,GACLY,IAAI,sBACJC,OAAO,SAJT,+BAaX,E,oCCiBKC,EAAU,SAACtD,GACf,IAiCIuD,EAjCJ,EAAwCrD,qBAAxC,mBAAOsD,EAAP,KAAqBC,EAArB,KAMMC,EAAiB,WACrBD,GAAgB,SAAC7H,GAAD,OAAWA,CAAX,GACjB,EAEK+H,EAAgB,WACpBF,GAAgB,EACjB,EAoBgBG,GAAiB5D,EAA1B3B,QAA0B2B,EAAjB4D,QAAQC,EAAS7D,EAAT6D,KAczB,OAZIA,GAAQA,EAAKC,UACfP,EAAmB,CACjBzC,GAAI+C,EAAKC,UACTzB,IAAKC,KAEEuB,GAAQA,EAAKE,aACtBR,EAAmB,CACjBf,KAAMqB,EAAKE,WACXV,OAAQ,WAKV,cAAC7C,EAAA,EAAD,CACEC,UAAU,mDACVC,OAAO,KACPC,GAAG,eAHL,SAKE,eAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,UAEE,wBACEJ,UAAU,iBACVe,KAAK,SACLiB,QAASiB,EAHX,SAKE,sBAAMjD,UAAU,0BAGjBoD,EACC,cAACG,EAAA,EAAD,yBAAavD,UAAU,QAAW8C,GAAlC,aACE,qBACExB,IAAK8B,EAAKI,OACVxD,UAAU,mBACVuB,IAAK6B,EAAKK,YAGZ,KAEJ,eAACzC,EAAA,EAAD,CAAKhB,UAAU,+BAAf,UACE,eAACkB,EAAA,EAAD,CAAsBC,KAAG,EAAzB,UACE,cAACC,EAAA,EAAD,CAAgBD,KAAG,EAACnB,UAAU,gBAA9B,SACE,mBAAGA,UAAU,oBAEf,eAACyB,EAAA,EAAD,CACE,kBAAgB,4BAChBzB,UAAU,sBACVnJ,OAAK,EAHP,UAKE,cAAC6K,EAAA,EAAD,qBACA,cAACA,EAAA,EAAD,6BACA,cAACA,EAAA,EAAD,CAAcI,SAAO,IACrB,cAACJ,EAAA,EAAD,wCAGJ,eAACR,EAAA,EAAD,CAAsBC,KAAG,EAAzB,UACE,cAACC,EAAA,EAAD,CAAgBD,KAAG,EAAnB,SACE,cAACE,EAAA,EAAD,CAAOrB,UAAU,qBAAjB,SACE,sBAAMA,UAAU,kCAAhB,SACE,qBACEsB,IAAI,MACJC,IACEhL,EAAQ,KACLuD,gBAMb,eAAC2H,EAAA,EAAD,CAAczB,UAAU,sBAAsBnJ,OAAK,EAAnD,UACE,cAAC6K,EAAA,EAAD,CAAc1B,UAAU,aAAa2B,QAAM,EAACC,IAAI,MAAhD,SACE,oBAAI5B,UAAU,oBAAd,wBAEF,eAAC0B,EAAA,EAAD,CAAcrB,GAAG,sBAAsBuB,IAAKC,IAA5C,UACE,mBAAG7B,UAAU,oBACb,iDAEF,eAAC0B,EAAA,EAAD,CAAcrB,GAAG,sBAAsBuB,IAAKC,IAA5C,UACE,mBAAG7B,UAAU,2BACb,+CAEF,eAAC0B,EAAA,EAAD,CAAcrB,GAAG,sBAAsBuB,IAAKC,IAA5C,UACE,mBAAG7B,UAAU,2BACb,+CAEF,eAAC0B,EAAA,EAAD,CAAcrB,GAAG,sBAAsBuB,IAAKC,IAA5C,UACE,mBAAG7B,UAAU,qBACb,8CAEF,cAAC0B,EAAA,EAAD,CAAcI,SAAO,IACrB,eAACJ,EAAA,EAAD,CAAcK,KAAK,SAASC,QAAS,SAACC,GAAD,OAAOA,EAAEyB,gBAAT,EAArC,UACE,mBAAG1D,UAAU,mBACb,sDAMR,eAAC2D,EAAA,EAAD,CAAU1C,QAAM,EAAC2C,OAAQb,EAAzB,UAEE,qBAAK/C,UAAU,mCAAf,SACE,eAACsC,EAAA,EAAD,WACGc,EACC,cAACb,EAAA,EAAD,CAAKvC,UAAU,iBAAiB6D,GAAG,IAAnC,SACGT,EAAKC,UACJ,cAAC,IAAD,CAAMhD,GAAI+C,EAAKC,UAAf,SACE,qBAAK/B,IAAK8B,EAAKI,OAAQjC,IAAK6B,EAAKK,WAGnC,mBAAG1B,KAAMqB,EAAKE,WAAd,SACE,qBAAKhC,IAAK8B,EAAKI,OAAQjC,IAAK6B,EAAKK,aAIrC,KACJ,cAAClB,EAAA,EAAD,CAAKvC,UAAU,iBAAiB6D,GAAG,IAAnC,SACE,yBACE7D,UAAU,iBACVe,KAAK,SACLiB,QAASiB,EAHX,UAKE,yBACA,mCAMR,cAAC1C,EAAA,EAAD,CAAMP,UAAU,sBAAhB,SACE,eAACS,EAAA,EAAD,CAAYT,UAAU,wCAAtB,UACE,cAACa,EAAA,EAAD,CACE,aAAW,SACXb,UAAU,8CACVc,YAAY,SACZC,KAAK,WAEP,cAACL,EAAA,EAAD,CAAiBC,UAAU,UAA3B,SACE,cAACC,EAAA,EAAD,UACE,sBAAMZ,UAAU,0BAMxB,cAACgB,EAAA,EAAD,CAAKC,QAAM,EAAX,SAnKY,SAACkC,GACnB,OAAOA,EAAOW,KAAI,SAACC,EAAMC,GACvB,OACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CACE7D,GAAI0D,EAAKvH,OAASuH,EAAKI,KACvBvC,IAAKwC,IACLpC,QAASkB,EACTmB,gBAAgB,SAJlB,UAME,mBAAGrE,UAAW+D,EAAKO,OAClBP,EAAK3E,SARI4E,EAYjB,GACF,CAmJoBO,CAAYpB,KAEzB,oBAAInD,UAAU,gBAMvB,EAED6C,EAAQ2B,aAAe,CACrBrB,OAAQ,CAAC,CAAC,IAoBGN,Q,kDCzPF4B,EAAiB,UAAMC,4CAAN,aACjBC,EAAW,UAAMD,4CAAN,aACXE,EAAO,UAAMF,4CAAN,aAKPG,EAAY,CAEvBC,QAASL,EAAkBM,OAAlB,WACTC,WAAYP,EAAkBM,OAAlB,YACZE,cAAeR,EAAkBM,OAAlB,QACfG,UAAWT,EAAkBM,OAAlB,YAEXI,iBAAkBV,EAAkBM,OAAlB,eAElBK,mBAAoBX,EAAkBM,OAAlB,mBAGpBM,MAAOV,EAAYI,OAAZ,UACPO,WAAYX,EAAYI,OAAZ,gBACZQ,qBAAsBX,EAAQG,OAAR,yBACtBS,cAAeZ,EAAQG,OAAR,oBC0DFU,EARK,CAClBC,OApEa,SAACxG,EAAOyG,GACrB,OAAOC,IACJC,KAAKhB,EAAUiB,QAAS,CACvB5G,QACAyG,aAEDI,MAAK,SAACC,GAKL,OAJIA,EAAS7K,KAAK8K,aAChBnH,aAAaoH,QAAQ,OAAQlH,KAAKY,UAAUoG,EAAS7K,OAGhD6K,EAAS7K,IACjB,GACJ,EAwDCkK,MAtDY,SAACnG,EAAOyG,GACpB,OAAOC,IACJC,KAAKhB,EAAUS,WAAY,CAC1BpG,QACAyG,aAEDI,MAAK,SAACC,GAKL,OAJIA,EAAS7K,KAAKgL,OAChBhE,OAAOrD,aAAaoH,QAAQ,OAAQlH,KAAKY,UAAUoG,EAAS7K,KAAKuE,OAEnEG,QAAQC,IAAIkG,EAAS7K,KAAKuE,MACnBsG,EAAS7K,IACjB,GACJ,EA0CCiL,OAXa,WACbtH,aAAauH,WAAW,OACzB,EAUCC,qBAzC2B,SAACpH,GAC5B,OAAO0G,IACJC,KAAKhB,EAAUU,qBAAsB,CACpCrG,UAED6G,MAAK,SAACC,GAKL,OAJIA,EAAS7K,MACXgH,OAAOrD,aAAaoH,QAAQ,UAAWlH,KAAKY,UAAUoG,EAAS7K,OAEjE0E,QAAQC,IAAIkG,EAAS7K,MACd6K,EAAS7K,IACjB,GACJ,EA8BCoL,eATqB,WACrB,OAAOvH,KAAKC,MAAMH,aAAaC,QAAQ,QACxC,G,oDC8SYyH,EAIE,MAJFA,EAKG,MALHA,GAMI,gBANJA,GAOU,MAPVA,GAQM,kBARNA,GASK,iBATLA,GAUI,gBAVJA,GAWK,MA6CLC,GAAe,CAC1BC,WAAY,GACZlL,OAAQ,EACRmL,UAAW,GACXC,qBAAsB,EACtBC,qBAAsB,IACtBC,YAAa,IACbC,oBAAqB,GACrBC,6BAA8B,IAC9BC,uBAAwB,EACxBC,uBAAwB,IACxBC,oBAAqB,GACrBC,0BAA2B,IAC3BC,uBAAwB,EACxBC,kBAAmB,EACnBC,YAAa,GACbC,mBAAoB,EACpBC,qBAAsB,GACtBC,uBAAwB,EACxBC,8BAA+B,IAC/BC,qBAAsB,GClblBC,IDqbiB1F,OAAOC,SAAS0F,OAG5BpD,0NAAYqD,wB,aEtcOC,e,oBDcOpC,IAAMqC,OAAO,CAChDC,QAAS,MAEXL,GAAc7L,SAASmM,QAAQtC,KAAK,gBAAkB,mBACtDgC,GAAc7L,SAASmM,QAAQtC,KAA/B,OAAgD,mBAChDgC,GAAc7L,SAASoM,QAAU,KACjCP,GAAcQ,aAAaC,QAAQC,KAAI,SAACD,GACtC,OAAOA,CACR,IA0BM,IA+CDE,GAAK,iDAAG,WAAOC,EAAaC,GAApB,4FACRC,EAAe,CAAC,EADR,kBAMad,GAAce,IAAIH,GAN/B,uBAMFtN,EANE,EAMFA,KANE,kBAOHA,GAPG,gCASVwN,EAAUE,GAAe,EAAD,IATd,iCAWLF,GAXK,yDAAH,wDAcLG,GAAM,iDAAG,WAAOL,EAAaM,GAApB,0GAAsCC,EAAtC,+BAAoD,CAAC,EAArD,kBAIYnB,GAAchC,KAAK4C,EAAKM,EAAaC,GAJjD,uBAIH7N,EAJG,EAIHA,KAJG,kBAKJA,GALI,gCAOXwN,EAAUE,GAAe,EAAD,IAPb,iCASNF,GATM,yDAAH,wDAYNM,GAAK,iDAAG,WAAOR,EAAaM,GAApB,0GAAsCC,EAAtC,+BAAoD,CAAC,EAArD,kBAIanB,GAAcqB,IAAIT,EAAKM,EAAaC,GAJjD,uBAIF7N,EAJE,EAIFA,KAJE,kBAKHA,GALG,gCAOVwN,EAAUE,GAAe,EAAD,IAPd,iCASLF,GATK,yDAAH,wDEuCEQ,IF1BFvD,IE0BsB,SAACwD,GAChC,OAAe,OAARA,QAAwBC,IAARD,GAAqBA,IAAQ,CAAC,CACtD,GA0HYE,GACX,SAACtF,GAAD,OACE,SAACuF,GAAD,IAAeC,EAAf,uDAA0B,CAAC,EAA3B,OACED,EAAME,QAAO,SAACC,EAAmBC,GAC/B,IAAM7O,EAAQ6O,EAAI3F,GAElB,OADA0F,EAAkB5O,IAAU4O,EAAkB5O,IAAU,IAAIiK,OAAO4E,GAC5DD,CACR,GAAEF,EALL,CADF,EC3RWI,IDmSgBN,GAAQ,kBACCA,GAAQ,oBCnS7B,uDADJM,GAaE,0DAbFA,IAciB,6BAA6B7E,OACvD8E,OAAOnF,0NAAYoF,qCACnB,kBAyCa,yDAzDJF,GA+FT,4DA/FSA,GA6GM,0DC1GNf,IDwHT,oDAAoD9D,OAClD0B,GAAae,mBAAmBuC,WAChC,eC1HwB,SAACC,GAC7B,IFsEuB9O,EEtEnB+O,EAA4B,CAC9BC,aAAc,GACd/O,KAAM,CAAC,EACPgP,UAAU,GAEZ,IAAK,IAAD,YACIC,EAAM,UAAGJ,EAAIhE,gBAAP,aAAG,EAAc7K,KAC7B,IACGgO,GAAkBiB,IAAnB,UACAA,EAAOC,yBADP,OACA,EAA0BN,WAAWO,SAAS,0BAE9CL,EAAW,2BACNA,GADM,IAETC,aAAc1D,SAEX,KACJ2C,GAAkBiB,IAAnB,UACAA,EAAOG,aADP,OACA,EAAcR,WAAWO,SAAS,iBAOlC,MALAL,EAAW,2BACNA,GADM,IAETC,aAAc1D,GACdrL,KAAMyO,KAEF,IAAIY,MAAMX,OAAOI,IAClB,IACJd,GAAkBiB,IAAnB,UACAA,EAAOG,aADP,OACA,EAAcR,WAAWO,SAAS,iBAOlC,MALAL,EAAW,2BACNA,GADM,IAETC,aAAc1D,GACdrL,KAAMyO,KAEF,IAAIY,MAAMX,OAAOI,IAClB,aAAID,EAAI7K,eAAR,OAAI,EAAamL,SAAS,OAC/BL,EAAW,2BACNA,GADM,IAET9O,KAAMyO,GACNM,aAAc1D,SAGX,aAAIwD,EAAI7K,eAAR,OAAI,EAAamL,SAAS,OAC/BL,EAAW,2BACNA,GADM,IAETC,aAAc1D,GACdrL,KAAM,+DAEH,GAAKgO,GAAiB,OAACa,QAAD,IAACA,OAAD,EAACA,EAAKhE,YFwBnB,kBAFK9K,EEtBmC,OAAC8O,QAAD,IAACA,OAAD,EAACA,EAAKhE,WFyB7DyE,MAAMC,QAAQxP,IACN,OAATA,QACSmO,IAATnO,GEJE+O,EAAW,2BACNA,GADM,IAETC,aAAc1D,GACdrL,KAAM6O,EAAI7K,cA1B2D,CAGvE,IAHwE,IAAD,EACnEwL,EAAaX,EAAIhE,SAAS7K,MAAQ,CAAC,EACnCyP,EAAmB,GACvB,MAA6BC,OAAOC,QAAQH,GAA5C,eAAyD,CAApD,0BAAOI,EAAP,KAAaC,EAAb,KACHJ,GAA6B,iBAATG,EAA0BC,EAAS,QAAU,EAClE,CAECf,EADEW,EAAiBN,SAAS,uBACjB,2BACNL,GADM,IAETC,aAAc1D,GACdrL,KAAMyO,KAGG,2BACNK,GADM,IAETC,aAAc1D,EACdrL,KACEgO,GAAkByB,IAAlB,UACAA,SADA,OACA,EAAkBK,cAAcX,SAAS,eACrCV,GACAgB,GAEX,CAMA,CAOF,CANC,MAAOZ,GACPC,EAAW,2BACNA,GADM,IAETC,aAAc1D,KAEhB3G,QAAQC,IAAI,wCAAyCkK,EACtD,CACD,OAAOC,CACR,GC8EYiB,GAAmB,mBACnBC,GAAgB,gBAChBC,GAAgB,gBAChBC,GAAa,aACbC,GAAS,SAETC,GAAc,cACdC,GAAgB,gB,oHC+XdC,GAphBC,WACd,MAAkChM,mBAAS,IAA3C,mBAAOiM,EAAP,KAAkBC,EAAlB,KACA,EAAkClM,oBAAS,GAA3C,mBAAkBmM,GAAlB,WACA,EAAwBnM,oBAAS,GAAjC,mBAAOoM,EAAP,KAAaC,EAAb,KACA,EAA0BrM,qBAA1B,mBACA,GADA,UAC8BA,mBAAS,KAAvC,mBAAOsM,EAAP,KAAgBC,EAAhB,KACMC,EAAS,GAKTC,GAJWC,cAEKC,UAAdC,UAEY,kBAAMP,GAAQ,EAAd,GACdQ,EAAa,kBAAMR,GAAQ,EAAd,EAEnBnM,qBAAU,WAAM,sDACd,gHAC6B4M,MAAM1H,EAAUG,YAD7C,cACQwH,EADR,gBAE6BA,EAAaC,OAF1C,OAEQC,EAFR,OAGEV,EAAWU,EAAaC,OAH1B,4CADc,uBAAC,WAAD,wBAMdC,EACD,GAAE,IAEHb,EAAQpO,SAAQ,SAAC+B,GACfuM,EAAOY,KAAKnN,EACb,IAEDG,QAAQC,IACN,4DACAmM,GAIF,IAAMa,EAAY,CAChB9K,QAAS,SAACC,EAAG8K,GACXlN,QAAQC,IAAI,gBAAiBiN,GAC7BpB,EAAaoB,GACbC,GACD,GAGGA,EAAkB,WACtBpB,EAAaU,EACd,EA+BGW,EAAe,WACnB,OACE,eAACC,GAAA,EAAD,CACErB,KAAMA,EACNsB,OAAQjB,EACRlM,UAAU,cACVoN,iBAAiB,qBACjBC,gBAAgB,cAChB,kBAAgB,qCANlB,UAQE,eAACH,GAAA,EAAMI,OAAP,CAAcC,WAAW,IAAzB,UACE,cAACC,GAAA,EAAD,CAAQC,QAAQ,YAAYzL,QAASkK,EAArC,mBAGA,eAACgB,GAAA,EAAMQ,MAAP,WACGhC,EAAUlK,WADb,IAC0BkK,EAAUiC,gBAGtC,cAACT,GAAA,EAAMU,KAAP,UACE,cAACzN,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,eAACkC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKvC,UAAU,0BAA0BwC,GAAG,IAA5C,SACE,eAACqL,EAAA,EAAD,CAAM7N,UAAU,sBAAhB,UACE,cAACsC,EAAA,EAAD,CAAKtC,UAAU,yBAAf,SACE,cAACuC,EAAA,EAAD,CAAKvC,UAAU,aAAa8N,GAAG,IAA/B,SACE,qBAAK9N,UAAU,qBAAf,SACE,mBAAG+B,KAAK,SAASC,QAAS,SAACC,GAAD,OAAOA,EAAEyB,gBAAT,EAA1B,SACE,qBACEpC,IAAI,MACJtB,UAAU,iBACVuB,IACEhL,EAAQ,IACLuD,kBAOf,cAACiU,GAAA,EAAD,CAAY/N,UAAU,iDAAtB,SACE,sBAAKA,UAAU,iCAAf,UACE,cAACwN,GAAA,EAAD,CACExN,UAAU,OACVtF,MAAM,OACNqH,KAAK,SACLC,QAAS,SAACC,GAAD,OAAOA,EAAEyB,gBAAT,EACTsK,KAAK,OAIP,cAACR,GAAA,EAAD,CACExN,UAAU,cACVtF,MAAM,UACNqH,KAAK,SACLC,QAAS,SAACC,GAAD,OAAOA,EAAEyB,gBAAT,EACTsK,KAAK,YAMX,eAACC,EAAA,EAAD,CAAUjO,UAAU,eAApB,UACE,cAACsC,EAAA,EAAD,UACE,qBAAKtC,UAAU,MAAf,SACE,sBAAKA,UAAU,2DAAf,UACE,gCACE,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,cAAhB,2BAEF,gCACE,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,cAAhB,kCAEF,gCACE,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,cAAhB,iDAOR,sBAAKA,UAAU,cAAf,UACE,+BACG0L,EAAUlK,WADb,IAC0BkK,EAAUiC,UAClC,sBAAM3N,UAAU,yBAElB,sBAAKA,UAAU,qBAAf,UACE,mBAAGA,UAAU,yBADf,mBAEmB,IACjB,4BAAI0L,EAAUwC,gBAAgBC,aAGhC,oBAAInO,UAAU,SACd,8BACG0L,EAAUlK,WADb,wBACyC,IACtCkK,EAAU0C,UAFb,iBAEsC,IACpC,4BAAI1C,EAAUwC,gBAAgBG,0BAMxC,cAAC9L,EAAA,EAAD,CAAKvC,UAAU,aAAawC,GAAG,IAA/B,SACE,eAACqL,EAAA,EAAD,CAAM7N,UAAU,sBAAhB,UACE,cAAC+N,GAAA,EAAD,CAAY/N,UAAU,oBAAtB,SACE,eAACsC,EAAA,EAAD,CAAKtC,UAAU,qBAAf,UACE,cAACuC,EAAA,EAAD,CAAKsB,GAAG,IAAR,SACE,oBAAI7D,UAAU,OAAd,0BAEF,cAACuC,EAAA,EAAD,CAAKvC,UAAU,aAAa6D,GAAG,IAA/B,SACE,cAAC2J,GAAA,EAAD,CACE9S,MAAM,UACNqH,KAAK,SACLC,QAAS,SAACC,GAAD,OAAOA,EAAEyB,gBAAT,EACTsK,KAAK,KAJP,6BAWN,cAACC,EAAA,EAAD,UACE,eAAC1N,EAAA,EAAD,WACE,oBAAIP,UAAU,gCAAd,8BAGA,sBAAKA,UAAU,UAAf,UACE,eAACsC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKuL,GAAG,IAAR,SACE,eAACtN,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,iBAFV,sBAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVuO,aAAc7C,EAAUlK,WACxBtB,GAAG,iBACHY,YAAY,WAEZC,KAAK,cAIX,cAACwB,EAAA,EAAD,CAAKuL,GAAG,IAAR,SACE,eAACtN,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,cAFV,2BAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVE,GAAG,cACHY,YAAa4K,EAAUxM,MAEvB6B,KAAK,kBAKb,eAACuB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKuL,GAAG,IAAR,SACE,eAACtN,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,mBAFV,wBAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVuO,aAAc7C,EAAUlK,WACxBtB,GAAG,mBACHY,YAAY,aAEZC,KAAK,cAIX,cAACwB,EAAA,EAAD,CAAKuL,GAAG,IAAR,SACE,eAACtN,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,kBAFV,uBAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVuO,aAAc7C,EAAUiC,UACxBzN,GAAG,kBACHY,YAAY,YAEZC,KAAK,oBAMf,oBAAIf,UAAU,SACd,oBAAIA,UAAU,gCAAd,iCAGA,sBAAKA,UAAU,UAAf,UACE,cAACsC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKiM,GAAG,KAAR,SACE,eAAChO,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,gBAFV,qBAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVuO,aAAc7C,EAAUwC,gBAAgBC,QACxCjO,GAAG,gBACHY,YAAY,kBAEZC,KAAK,gBAKb,cAACuB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKuL,GAAG,IAAR,SACE,eAACtN,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,aAFV,0BAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVuO,aAAc7C,EAAU+C,OACxBvO,GAAG,aACHY,YAAY,eAEZC,KAAK,mBAMf,oBAAIf,UAAU,SACd,oBAAIA,UAAU,gCAAd,iCAGA,sBAAKA,UAAU,UAAf,UACE,cAACsC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKiM,GAAG,KAAR,SACE,eAAChO,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,gBAFV,0BAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVuO,aAAc7C,EAAUwC,gBAAgBC,QACxCjO,GAAG,gBACHY,YAAY,eAEZC,KAAK,gBAKb,eAACuB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKuL,GAAG,IAAR,SACE,eAACtN,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,aAFV,0BAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVuO,aAAc7C,EAAUwC,gBAAgBC,QACxCjO,GAAG,aACHY,YAAY,eAEZC,KAAK,cAIX,cAACwB,EAAA,EAAD,CAAKuL,GAAG,IAAR,SACE,eAACtN,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,gBAFV,wBAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVuO,aACE7C,EAAUwC,gBAAgBQ,WAE5BxO,GAAG,gBACHY,YAAY,aAEZC,KAAK,cAIX,cAACwB,EAAA,EAAD,CAAKuL,GAAG,IAAR,SACE,eAACtN,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,gBAFV,6BAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVE,GAAG,oBACHqO,aAAc7C,EAAUwC,gBAAgBG,UACxCvN,YAAY,kBAEZC,KAAK,sBAMf,oBAAIf,UAAU,SACd,oBAAIA,UAAU,gCAAd,6BAGA,sBAAKA,UAAU,UAAf,UACE,cAACsC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKiM,GAAG,KAAR,SACE,eAAChO,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,gBAFV,iCAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVuO,aACE7C,EAAUiD,gBAAgBC,iBAE5B1O,GAAG,gBACHY,YAAY,sBAEZC,KAAK,gBAKb,eAACuB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKuL,GAAG,IAAR,SACE,eAACtN,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,aAFV,4BAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVuO,aACE7C,EAAUiD,gBAAgBE,eAE5B3O,GAAG,aACHY,YAAY,iBAEZC,KAAK,cAIX,cAACwB,EAAA,EAAD,CAAKuL,GAAG,IAAR,SACE,eAACtN,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,gBAFV,uBAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVuO,aAAc7C,EAAUiD,gBAAgBG,UACxC5O,GAAG,gBACHY,YAAY,YAEZC,KAAK,qCAa7B,cAACmM,GAAA,EAAM7K,OAAP,UAIE,cAACmL,GAAA,EAAD,CAAQC,QAAQ,YAAYzL,QAASkK,EAArC,uBAMP,EASC,OACE,qCACE,cAAC,GAAD,IACA,eAAC/L,EAAA,EAAD,CAAWH,UAAU,QAAQI,OAAK,EAAlC,UACE,cAAC2N,GAAA,EAAD,CAAY/N,UAAU,WAAtB,SACE,oBAAIA,UAAU,OAAd,4BAEF,cAACsC,EAAA,EAAD,UACE,qBAAKtC,UAAU,MAAf,SACE,eAAC6N,EAAA,EAAD,CAAM7N,UAAU,SAAhB,UACE,cAAC+N,GAAA,EAAD,CAAY/N,UAAU,WAAtB,SACE,oBAAIA,UAAU,OAAd,4BAGF,cAAC,KAAD,CACE+O,SAAS,QACT5T,KAAM8Q,EACN+C,QAxBE,CACd,CAAEC,UAAW,aAAcC,KAAM,qBACjC,CAAED,UAAW,YAAaC,KAAM,oBAChC,CAAED,UAAW,QAASC,KAAM,gBAC5B,CAAED,UAAW,SAAUC,KAAM,gBAC7B,CAAED,UAAW,4BAA6BC,KAAM,mBAoBpCC,WAAYC,OACZtC,UAAWA,WAKlBjB,EAAO,cAACoB,EAAD,IAAmB,UAIlC,EC3YcK,GApJA,WAGb,MAA8B7N,mBAAS,IAAvC,mBAAOsM,EAAP,KAAgBC,EAAhB,KAaA,OAXFrM,qBAAU,WAAM,sDACd,gHAC6B4M,MAAM1H,EAAUG,YAD7C,cACQwH,EADR,gBAE6BA,EAAaC,OAF1C,OAEQC,EAFR,OAIEV,EAAWU,GAJb,4CADc,uBAAC,WAAD,wBAQdE,EACD,GAAE,IACH/M,QAAQC,IAAI,uBAAwBiM,GAEhC,mCACE,qBAAK/L,UAAU,4CAAf,SACE,cAACG,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,qBAAKJ,UAAU,cAAf,SAEE,eAACsC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKuL,GAAG,IAAItL,GAAG,IAAf,SACE,cAACqL,EAAA,EAAD,CAAM7N,UAAU,0BAAhB,SACE,eAACiO,EAAA,EAAD,WACE,eAAC3L,EAAA,EAAD,WACE,sBAAKtC,UAAU,MAAf,UACE,cAACqP,EAAA,EAAD,CACEzN,IAAI,KACJ5B,UAAU,iCAFZ,2BAMA,sBAAMA,UAAU,2BAAhB,SACG+L,EAAQuD,WAGb,cAAC/M,EAAA,EAAD,CAAKvC,UAAU,WAAf,SACE,qBAAKA,UAAU,6DAAf,SACE,mBAAGA,UAAU,4BAInB,oBAAGA,UAAU,+BAAb,UACE,uBAAMA,UAAU,oBAAhB,UACE,mBAAGA,UAAU,mBADf,QAEQ,IACR,sBAAMA,UAAU,cAAhB,wCAKR,cAACuC,EAAA,EAAD,CAAKuL,GAAG,IAAItL,GAAG,IAAf,SACE,cAACqL,EAAA,EAAD,CAAM7N,UAAU,0BAAhB,SACE,eAACiO,EAAA,EAAD,WACE,eAAC3L,EAAA,EAAD,WACE,sBAAKtC,UAAU,MAAf,UACE,cAACqP,EAAA,EAAD,CACEzN,IAAI,KACJ5B,UAAU,iCAFZ,oCAMA,sBAAMA,UAAU,2BAAhB,SAEK+L,EAAQuD,WAGf,cAAC/M,EAAA,EAAD,CAAKvC,UAAU,WAAf,SACE,qBAAKA,UAAU,8DAAf,SACE,mBAAGA,UAAU,4BAInB,oBAAGA,UAAU,+BAAb,UACE,uBAAMA,UAAU,mBAAhB,UACE,mBAAGA,UAAU,sBADf,QAEQ,IACR,sBAAMA,UAAU,cAAhB,iDAmErB,ECyPcuP,GA9WD,SAAChQ,GAIb,MAAkCE,mBAAS,GAA3C,mBAEA,GAFA,UAEkDA,mBAAS,UAA3D,6BAII0C,OAAO7L,OACTkI,uBAAalI,IAAOyF,0BAiFtB,OACE,mCACE,cAAC,GAAD,KA8QL,E,UC/YC,SAAS6C,KACP,IAAMC,EAAeC,aAAaC,QAAQ,QAC1C,OAAKF,EAOEG,KAAKC,MAAMJ,GANT,CACLK,MAAO,GACPC,QAAS,GACTC,KAAM,GACNC,UAAW,GAGhB,CAKH,IAqDemQ,GArDI,WACb,MAAwBhQ,IAAMC,SAASb,IAAvC,mBAAOc,EAAP,UASA,OAPAF,IAAMG,WAAU,WACdb,aAAaC,QAAQ,OAAQC,KAAKY,UAAUF,GAC7C,GAAE,CAACA,IAEJG,QAAQC,IAAI,YAAaJ,GAGpBA,EAIP,mCACE,sBACEM,UAAU,qDACVyP,MAAO,CACLC,UAAW,QACXC,gBACE,OACApZ,EAAQ,IAAyCuD,QACjD,IACF8V,eAAgB,QAChBC,mBAAoB,cATxB,UAaE,sBAAM7P,UAAU,uCAEhB,cAACG,EAAA,EAAD,CAAWH,UAAU,4BAA4BI,OAAK,EAAtD,SACE,cAACkC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKuL,GAAG,IAAIU,GAAG,KAAf,UACE,qBAAIxO,UAAU,uBAAd,mBAA4CN,EAAK8B,cACjD,mBAAGxB,UAAU,uBAAb,uIAIA,cAAC,KAAD,CACEtF,MAAM,OACNqH,KAAK,SACLC,QAAS,SAACC,GAAD,OAAOA,EAAEyB,gBAAT,EAHX,sCA3BC,cAAC,IAAD,CAAUrD,GAAG,UAwC3B,ECtDC,SAASzB,KACP,IAAMC,EAAeC,aAAaC,QAAQ,QAC1C,OAAKF,EAOEG,KAAKC,MAAMJ,GANT,CACLK,MAAO,GACPC,QAAS,GACTC,KAAM,GACNC,UAAW,GAGhB,CAED,IAoZayQ,GApZG,WACd,MAAwBtQ,IAAMC,SAASb,IAAvC,mBAAOc,EAAP,UASA,OAPAF,IAAMG,WAAU,WACdb,aAAaC,QAAQ,OAAQC,KAAKY,UAAUF,GAC7C,GAAE,CAACA,IAEJG,QAAQC,IAAI,YAAaJ,GAGpBA,EAIH,qCACE,cAAC,GAAD,IAEA,cAACS,EAAA,EAAD,CAAWH,UAAU,QAAQI,OAAK,EAAlC,SACE,eAACkC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKvC,UAAU,0BAA0BwC,GAAG,IAA5C,SACE,eAACqL,EAAA,EAAD,CAAM7N,UAAU,sBAAhB,UACE,cAACsC,EAAA,EAAD,CAAKtC,UAAU,yBAAf,SACE,cAACuC,EAAA,EAAD,CAAKvC,UAAU,aAAa8N,GAAG,IAA/B,SACE,qBAAK9N,UAAU,qBAAf,SACE,mBAAG+B,KAAK,SAASC,QAAS,SAACC,GAAD,OAAOA,EAAEyB,gBAAT,EAA1B,SACE,qBACEpC,IAAI,MACJtB,UAAU,iBACVuB,IACEhL,EAAQ,IACLuD,kBAOf,cAACiU,GAAA,EAAD,CAAY/N,UAAU,iDAAtB,SACE,sBAAKA,UAAU,iCAAf,UACE,cAAC,KAAD,CACEA,UAAU,OACVtF,MAAM,OACNqH,KAAK,SACLC,QAAS,SAACC,GAAD,OAAOA,EAAEyB,gBAAT,EACTsK,KAAK,OAIP,cAAC,KAAD,CACEhO,UAAU,cACVtF,MAAM,UACNqH,KAAK,SACLC,QAAS,SAACC,GAAD,OAAOA,EAAEyB,gBAAT,EACTsK,KAAK,YAMX,eAACC,EAAA,EAAD,CAAUjO,UAAU,eAApB,UACE,cAACsC,EAAA,EAAD,UACE,qBAAKtC,UAAU,MAAf,SACE,sBAAKA,UAAU,2DAAf,UACE,gCACE,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,cAAhB,2BAEF,gCACE,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,cAAhB,kCAEF,gCACE,sBAAMA,UAAU,UAAhB,gBACA,sBAAMA,UAAU,cAAhB,iDAKR,sBAAKA,UAAU,cAAf,UACE,+BACGN,EAAK8B,WADR,IACqB9B,EAAKiO,UACxB,sBAAM3N,UAAU,yBAElB,sBAAKA,UAAU,qBAAf,UACE,mBAAGA,UAAU,yBADf,oBAEmB,4BAAIN,EAAKwO,gBAAgBC,aAU5C,oBAAInO,UAAU,SACd,8BACGN,EAAK8B,WADR,yBACqC9B,EAAK0O,UAD1C,kBAEU,4BAAI1O,EAAKwO,gBAAgBG,0BAW3C,cAAC9L,EAAA,EAAD,CAAKvC,UAAU,aAAawC,GAAG,IAA/B,SACE,eAACqL,EAAA,EAAD,CAAM7N,UAAU,sBAAhB,UACE,cAAC+N,GAAA,EAAD,CAAY/N,UAAU,oBAAtB,SACE,eAACsC,EAAA,EAAD,CAAKtC,UAAU,qBAAf,UACE,cAACuC,EAAA,EAAD,CAAKsB,GAAG,IAAR,SACE,oBAAI7D,UAAU,OAAd,0BAEF,cAACuC,EAAA,EAAD,CAAKvC,UAAU,aAAa6D,GAAG,IAA/B,SACE,cAAC,KAAD,CACEnJ,MAAM,UACNqH,KAAK,SACLC,QAAS,SAACC,GAAD,OAAOA,EAAEyB,gBAAT,EACTsK,KAAK,KAJP,6BAWN,cAACC,EAAA,EAAD,UACE,eAAC1N,EAAA,EAAD,WACE,oBAAIP,UAAU,gCAAd,8BAGA,sBAAKA,UAAU,UAAf,UACE,eAACsC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKuL,GAAG,IAAR,SACE,eAACtN,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,iBAFV,sBAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVuO,aAAc7O,EAAK8B,WACnBtB,GAAG,iBACHY,YAAY,WACZC,KAAK,cAIX,cAACwB,EAAA,EAAD,CAAKuL,GAAG,IAAR,SACE,eAACtN,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,cAFV,2BAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVE,GAAG,cACHY,YAAapB,EAAKR,MAClB6B,KAAK,kBAKb,eAACuB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKuL,GAAG,IAAR,SACE,eAACtN,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,mBAFV,wBAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVuO,aAAc7O,EAAK8B,WACnBtB,GAAG,mBACHY,YAAY,aACZC,KAAK,cAIX,cAACwB,EAAA,EAAD,CAAKuL,GAAG,IAAR,SACE,eAACtN,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,kBAFV,uBAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVuO,aAAc7O,EAAKiO,UACnBzN,GAAG,kBACHY,YAAY,YACZC,KAAK,oBAMf,oBAAIf,UAAU,SAEd,oBAAIA,UAAU,gCAAd,iCAGA,sBAAKA,UAAU,UAAf,UACE,cAACsC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKiM,GAAG,KAAR,SACE,eAAChO,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,gBAFV,qBAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVuO,aAAc7O,EAAKwO,gBAAgBC,QACnCjO,GAAG,gBACHY,YAAY,kBACZC,KAAK,gBAKb,cAACuB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKuL,GAAG,IAAR,SACE,eAACtN,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,aAFV,0BAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVuO,aAAc7O,EAAK+O,OACnBvO,GAAG,aACHY,YAAY,eACZC,KAAK,mBAMf,oBAAIf,UAAU,SAEd,oBAAIA,UAAU,gCAAd,iCAGA,sBAAKA,UAAU,UAAf,UACE,cAACsC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKiM,GAAG,KAAR,SACE,eAAChO,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,gBAFV,0BAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVuO,aAAc7O,EAAKwO,gBAAgBC,QACnCjO,GAAG,gBACHY,YAAY,eACZC,KAAK,gBAKb,eAACuB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKuL,GAAG,IAAR,SACE,eAACtN,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,aAFV,0BAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVuO,aAAc7O,EAAKwO,gBAAgBC,QACnCjO,GAAG,aACHY,YAAY,eACZC,KAAK,cAIX,cAACwB,EAAA,EAAD,CAAKuL,GAAG,IAAR,SACE,eAACtN,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,gBAFV,wBAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVuO,aAAc7O,EAAKwO,gBAAgBQ,WACnCxO,GAAG,gBACHY,YAAY,aACZC,KAAK,cAIX,cAACwB,EAAA,EAAD,CAAKuL,GAAG,IAAR,SACE,eAACtN,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,gBAFV,6BAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVE,GAAG,oBACHqO,aAAc7O,EAAKwO,gBAAgBG,UACnCvN,YAAY,kBACZC,KAAK,sBAMf,oBAAIf,UAAU,SAEd,oBAAIA,UAAU,gCAAd,6BAGA,sBAAKA,UAAU,UAAf,UACE,cAACsC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKiM,GAAG,KAAR,SACE,eAAChO,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,gBAFV,iCAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVuO,aACE7O,EAAKiP,gBAAgBC,iBAEvB1O,GAAG,gBACHY,YAAY,sBACZC,KAAK,gBAKb,eAACuB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKuL,GAAG,IAAR,SACE,eAACtN,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,aAFV,4BAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVuO,aAAc7O,EAAKiP,gBAAgBE,eACnC3O,GAAG,aACHY,YAAY,iBACZC,KAAK,cAIX,cAACwB,EAAA,EAAD,CAAKuL,GAAG,IAAR,SACE,eAACtN,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,gBAFV,uBAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVuO,aAAc7O,EAAKiP,gBAAgBG,UACnC5O,GAAG,gBACHY,YAAY,YACZC,KAAK,sCAzXtB,cAAC,IAAD,CAAUV,GAAG,UAuYvB,E,SCrPY0P,OAvLf,WACE,MAAwCtQ,mBAAS,MAAjD,mBAAOuQ,EAAP,KAAqBC,EAArB,KACA,EAA8BxQ,mBAAS,IAAvC,mBAAOsM,EAAP,KAAgBC,EAAhB,KACMkE,EAAS,GAGf,EAA4BzQ,qBAA5B,mBAAe0Q,GAAf,WASAxQ,qBAAU,WAAM,sDACd,gHAC6B4M,MAAM1H,EAAUG,YAD7C,cACQwH,EADR,gBAE6BA,EAAaC,OAF1C,OAEQC,EAFR,OAGEV,EAAWU,EAAaC,OACxB9M,QAAQC,IAAI,6BAA8B4M,EAAaC,OACvD9M,QAAQC,IAAI,2BAA4B+E,EAAUG,YAClDmL,IANF,6CADc,uBAAC,WAAD,wBAUdvD,EACD,GAAE,IAEHb,EAAQpO,SAAQ,SAAC+B,GACf,IAAM0Q,EACJ,gCACG,sBACD,sCACQ,IACN,mCACG1Q,EAAK8B,WADR,IACqB9B,EAAKiO,gBAG5B,gDACiB,iCAASjO,EAAK+O,YAE9B,uBACD,+CACgB,iCAAS/O,EAAKwO,gBAAgBmC,oBAE9C,kDACmB,iCAAS3Q,EAAKwO,gBAAgBG,kBAIrD6B,EAAOrD,KAAK,CACV3M,GAAIR,EAAKyO,QAAQmC,IACjBlR,KAAMgR,EACNxT,SAAU8C,EAAKyO,SAElB,IASDtO,QAAQC,IACN,4DA5DoB,IAwFtB,IAAMyQ,EAASpO,OAAOoO,OAElBC,EAAS,IAAID,EAAOE,KAAKC,OAAO,QAAS,SAc7C,OACE,qCACE,cAAC,GAAD,IACA,cAAC,KAAD,CACEC,OAjBe,SAAC7M,GACpB,IAAI8M,EAAS,IAAIL,EAAOE,KAAKI,aAC7BD,EAAOE,OAAON,GACdN,EAAOvS,SAAQ,gBAAGf,EAAH,EAAGA,SAAH,OAAkBgU,EAAOE,OAAOlU,EAAhC,IACfkH,EAAIiN,UAAUH,EAIf,EAUK5O,QAAS,kBAAMiO,EAAgB,KAAtB,EACTe,kBAAmB,CAAEnZ,OAAQ,SAC7ByC,QAAS,CACP2W,KAAM,GAENC,aAAa,EACbC,aAAa,EACbC,OAAQ,CACN,CACEC,YAAa,iBACbC,YAAa,mBACbC,QAAS,CAAC,CAAE7W,MAAO,aAErB,CACE2W,YAAa,YACbC,YAAa,MACbC,QAAS,CAAC,CAAE7W,MAAO,aAErB,CACE2W,YAAa,MACbC,YAAa,MACbC,QAAS,CAAC,CAAEC,WAAY,SAE1B,CACEH,YAAa,OACbC,YAAa,MACbC,QAAS,CAAC,CAAEE,YAAa,KAAO,CAAEC,UAAW,MAE/C,CACEL,YAAa,eACbC,YAAa,MACbC,QAAS,CAAC,CAAEC,WAAY,gBAE1B,CACEH,YAAa,gBACbC,YAAa,cACbC,QAAS,CAAC,CAAEC,WAAY,SAE1B,CACEH,YAAa,UACbC,YAAa,MACbC,QAAS,CAAC,CAAEC,WAAY,SAE1B,CACEH,YAAa,QACbC,YAAa,MACbC,QAAS,CAAC,CAAE7W,MAAO,WAAa,CAAE8W,WAAY,UAhDtD,SAqDGtB,EAAOpM,KAAI,gBAAG5D,EAAH,EAAGA,GAAId,EAAP,EAAOA,KAAMxC,EAAb,EAAaA,SAAb,OACV,cAAC,KAAD,CAEEA,SAAUA,EACVoF,QAAS,kBAjKQ,SAAC+J,GACtBA,IAAYiE,GAGhBC,EAAgBlE,EACjB,CA4JwB4F,CAAmBzR,EAAzB,EAHX,SAKG8P,IAAiB9P,EAChB,cAAC,KAAD,CAAY0R,aAAc,kBAAM3B,EAAgB,KAAtB,EAA1B,SACE,8BAAM7Q,MAEN,MARCc,EAFG,QAgBnB,ECpCc2R,GApID,WACZ,MAA0BpS,mBAAS,IAAnC,mBAAOP,EAAP,KAAc4S,EAAd,KACA,EAAgCrS,mBAAS,IAAzC,mBAAOkG,EAAP,KAAiBoM,EAAjB,KAEMC,EAAW7F,cAEX8F,EAAW,iDAAG,WAAOhQ,GAAP,wFAClBA,EAAEyB,iBADgB,kBAGOwO,EAAY7M,MAAMnG,EAAOyG,GAAUI,MACxD,WACEiM,EAASnF,KAAK,eAEf,IACD,SAACtC,GACC1K,QAAQC,IAAIyK,EACb,IAVa,OAGVvE,EAHU,OAYhBnG,QAAQC,IAAIkG,EAAS7K,MAZL,gDAchB0E,QAAQC,IAAR,MAdgB,yDAAH,sDAsBjB,OACE,mCACE,eAACyC,EAAA,EAAD,CAAKuL,GAAG,IAAIU,GAAG,IAAf,UACE,eAACX,EAAA,EAAD,CAAM7N,UAAU,+BAAhB,UACE,eAAC+N,GAAA,EAAD,CAAY/N,UAAU,sBAAtB,UACE,qBAAKA,UAAU,mCAAf,SACE,mDAEF,qBAAKA,UAAU,+BAEjB,eAACiO,EAAA,EAAD,CAAUjO,UAAU,kBAApB,UACE,qBAAKA,UAAU,8BAAf,SACE,4BAEF,eAACO,EAAA,EAAD,CAAM4R,KAAK,OAAOC,SAAUH,EAA5B,UACE,cAACzR,EAAA,EAAD,CAAWR,UAAU,OAArB,SACE,eAACS,EAAA,EAAD,CAAYT,UAAU,0BAAtB,UACE,cAACU,EAAA,EAAD,CAAiBC,UAAU,UAA3B,SACE,cAACC,EAAA,EAAD,UACE,mBAAGZ,UAAU,uBAGjB,cAACa,EAAA,EAAD,CACEC,YAAY,gBACZC,KAAK,QACLjG,MAAOoE,EACPmT,SAAU,SAACpQ,GAAD,OAAO6P,EAAS7P,EAAEW,OAAO9H,MAAzB,SAIhB,cAAC0F,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAYT,UAAU,0BAAtB,UACE,cAACU,EAAA,EAAD,CAAiBC,UAAU,UAA3B,SACE,cAACC,EAAA,EAAD,UACE,mBAAGZ,UAAU,+BAGjB,cAACa,EAAA,EAAD,CACEE,KAAK,WACLD,YAAY,WACZhG,MAAO6K,EACP0M,SAAU,SAACpQ,GAAD,OAAO8P,EAAY9P,EAAEW,OAAO9H,MAA5B,SAIhB,sBAAKkF,UAAU,4DAAf,UACE,uBACEA,UAAU,uBACVE,GAAG,oBACHa,KAAK,aAEP,uBACEf,UAAU,uBACVsO,QAAQ,oBAFV,SAIE,sBAAMtO,UAAU,aAAhB,8BAQJ,qBAAKA,UAAU,OAAOtF,MAAM,UAA5B,SACE,wBACEsF,UAAU,4BADZ,SAOE,sDAMV,eAACsC,EAAA,EAAD,CAAKtC,UAAU,OAAf,UACE,cAACuC,EAAA,EAAD,CAAKsB,GAAG,IAAR,SACE,mBACE7D,UAAU,aACV+B,KAAK,OAGLC,QAxFa,SAACC,GACxBE,OAAOmQ,KAAK,0CACb,EAiFS,SAOE,yDAGJ,cAAC/P,EAAA,EAAD,CAAKvC,UAAU,aAAa6D,GAAG,IAA/B,SACE,mBACE7D,UAAU,aACV+B,KAAK,SACLC,QAAS,SAACC,GAAD,OAAOA,EAAEyB,gBAAT,EAHX,SAKE,kEAOb,ECnGc6O,GAzCS,WACtB,OACE,mCACE,sBACEvS,UAAU,qDACVyP,MAAO,CACLC,UAAW,QACXC,gBACE,OACApZ,EAAQ,IAAyCuD,QACjD,IACF8V,eAAgB,QAChBC,mBAAoB,cATxB,UAaE,sBAAM7P,UAAU,uCAEhB,cAACG,EAAA,EAAD,CAAWH,UAAU,4BAA4BI,OAAK,QAqB7D,EC7BC,SAASxB,KACP,IAAMC,EAAeC,aAAaC,QAAQ,WAC1C,OAAKF,EAMEG,KAAKC,MAAMJ,GALT,CACL2T,MAAO,GACPC,OAAQ,GAIb,CAGH,IAyIeC,GAzIO,WACpB,MAA8BlT,IAAMC,SAASb,IAA7C,mBAAO+T,EAAP,KACA,GADA,KACgClT,mBAAS,KAAzC,mBAAOkG,EAAP,KAAiBoM,EAAjB,KAEMC,EAAW7F,cAEjB3M,IAAMG,WAAU,WACdb,aAAaC,QAAQ,UAAWC,KAAKY,UAAU+S,GAChD,GAAE,CAACA,IAEJ9S,QAAQC,IAAI,mCAAoC6S,GAEhD,IAAMC,EAAiB,iDAAG,WAAO3Q,GAAP,wFACxBA,EAAEyB,iBADsB,kBAGCwO,EAAY1M,cAHb,OAGhBQ,EAHgB,QAI3B2M,EAAQH,MAAOG,EAAQF,OAAQ9M,GAAUI,MACxC,WACEiM,EAASnF,KAAK,cAEf,IACD,SAACtC,GACC1K,QAAQC,IAAIyK,EACb,IAEG1K,QAAQC,IAAIkG,EAAS7K,MAbC,gDAetB0E,QAAQC,IAAR,MAfsB,yDAAH,sDAuBvB,OACE,mCACE,eAACyC,EAAA,EAAD,CAAKuL,GAAG,IAAIU,GAAG,IAAf,UACE,eAACX,EAAA,EAAD,CAAM7N,UAAU,+BAAhB,UACE,eAAC+N,GAAA,EAAD,CAAY/N,UAAU,sBAAtB,UACE,qBAAKA,UAAU,mCAAf,SACE,mDAEF,qBAAKA,UAAU,+BAEjB,eAACiO,EAAA,EAAD,CAAUjO,UAAU,kBAApB,UACE,qBAAKA,UAAU,8BAAf,SACE,4BAEF,eAACO,EAAA,EAAD,CAAM4R,KAAK,OAAOC,SAAUQ,EAA5B,UAgBE,cAACpS,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAYT,UAAU,0BAAtB,UACE,cAACU,EAAA,EAAD,CAAiBC,UAAU,UAA3B,SACE,cAACC,EAAA,EAAD,UACE,mBAAGZ,UAAU,+BAGjB,cAACa,EAAA,EAAD,CACEE,KAAK,WACLD,YAAY,WACZhG,MAAO6K,EACP0M,SAAU,SAACpQ,GAAD,OAAO8P,EAAY9P,EAAEW,OAAO9H,MAA5B,SAsBhB,qBAAKkF,UAAU,OAAOtF,MAAM,UAA5B,SACE,wBACEsF,UAAU,4BADZ,SAOE,+DAMV,cAACsC,EAAA,EAAD,CAAKtC,UAAU,OAAf,SAUE,cAACuC,EAAA,EAAD,CAAKvC,UAAU,aAAa6D,GAAG,IAA/B,SACE,mBACE7D,UAAU,aACV+B,KAAK,aACLC,QAAS,kBA9FjBC,EAAEyB,sBACFsO,EAASnF,KAAK,eAFU,IAAC5K,CA+FR,EAHX,SAKE,0EAOb,EClEc4Q,GAjFc,WAC3B,MAA0BpT,mBAAS,IAAnC,mBAAOP,EAAP,KAAc4S,EAAd,KACA,EAAgCrS,mBAAS,IAAzC,mBAEMuS,GAFN,UAEiB7F,eAEXyG,EAAiB,iDAAG,WAAO3Q,GAAP,wFACxBA,EAAEyB,iBADsB,kBAGCwO,EAAY5L,qBACjCpH,GACA6G,MACA,WACEiM,EAASnF,KAAK,uBAEf,IACD,SAACtC,GACC1K,QAAQC,IAAIyK,EACb,IAZmB,OAGhBvE,EAHgB,OActBnG,QAAQC,IAAIkG,EAAS7K,MAdC,gDAgBtB0E,QAAQC,IAAR,MAhBsB,yDAAH,sDAwBvB,OACE,mCACE,eAACyC,EAAA,EAAD,CAAKuL,GAAG,IAAIU,GAAG,IAAf,UACE,eAACX,EAAA,EAAD,CAAM7N,UAAU,+BAAhB,UACE,eAAC+N,GAAA,EAAD,CAAY/N,UAAU,sBAAtB,UACE,qBAAKA,UAAU,mCAAf,SACE,oFAEF,qBAAKA,UAAU,+BAEjB,cAACiO,EAAA,EAAD,CAAUjO,UAAU,kBAApB,SACE,eAACO,EAAA,EAAD,CAAM4R,KAAK,OAAOC,SAAUQ,EAA5B,UACE,cAACpS,EAAA,EAAD,CAAWR,UAAU,OAArB,SACE,eAACS,EAAA,EAAD,CAAYT,UAAU,0BAAtB,UACE,cAACU,EAAA,EAAD,CAAiBC,UAAU,UAA3B,SACE,cAACC,EAAA,EAAD,UACE,mBAAGZ,UAAU,uBAGjB,cAACa,EAAA,EAAD,CACEC,YAAY,2BACZC,KAAK,QACLjG,MAAOoE,EACPmT,SAAU,SAACpQ,GAAD,OAAO6P,EAAS7P,EAAEW,OAAO9H,MAAzB,SAIhB,qBAAKkF,UAAU,OAAOtF,MAAM,UAA5B,SACE,wBAAQsF,UAAU,4BAAlB,SACE,sEAMV,cAACsC,EAAA,EAAD,CAAKtC,UAAU,OAAf,SACE,cAACuC,EAAA,EAAD,CAAKvC,UAAU,aAAa6D,GAAG,IAA/B,SACE,mBACE7D,UAAU,aACV+B,KAAK,aACLC,QAAS,kBA3CjBC,EAAEyB,sBACFsO,EAASnF,KAAK,eAFU,IAAC5K,CA4CR,EAHX,SAKE,0EAOb,ECVckB,GAzEF,CACX,CACEgB,KAAM,SACN/E,KAAM,YACNkF,KAAM,0BACNwO,UAAWvD,GACX/S,OAAQ,UAEV,CACE2H,KAAM,QACN/E,KAAM,OACNkF,KAAM,0BACNwO,UAAWC,GACXvW,OAAQ,UAEV,CACE2H,KAAM,gBACN/E,KAAM,eACNkF,KAAM,8BACNwO,UAAWhD,GACXtT,OAAQ,UAUV,CACE2H,KAAM,WACN/E,KAAM,UACNkF,KAAM,gCACNwO,UAAWrH,GACXjP,OAAQ,UAEV,CACE2H,KAAM,aACN/E,KAAM,gBACNkF,KAAM,yBACNwO,UCtCe,WAEf,OACE,qCACE,cAAC,GAAD,IAEA,cAAC3S,EAAA,EAAD,CAAW6S,SAAS,iBAApB,SACE,eAAC1Q,EAAA,EAAD,CAAK0Q,SAAS,SAAd,UACE,cAACzQ,EAAA,EAAD,CAAKvC,UAAU,0BAA0BwC,GAAG,IAA5C,SACE,cAACqL,EAAA,EAAD,CAAM7N,UAAU,0BAElB,cAACuC,EAAA,EAAD,CAAKvC,UAAU,aAAawC,GAAG,IAA/B,SACE,eAACqL,EAAA,EAAD,CAAM7N,UAAU,sBAAhB,UACE,cAAC+N,GAAA,EAAD,CAAY/N,UAAU,oBAAtB,SACE,eAACsC,EAAA,EAAD,CAAKtC,UAAU,qBAAf,UACE,cAACuC,EAAA,EAAD,CAAKsB,GAAG,IAAR,SACE,oBAAI7D,UAAU,OAAd,6BAEF,cAACuC,EAAA,EAAD,CAAKvC,UAAU,aAAa6D,GAAG,WAGnC,cAACoK,EAAA,EAAD,UACE,eAAC1N,EAAA,EAAD,WACE,oBAAIP,UAAU,gCAAd,kCAGA,sBAAKA,UAAU,UAAf,UACE,eAACsC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKuL,GAAG,IAAR,SACE,eAACtN,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,iBAFV,wBAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVuO,aAAc,GACdrO,GAAG,iBACHY,YAAY,aACZ1B,KAAK,aAEL2B,KAAK,cAIX,cAACwB,EAAA,EAAD,CAAKuL,GAAG,IAAR,SACE,eAACtN,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,iBAFV,uBAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVuO,aAAc,GACdrO,GAAG,iBACHY,YAAY,YACZ1B,KAAK,YAEL2B,KAAK,cAIX,cAACwB,EAAA,EAAD,CAAKuL,GAAG,IAAR,SACE,eAACtN,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,iBAFV,0BAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVuO,aAAc,GACdrO,GAAG,SACHY,YAAY,eAEZC,KAAK,gBAIX,cAACwB,EAAA,EAAD,CAAKuL,GAAG,IAAR,SACE,eAACtN,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,QAFV,2BAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVE,GAAG,QACHY,YAAa,GAEbC,KAAK,kBAKb,eAACuB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKuL,GAAG,IAAR,SACE,eAACtN,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,mBAFV,iBAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVuO,aAAc,GACdrO,GAAG,MACHY,YAAY,gBAEZC,KAAK,cAIX,cAACwB,EAAA,EAAD,CAAKuL,GAAG,IAAR,SACE,eAACtN,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,kBAFV,sBAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVuO,aAAc,SACdrO,GAAG,WACH+S,UAAQ,EAGRlS,KAAK,oBAMf,oBAAIf,UAAU,SACd,oBAAIA,UAAU,gCAAd,iCAGA,sBAAKA,UAAU,UAAf,UACE,cAACsC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKiM,GAAG,KAAR,SACE,eAAChO,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,gBAFV,qBAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVuO,aAAc,GACdrO,GAAG,gBACHY,YAAY,kBAEZC,KAAK,gBAKb,cAAC,KAAD,CAAQ0M,QAAQ,YAAhB,uBAEF,qBAAKzN,UAAU,0BAShC,ED3ICxD,OAAQ,UAEV,CACE2H,KAAM,cACN/E,KAAM,iBACNkF,KAAM,4BACNwO,UE7CgB,WAEhB,OACE,qCACE,cAAC,GAAD,IAEA,cAAC3S,EAAA,EAAD,CAAW6S,SAAS,iBAApB,SACE,eAAC1Q,EAAA,EAAD,CAAK0Q,SAAS,SAAd,UACE,cAACzQ,EAAA,EAAD,CAAKvC,UAAU,0BAA0BwC,GAAG,IAA5C,SACE,cAACqL,EAAA,EAAD,CAAM7N,UAAU,0BAElB,cAACuC,EAAA,EAAD,CAAKvC,UAAU,aAAawC,GAAG,IAA/B,SACE,eAACqL,EAAA,EAAD,CAAM7N,UAAU,sBAAhB,UACE,cAAC+N,GAAA,EAAD,CAAY/N,UAAU,oBAAtB,SACE,eAACsC,EAAA,EAAD,CAAKtC,UAAU,qBAAf,UACE,cAACuC,EAAA,EAAD,CAAKsB,GAAG,IAAR,SACE,oBAAI7D,UAAU,OAAd,0BAEF,cAACuC,EAAA,EAAD,CAAKvC,UAAU,aAAa6D,GAAG,WAYnC,cAACoK,EAAA,EAAD,UACE,eAAC1N,EAAA,EAAD,WACE,oBAAIP,UAAU,gCAAd,kCAGA,sBAAKA,UAAU,UAAf,UACE,eAACsC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKuL,GAAG,IAAR,SACE,eAACtN,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,iBAFV,wBAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVuO,aAAc,GACdrO,GAAG,iBACHY,YAAY,aACZ1B,KAAK,aAEL2B,KAAK,cAIX,cAACwB,EAAA,EAAD,CAAKuL,GAAG,IAAR,SACE,eAACtN,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,iBAFV,uBAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVuO,aAAc,GACdrO,GAAG,iBACHY,YAAY,YACZ1B,KAAK,YAEL2B,KAAK,cAIX,cAACwB,EAAA,EAAD,CAAKuL,GAAG,IAAR,SACE,eAACtN,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,iBAFV,0BAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVuO,aAAc,GACdrO,GAAG,SACHY,YAAY,eAEZC,KAAK,gBAIX,cAACwB,EAAA,EAAD,CAAKuL,GAAG,IAAR,SACE,eAACtN,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,QAFV,2BAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVE,GAAG,QACHY,YAAa,GAEbC,KAAK,kBAKb,eAACuB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKuL,GAAG,IAAR,SACE,eAACtN,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,mBAFV,iBAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVuO,aAAc,GACdrO,GAAG,MACHY,YAAY,gBAEZC,KAAK,cAIX,cAACwB,EAAA,EAAD,CAAKuL,GAAG,IAAR,SACE,eAACtN,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,kBAFV,sBAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVuO,aAAc,SACdrO,GAAG,WACH+S,UAAQ,EAGRlS,KAAK,oBAMf,oBAAIf,UAAU,SACd,oBAAIA,UAAU,gCAAd,iCAGA,sBAAKA,UAAU,UAAf,UACE,cAACsC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKiM,GAAG,KAAR,SACE,eAAChO,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,gBAFV,0BAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVuO,aAAc,GACdrO,GAAG,gBACHY,YAAY,eAEZC,KAAK,gBAKb,eAACuB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKuL,GAAG,IAAR,SACE,eAACtN,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,aAFV,0BAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVuO,aAAc,GACdrO,GAAG,aACHY,YAAY,eAEZC,KAAK,cAIX,cAACwB,EAAA,EAAD,CAAKuL,GAAG,IAAR,SACE,eAACtN,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,gBAFV,wBAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVuO,aAAc,GACdrO,GAAG,gBACHY,YAAY,aAEZC,KAAK,cAIX,cAACwB,EAAA,EAAD,CAAKuL,GAAG,IAAR,SACE,eAACtN,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,gBAFV,6BAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVE,GAAG,oBACHqO,aAAc,GACdzN,YAAY,kBAEZC,KAAK,sBAMf,oBAAIf,UAAU,SACd,oBAAIA,UAAU,gCAAd,6BAGA,sBAAKA,UAAU,UAAf,UACE,cAACsC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKiM,GAAG,KAAR,SACE,eAAChO,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,gBAFV,iCAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVuO,aAAc,GACdrO,GAAG,gBACHY,YAAY,sBAEZC,KAAK,gBAKb,eAACuB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKuL,GAAG,IAAR,SACE,eAACtN,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,aAFV,4BAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVuO,aAAc,GACdrO,GAAG,aACHY,YAAY,iBAEZC,KAAK,cAIX,cAACwB,EAAA,EAAD,CAAKuL,GAAG,IAAR,SACE,eAACtN,EAAA,EAAD,WACE,uBACER,UAAU,qBACVsO,QAAQ,gBAFV,uBAMA,cAACzN,EAAA,EAAD,CACEb,UAAU,2BACVuO,aAAc,GACdrO,GAAG,gBACHY,YAAY,YAEZC,KAAK,oBAMf,qBAAKf,UAAU,qBAAf,SACA,cAAC,KAAD,CAAQyN,QAAQ,YAAhB,uCAWjB,EFvQCjR,OAAQ,UAEV,CACE2H,KAAM,SAGN2O,UAAWjB,GACXrV,OAAQ,SAEV,CACE2H,KAAM,kBAGN2O,UAAWJ,GACXlW,OAAQ,SAEV,CACE2H,KAAM,0BAGN2O,UAAWD,GACXrW,OAAQ,UGSG0W,GAlED,SAAC3T,GACb,IAAM4T,EAAc3T,IAAM4T,OAAO,MAC3BhR,EAAWiR,cAEjB7T,IAAMG,WAAU,WACd2T,SAASC,gBAAgBC,UAAY,EACrCF,SAASG,iBAAiBD,UAAY,EACtCL,EAAYO,QAAQF,UAAY,CACjC,GAAE,CAACpR,IAEJ,IAAmBe,EA4BnB,OACE,qCACE,cAAC,EAAD,2BACM5D,GADN,IAEE4D,OAAQA,GACRC,KAAM,CACJC,UAAW,eACXI,OAAQlN,EAAQ,IAAsCuD,QACtD0J,OAAQ,UAGZ,sBAAKxD,UAAU,eAAe2T,IAAKR,EAAnC,UACE,cAAC,EAAD,2BACM5T,GADN,IAEEe,UA1Ba,SAAC6D,GACpB,IAAK,IAAI9K,EAAI,EAAGA,EAAI8J,GAAO3H,OAAQnC,IACjC,IAEG,IADDkG,EAAM6C,SAASwR,SAAS5a,QAAQmK,GAAO9J,GAAGmD,OAAS2G,GAAO9J,GAAG8K,MAG7D,OAAOhB,GAAO9J,GAAG+F,KAGrB,MAAO,OACR,CAgBkByU,CAAatU,EAAM6C,SAASwR,aAEzC,eAAC,IAAD,YA5CazQ,EA6CAA,GA5CVA,EAAOW,KAAI,SAACC,EAAMC,GACvB,MAAoB,WAAhBD,EAAKvH,OAEL,cAAC,IAAD,CACE2H,KAAMJ,EAAKvH,OAASuH,EAAKI,KACzB2O,UAAW/O,EAAK+O,WACX9O,GAIF,IAEV,KAiCK,cAAC,IAAD,CAAU8P,KAAK,IAAIzT,GAAG,oBAExB,cAACF,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,cAAC2T,EAAD,WAKT,E,UCfczU,GA/DK,WAClB,OACE,mCACE,cAACS,EAAA,EAAD,CAAQC,UAAU,2CAA2CC,OAAO,KAApE,SACE,eAACE,EAAA,EAAD,CAAWH,UAAU,OAArB,UACE,cAACuD,EAAA,EAAD,CAAalD,GAAG,IAAIuB,IAAKC,IAAzB,SACE,qBACEP,IAAI,MACJC,IACEhL,EAAQ,IAAyCuD,YAIvD,wBAAQkG,UAAU,iBAAiBE,GAAG,uBAAtC,SACE,sBAAMF,UAAU,0BAElB,eAACgU,GAAA,EAAD,CAAsB/S,QAAM,EAACgT,QAAQ,wBAArC,UACE,qBAAKjU,UAAU,mCAAf,SACE,eAACsC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKvC,UAAU,iBAAiB6D,GAAG,IAAnC,SACE,cAAC,IAAD,CAAMxD,GAAG,IAAT,SACE,qBACEiB,IAAI,MACJC,IACEhL,EAAQ,IACLuD,cAKX,cAACyI,EAAA,EAAD,CAAKvC,UAAU,iBAAiB6D,GAAG,IAAnC,SACE,yBAAQ7D,UAAU,iBAAiBE,GAAG,uBAAtC,UACE,yBACA,mCAKR,eAACc,EAAA,EAAD,CAAKhB,UAAU,UAAUiB,QAAM,EAA/B,UACE,cAACgD,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CACElE,UAAU,gBACVK,GAAG,iBACHuB,IAAKC,IAHP,UAKE,mBAAG7B,UAAU,oBACb,sBAAMA,UAAU,uBAAhB,2BAGJ,cAACiE,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAASlE,UAAU,gBAAgBK,GAAG,cAAcuB,IAAKC,IAAzD,UACE,mBAAG7B,UAAU,iBACb,sBAAMA,UAAU,uBAAhB,oCASjB,EChDc6R,GAxBD,WACZ,OACE,mCACE,wBAAQ7R,UAAU,OAAlB,SACE,cAACG,EAAA,EAAD,UACE,cAACmC,EAAA,EAAD,CAAKtC,UAAU,gDAAf,SACE,cAACuC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACE,sBAAKxC,UAAU,gDAAf,mBACK,IAAIyC,MAAOC,cAAe,IAC7B,mBACE1C,UAAU,wBACV4C,OAAO,SAFT,mCAaf,ECmEcsR,GAhFF,SAAC3U,GACZ,IAAM4T,EAAc3T,IAAM4T,OAAO,MAC3BhR,EAAWiR,cAEjB7T,IAAMG,WAAU,WAEd,OADA2T,SAASa,KAAKC,UAAUC,IAAI,cACrB,WACLf,SAASa,KAAKC,UAAUE,OAAO,aAChC,CACF,GAAE,IACH9U,IAAMG,WAAU,WACd2T,SAASC,gBAAgBC,UAAY,EACrCF,SAASG,iBAAiBD,UAAY,EACtCL,EAAYO,QAAQF,UAAY,CACjC,GAAE,CAACpR,IAEJ,IAAmBe,EAgBnB,OACE,qCACE,sBAAKnD,UAAU,eAAe2T,IAAKR,EAAnC,UACE,cAACoB,GAAD,IACA,sBAAKvU,UAAU,uCAAf,UACE,cAACG,EAAA,EAAD,UACE,qBAAKH,UAAU,+BAAf,SACE,cAACsC,EAAA,EAAD,CAAKtC,UAAU,yBAAf,SACE,eAACuC,EAAA,EAAD,CAAKuL,GAAG,IAAIU,GAAG,IAAf,UACE,oBAAIxO,UAAU,aAAd,sBACA,mBAAGA,UAAU,uBAAb,oCAOR,qBAAKA,UAAU,uDAAf,SACE,qBACEwU,MAAM,6BACNC,oBAAoB,OACpBC,QAAQ,MACRC,QAAQ,eACRhd,EAAE,IACFC,EAAE,IANJ,SAQE,yBACEoI,UAAU,eACV4U,OAAO,iCAMf,cAACzU,EAAA,EAAD,CAAWH,UAAU,aAArB,SACE,cAACsC,EAAA,EAAD,CAAKtC,UAAU,yBAAf,SACE,eAAC,IAAD,YApDSmD,EAqDIA,GApDdA,EAAOW,KAAI,SAACC,EAAMC,GACvB,MAAoB,UAAhBD,EAAKvH,OAEL,cAAC,IAAD,CACE2H,KAAMJ,EAAKvH,OAASuH,EAAKI,KACzB2O,UAAW/O,EAAK+O,WACX9O,GAIF,IAEV,KAyCS,cAAC,IAAD,CAAU8P,KAAK,IAAIzT,GAAG,0BAK9B,cAACwU,GAAD,MAGL,E,6BClFKnV,GAAOV,KAAKC,MAAMH,aAAaC,QAAQ,SAEvC+V,GAAepV,GACjB,CAAEqV,YAAY,EAAMrV,SACpB,CAAEqV,YAAY,EAAOrV,KAAM,MCVzBoV,GAAe,CAAC,ECEPE,8BAAgB,CAC7BC,KFSa,WAAyC,IAA/BC,EAA8B,uDAAtBJ,GAAcK,EAAQ,uCAC7CpU,EAAkBoU,EAAlBpU,KAAMqU,EAAYD,EAAZC,QAEd,OAAQrU,GACN,KAAKmK,GAKL,KAAKC,GACH,OAAO,2BACF+J,GADL,IAEEH,YAAY,IAEhB,KAAK3J,GACH,OAAO,2BACF8J,GADL,IAEEH,YAAY,EACZrV,KAAM0V,EAAQ1V,OAElB,KAAK2L,GAML,KAAKC,GACH,OAAO,2BACF4J,GADL,IAEEH,YAAY,EACZrV,KAAM,OAEV,QACE,OAAOwV,E,EEzCX/V,QDFa,WAAyC,IAA/B+V,EAA8B,uDAAtBJ,GAAcK,EAAQ,uCAC7CpU,EAAkBoU,EAAlBpU,KAAMqU,EAAYD,EAAZC,QAEd,OAAQrU,GACN,KAAKwK,GACH,MAAO,CAAEpM,QAASiW,GAEpB,KAAK5J,GACH,MAAO,CAAErM,QAAS,IAEpB,QACE,OAAO+V,E,IEVPG,GAAa,CAACC,MAOLC,GALDC,uBACZC,GACAC,+BAAoBC,mBAAe,WAAf,EAAmBN,MCOzCO,IAASC,OACP,cAAC,KAAD,CAAUN,MAAOA,GAAjB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOpR,KAAK,SAAS0R,OAAQ,SAACtW,GAAD,OAAW,cAAC,GAAD,eAAiBA,GAA5B,IAC7B,cAAC,IAAD,CAAO4E,KAAK,QAAQ0R,OAAQ,SAACtW,GAAD,OAAW,cAAC,GAAD,eAAgBA,GAA3B,IAC5B,cAAC,IAAD,CAAUuU,KAAK,IAAIzT,GAAG,uBAI5BiT,SAASwC,eAAe,Q,kCC1B1B,OAAe,cAA0B,sC,kCCAzC,OAAe,cAA0B,0C","file":"static/js/main.0616a5ec.chunk.js","sourcesContent":["/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.1\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nconst Chart = require(\"chart.js\");\n//\n// Chart extension for making the bars rounded\n// Code from: https://codepen.io/jedtrow/full/ygRYgo\n//\n\nChart.elements.Rectangle.prototype.draw = function () {\n  var ctx = this._chart.ctx;\n  var vm = this._view;\n  var left, right, top, bottom, signX, signY, borderSkipped, radius;\n  var borderWidth = vm.borderWidth;\n  // Set Radius Here\n  // If radius is large enough to cause drawing errors a max radius is imposed\n  var cornerRadius = 6;\n\n  if (!vm.horizontal) {\n    // bar\n    left = vm.x - vm.width / 2;\n    right = vm.x + vm.width / 2;\n    top = vm.y;\n    bottom = vm.base;\n    signX = 1;\n    signY = bottom > top ? 1 : -1;\n    borderSkipped = vm.borderSkipped || \"bottom\";\n  } else {\n    // horizontal bar\n    left = vm.base;\n    right = vm.x;\n    top = vm.y - vm.height / 2;\n    bottom = vm.y + vm.height / 2;\n    signX = right > left ? 1 : -1;\n    signY = 1;\n    borderSkipped = vm.borderSkipped || \"left\";\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n    // borderWidth shold be less than bar width and bar height.\n    var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\n    var halfStroke = borderWidth / 2;\n    // Adjust borderWidth when bar top position is near vm.base(zero).\n    var borderLeft = left + (borderSkipped !== \"left\" ? halfStroke * signX : 0);\n    var borderRight =\n      right + (borderSkipped !== \"right\" ? -halfStroke * signX : 0);\n    var borderTop = top + (borderSkipped !== \"top\" ? halfStroke * signY : 0);\n    var borderBottom =\n      bottom + (borderSkipped !== \"bottom\" ? -halfStroke * signY : 0);\n    // not become a vertical line?\n    if (borderLeft !== borderRight) {\n      top = borderTop;\n      bottom = borderBottom;\n    }\n    // not become a horizontal line?\n    if (borderTop !== borderBottom) {\n      left = borderLeft;\n      right = borderRight;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  var corners = [\n    [left, bottom],\n    [left, top],\n    [right, top],\n    [right, bottom],\n  ];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  var borders = [\"bottom\", \"left\", \"top\", \"right\"];\n  var startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  var corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (var i = 1; i < 4; i++) {\n    corner = cornerAt(i);\n    let nextCornerId = i + 1;\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    }\n\n    // let nextCorner = cornerAt(nextCornerId);\n\n    let width = corners[2][0] - corners[1][0];\n    let height = corners[0][1] - corners[1][1];\n    let x = corners[1][0];\n    let y = corners[1][1];\n    // eslint-disable-next-line\n    var radius = cornerRadius;\n\n    // Fix radius being too large\n    if (radius > height / 2) {\n      radius = height / 2;\n    }\n    if (radius > width / 2) {\n      radius = width / 2;\n    }\n\n    ctx.moveTo(x + radius, y);\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n};\n\nvar mode = \"light\"; //(themeMode) ? themeMode : 'light';\nvar fonts = {\n  base: \"Open Sans\",\n};\n\n// Colors\nvar colors = {\n  gray: {\n    100: \"#f6f9fc\",\n    200: \"#e9ecef\",\n    300: \"#dee2e6\",\n    400: \"#ced4da\",\n    500: \"#adb5bd\",\n    600: \"#8898aa\",\n    700: \"#525f7f\",\n    800: \"#32325d\",\n    900: \"#212529\",\n  },\n  theme: {\n    default: \"#172b4d\",\n    primary: \"#5e72e4\",\n    secondary: \"#f4f5f7\",\n    info: \"#11cdef\",\n    success: \"#2dce89\",\n    danger: \"#f5365c\",\n    warning: \"#fb6340\",\n  },\n  black: \"#12263F\",\n  white: \"#FFFFFF\",\n  transparent: \"transparent\",\n};\n\n// Methods\n\n// Chart.js global options\nfunction chartOptions() {\n  // Options\n  var options = {\n    defaults: {\n      global: {\n        responsive: true,\n        maintainAspectRatio: false,\n        defaultColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\n        defaultFontColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\n        defaultFontFamily: fonts.base,\n        defaultFontSize: 13,\n        layout: {\n          padding: 0,\n        },\n        legend: {\n          display: false,\n          position: \"bottom\",\n          labels: {\n            usePointStyle: true,\n            padding: 16,\n          },\n        },\n        elements: {\n          point: {\n            radius: 0,\n            backgroundColor: colors.theme[\"primary\"],\n          },\n          line: {\n            tension: 0.4,\n            borderWidth: 4,\n            borderColor: colors.theme[\"primary\"],\n            backgroundColor: colors.transparent,\n            borderCapStyle: \"rounded\",\n          },\n          rectangle: {\n            backgroundColor: colors.theme[\"warning\"],\n          },\n          arc: {\n            backgroundColor: colors.theme[\"primary\"],\n            borderColor: mode === \"dark\" ? colors.gray[800] : colors.white,\n            borderWidth: 4,\n          },\n        },\n        tooltips: {\n          enabled: true,\n          mode: \"index\",\n          intersect: false,\n        },\n      },\n      doughnut: {\n        cutoutPercentage: 83,\n        legendCallback: function (chart) {\n          var data = chart.data;\n          var content = \"\";\n\n          data.labels.forEach(function (label, index) {\n            var bgColor = data.datasets[0].backgroundColor[index];\n\n            content += '<span class=\"chart-legend-item\">';\n            content +=\n              '<i class=\"chart-legend-indicator\" style=\"background-color: ' +\n              bgColor +\n              '\"></i>';\n            content += label;\n            content += \"</span>\";\n          });\n\n          return content;\n        },\n      },\n    },\n  };\n\n  // yAxes\n  Chart.scaleService.updateScaleDefaults(\"linear\", {\n    gridLines: {\n      borderDash: [2],\n      borderDashOffset: [2],\n      color: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\n      drawBorder: false,\n      drawTicks: false,\n      lineWidth: 0,\n      zeroLineWidth: 0,\n      zeroLineColor: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\n      zeroLineBorderDash: [2],\n      zeroLineBorderDashOffset: [2],\n    },\n    ticks: {\n      beginAtZero: true,\n      padding: 10,\n      callback: function (value) {\n        if (!(value % 10)) {\n          return value;\n        }\n      },\n    },\n  });\n\n  // xAxes\n  Chart.scaleService.updateScaleDefaults(\"category\", {\n    gridLines: {\n      drawBorder: false,\n      drawOnChartArea: false,\n      drawTicks: false,\n    },\n    ticks: {\n      padding: 20,\n    },\n  });\n\n  return options;\n}\n\n// Parse global options\nfunction parseOptions(parent, options) {\n  for (var item in options) {\n    if (typeof options[item] !== \"object\") {\n      parent[item] = options[item];\n    } else {\n      parseOptions(parent[item], options[item]);\n    }\n  }\n}\n\n// Example 1 of Chart inside src/views/Index.js (Sales value - Card)\nlet chartExample1 = {\n  options: {\n    scales: {\n      yAxes: [\n        {\n          gridLines: {\n            color: colors.gray[900],\n            zeroLineColor: colors.gray[900],\n          },\n          ticks: {\n            callback: function (value) {\n              if (!(value % 10)) {\n                return \"$\" + value + \"k\";\n              }\n            },\n          },\n        },\n      ],\n    },\n    tooltips: {\n      callbacks: {\n        label: function (item, data) {\n          var label = data.datasets[item.datasetIndex].label || \"\";\n          var yLabel = item.yLabel;\n          var content = \"\";\n\n          if (data.datasets.length > 1) {\n            content += label;\n          }\n\n          content += \"$\" + yLabel + \"k\";\n          return content;\n        },\n      },\n    },\n  },\n  data1: (canvas) => {\n    return {\n      labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      datasets: [\n        {\n          label: \"Performance\",\n          data: [0, 20, 10, 30, 15, 40, 20, 60, 60],\n        },\n      ],\n    };\n  },\n  data2: (canvas) => {\n    return {\n      labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      datasets: [\n        {\n          label: \"Performance\",\n          data: [0, 20, 5, 25, 10, 30, 15, 40, 40],\n        },\n      ],\n    };\n  },\n};\n\n// Example 2 of Chart inside src/views/Index.js (Total orders - Card)\nlet chartExample2 = {\n  options: {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            callback: function (value) {\n              if (!(value % 10)) {\n                //return '$' + value + 'k'\n                return value;\n              }\n            },\n          },\n        },\n      ],\n    },\n    tooltips: {\n      callbacks: {\n        label: function (item, data) {\n          var label = data.datasets[item.datasetIndex].label || \"\";\n          var yLabel = item.yLabel;\n          var content = \"\";\n          if (data.datasets.length > 1) {\n            content += label;\n          }\n          content += yLabel;\n          return content;\n        },\n      },\n    },\n  },\n  data: {\n    labels: [\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n    datasets: [\n      {\n        label: \"Sales\",\n        data: [25, 20, 30, 22, 17, 29],\n        maxBarThickness: 10,\n      },\n    ],\n  },\n};\n\nmodule.exports = {\n  chartOptions, // used inside src/views/Index.js\n  parseOptions, // used inside src/views/Index.js\n  chartExample1, // used inside src/views/Index.js\n  chartExample2, // used inside src/views/Index.js\n};\n","export default __webpack_public_path__ + \"static/media/team-1-800x800.fa5a7ac2.jpg\";","export default __webpack_public_path__ + \"static/media/github.6c955556.svg\";","export default __webpack_public_path__ + \"static/media/google.eae9aa93.svg\";","import { Link } from \"react-router-dom\";\nimport React from \"react\";\n// reactstrap components\nimport {\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  Form,\n  FormGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Input,\n  InputGroup,\n  Navbar,\n  Nav,\n  Container,\n  Media,\n} from \"reactstrap\";\n\n  function getFormValues() {\n    const storedValues = localStorage.getItem(\"user\");\n    if (!storedValues)\n      return {\n        email: \"\",\n        message: \"\",\n        name: \"\",\n        telephone: \"\",\n      };\n    return JSON.parse(storedValues);\n  }\n\nconst AdminNavbar = (props) => {\n  const [user, setUser] = React.useState(getFormValues);\n\n\n    React.useEffect(() => {\n      localStorage.getItem(\"user\", JSON.stringify(user));\n    }, [user]);\n\n    console.log(\"User data\", user);\n\n     const logout= () => {\n        localStorage.clear();\n        window.location.href = '/';\n    }\n  return (\n    <>\n      <Navbar className=\"navbar-top navbar-dark\" expand=\"md\" id=\"navbar-main\">\n        <Container fluid>\n          <Link\n            className=\"h4 mb-0 text-white text-uppercase d-none d-lg-inline-block\"\n            to=\"/\"\n          >\n            {props.brandText}\n          </Link>\n          <Form className=\"navbar-search navbar-search-dark form-inline mr-3 d-none d-md-flex ml-lg-auto\">\n            <FormGroup className=\"mb-0\">\n              <InputGroup className=\"input-group-alternative\">\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText>\n                    <i className=\"fas fa-search\" />\n                  </InputGroupText>\n                </InputGroupAddon>\n                <Input placeholder=\"Search\" type=\"text\" />\n              </InputGroup>\n            </FormGroup>\n          </Form>\n          <Nav className=\"align-items-center d-none d-md-flex\" navbar>\n            <UncontrolledDropdown nav>\n              <DropdownToggle className=\"pr-0\" nav>\n                <Media className=\"align-items-center\">\n                  <span className=\"avatar avatar-sm rounded-circle\">\n                    <img\n                      alt=\"...\"\n                      src={\n                        require(\"../../assets/img/theme/team-4-800x800.jpg\")\n                          .default\n                      }\n                    />\n                  </span>\n                  <Media className=\"ml-2 d-none d-lg-block\">\n                    <span className=\"mb-0 text-sm font-weight-bold\">\n                      {user.first_name}\n                    </span>\n                  </Media>\n                </Media>\n              </DropdownToggle>\n              <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                <DropdownItem className=\"noti-title\" header tag=\"div\">\n                  <h6 className=\"text-overflow m-0\">Welcome!</h6>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-single-02\" />\n                  <span>My profile</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-settings-gear-65\" />\n                  <span>Settings</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-calendar-grid-58\" />\n                  <span>Activity</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-support-16\" />\n                  <span>Support</span>\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem href=\"#pablo\" onClick={(e) => logout()}>\n                  <i className=\"ni ni-user-run\" />\n                  <span>Logout</span>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Nav>\n        </Container>\n      </Navbar>\n    </>\n  );\n};\n\nexport default AdminNavbar;\n","\nimport { Container, Row, Col, Nav, NavItem, NavLink } from \"reactstrap\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <Row className=\"align-items-center justify-content-xl-between\">\n        <Col xl=\"6\">\n          <div className=\"copyright text-center text-xl-left text-muted\">\n            © {new Date().getFullYear()}{\" \"}\n            <p\n              className=\"font-weight-bold ml-1\"\n              href=\"\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              Qevla Inc\n            </p>\n          </div>\n        </Col>\n      </Row>\n    </footer>\n  );\n};\n\nexport default Footer;\n","\n/*eslint-disable*/\nimport { useState } from \"react\";\nimport { NavLink as NavLinkRRD, Link } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Collapse,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Media,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Progress,\n  Table,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nvar ps;\n\nconst Sidebar = (props) => {\n  const [collapseOpen, setCollapseOpen] = useState();\n  // verifies if routeName is the one active (in browser input)\n  const activeRoute = (routeName) => {\n    return props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  };\n  // toggles collapse between opened and closed (true/false)\n  const toggleCollapse = () => {\n    setCollapseOpen((data) => !data);\n  };\n  // closes the collapse\n  const closeCollapse = () => {\n    setCollapseOpen(false);\n  };\n  // creates the links that appear in the left menu / Sidebar\n  const createLinks = (routes) => {\n    return routes.map((prop, key) => {\n      return (\n        <NavItem key={key}>\n          <NavLink\n            to={prop.layout + prop.path}\n            tag={NavLinkRRD}\n            onClick={closeCollapse}\n            activeClassName=\"active\"\n          >\n            <i className={prop.icon} />\n            {prop.name}\n          </NavLink>\n        </NavItem>\n      );\n    });\n  };\n\n  const { bgColor, routes, logo } = props;\n  let navbarBrandProps;\n  if (logo && logo.innerLink) {\n    navbarBrandProps = {\n      to: logo.innerLink,\n      tag: Link,\n    };\n  } else if (logo && logo.outterLink) {\n    navbarBrandProps = {\n      href: logo.outterLink,\n      target: \"_blank\",\n    };\n  }\n\n  return (\n    <Navbar\n      className=\"navbar-vertical fixed-left navbar-light bg-white\"\n      expand=\"md\"\n      id=\"sidenav-main\"\n    >\n      <Container fluid>\n        {/* Toggler */}\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          onClick={toggleCollapse}\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        {/* Brand */}\n        {logo ? (\n          <NavbarBrand className=\"pt-0\" {...navbarBrandProps}>\n            <img\n              alt={logo.imgAlt}\n              className=\"navbar-brand-img\"\n              src={logo.imgSrc}\n            />\n          </NavbarBrand>\n        ) : null}\n        {/* User */}\n        <Nav className=\"align-items-center d-md-none\">\n          <UncontrolledDropdown nav>\n            <DropdownToggle nav className=\"nav-link-icon\">\n              <i className=\"ni ni-bell-55\" />\n            </DropdownToggle>\n            <DropdownMenu\n              aria-labelledby=\"navbar-default_dropdown_1\"\n              className=\"dropdown-menu-arrow\"\n              right\n            >\n              <DropdownItem>Action</DropdownItem>\n              <DropdownItem>Another action</DropdownItem>\n              <DropdownItem divider />\n              <DropdownItem>Something else here</DropdownItem>\n            </DropdownMenu>\n          </UncontrolledDropdown>\n          <UncontrolledDropdown nav>\n            <DropdownToggle nav>\n              <Media className=\"align-items-center\">\n                <span className=\"avatar avatar-sm rounded-circle\">\n                  <img\n                    alt=\"...\"\n                    src={\n                      require(\"../../assets/img/theme/team-1-800x800.jpg\")\n                        .default\n                    }\n                  />\n                </span>\n              </Media>\n            </DropdownToggle>\n            <DropdownMenu className=\"dropdown-menu-arrow\" right>\n              <DropdownItem className=\"noti-title\" header tag=\"div\">\n                <h6 className=\"text-overflow m-0\">Welcome!</h6>\n              </DropdownItem>\n              <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                <i className=\"ni ni-single-02\" />\n                <span>My profile</span>\n              </DropdownItem>\n              <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                <i className=\"ni ni-settings-gear-65\" />\n                <span>Settings</span>\n              </DropdownItem>\n              <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                <i className=\"ni ni-calendar-grid-58\" />\n                <span>Activity</span>\n              </DropdownItem>\n              <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                <i className=\"ni ni-support-16\" />\n                <span>Support</span>\n              </DropdownItem>\n              <DropdownItem divider />\n              <DropdownItem href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                <i className=\"ni ni-user-run\" />\n                <span>Logout</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledDropdown>\n        </Nav>\n        {/* Collapse */}\n        <Collapse navbar isOpen={collapseOpen}>\n          {/* Collapse header */}\n          <div className=\"navbar-collapse-header d-md-none\">\n            <Row>\n              {logo ? (\n                <Col className=\"collapse-brand\" xs=\"6\">\n                  {logo.innerLink ? (\n                    <Link to={logo.innerLink}>\n                      <img alt={logo.imgAlt} src={logo.imgSrc} />\n                    </Link>\n                  ) : (\n                    <a href={logo.outterLink}>\n                      <img alt={logo.imgAlt} src={logo.imgSrc} />\n                    </a>\n                  )}\n                </Col>\n              ) : null}\n              <Col className=\"collapse-close\" xs=\"6\">\n                <button\n                  className=\"navbar-toggler\"\n                  type=\"button\"\n                  onClick={toggleCollapse}\n                >\n                  <span />\n                  <span />\n                </button>\n              </Col>\n            </Row>\n          </div>\n          {/* Form */}\n          <Form className=\"mt-4 mb-3 d-md-none\">\n            <InputGroup className=\"input-group-rounded input-group-merge\">\n              <Input\n                aria-label=\"Search\"\n                className=\"form-control-rounded form-control-prepended\"\n                placeholder=\"Search\"\n                type=\"search\"\n              />\n              <InputGroupAddon addonType=\"prepend\">\n                <InputGroupText>\n                  <span className=\"fa fa-search\" />\n                </InputGroupText>\n              </InputGroupAddon>\n            </InputGroup>\n          </Form>\n          {/* Navigation */}\n          <Nav navbar>{createLinks(routes)}</Nav>\n          {/* Divider */}\n          <hr className=\"my-3\" />\n          {/* Heading */}\n        </Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nSidebar.defaultProps = {\n  routes: [{}],\n};\n\nSidebar.propTypes = {\n  // links that will be displayed inside the component\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the image src of the logo\n    imgSrc: PropTypes.string.isRequired,\n    // the alt for the img\n    imgAlt: PropTypes.string.isRequired,\n  }),\n};\n\nexport default Sidebar;\n","export const onboardingService = `${process.env.REACT_APP_API_BASE_URL}/api/user`;\r\nexport const authBaseUrl = `${process.env.REACT_APP_API_BASE_URL}/api/user`;\r\nexport const authUrl = `${process.env.REACT_APP_API_BASE_URL}/api/auth`;\r\n\r\n\r\n\r\nexport const base = process.env.REACT_APP_API_BASE_URL;\r\nexport const endpoints = {\r\n  //USER ONBOARDING RELATED\r\n  addUser: onboardingService.concat(`/signup`),\r\n  getDrivers: onboardingService.concat(`/get/all`),\r\n  getDriverById: onboardingService.concat(`/:id`),\r\n  getAdmins: onboardingService.concat(`/get/all`),\r\n  // getUserById: onboardingService.concat(`/\r\n  updateDriverById: onboardingService.concat(`/update/:id`),\r\n  // router.route(\"/status/:userId\").get(getRegistrationStatusById);\r\n  getDriverRegStatus: onboardingService.concat(`/status/:userId`),\r\n\r\n  //AUTH\r\n  login: authBaseUrl.concat(`/login`),\r\n  adminLogin: authBaseUrl.concat(`/admin-login`),\r\n  requestResetPassword: authUrl.concat(`/requestResetPassword`),\r\n  passwordReset: authUrl.concat(`/password-reset`),\r\n  //   register : authBaseUrl.concat(`\r\n};\r\n","import axios from \"axios\";\r\nimport { endpoints } from \"api-endpoints\";\r\n\r\nconst API_URL = \"/auth\";\r\n\r\nconst signup = (email, password) => {\r\n  return axios\r\n    .post(endpoints.addUSer, {\r\n      email,\r\n      password,\r\n    })\r\n    .then((response) => {\r\n      if (response.data.accessToken) {\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n      }\r\n\r\n      return response.data;\r\n    });\r\n};\r\n\r\nconst login = (email, password) => {\r\n  return axios\r\n    .post(endpoints.adminLogin, {\r\n      email,\r\n      password,\r\n    })\r\n    .then((response) => {\r\n      if (response.data.Token) {\r\n        window.localStorage.setItem(\"user\", JSON.stringify(response.data.user));\r\n      }\r\n      console.log(response.data.user);\r\n      return response.data;\r\n    });\r\n};\r\n\r\nconst requestPasswordReset = (email) => {\r\n  return axios\r\n    .post(endpoints.requestResetPassword, {\r\n      email,\r\n    })\r\n    .then((response) => {\r\n      if (response.data) {\r\n        window.localStorage.setItem(\"passReq\", JSON.stringify(response.data));\r\n      }\r\n      console.log(response.data);\r\n      return response.data;\r\n    });\r\n};\r\n\r\nconst passwordReset = (email) => {\r\n  return axios\r\n    .post(endpoints.passwordReset, {\r\n      email,\r\n    })\r\n    .then((response) => {\r\n      if (response.data) {\r\n        window.localStorage.setItem(\"passReq\", JSON.stringify(response.data));\r\n      }\r\n      console.log(response.data);\r\n      return response.data;\r\n    });\r\n};\r\n\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n  return JSON.parse(localStorage.getItem(\"user\"));\r\n};\r\n\r\nconst authService = {\r\n  signup,\r\n  login,\r\n  logout,\r\n  requestPasswordReset,\r\n  getCurrentUser,\r\n};\r\n\r\nexport default authService;\r\n","\r\nexport const flagYesOrNoArr: any = [\r\n  { name: true, label_value: \"Yes\", id: true },\r\n  { name: false, label_value: \"No\", id: false },\r\n];\r\nexport const approvalTypesArr: any = [\r\n  { name: true, label_value: \"Auto\" },\r\n  { name: false, label_value: \"Manual\" },\r\n];\r\nexport const approvalOptionArr: any = [\r\n  { name: \"sequential\", label_value: \"Sequential\" },\r\n  { name: \"non_sequential\", label_value: \"Non Sequential\" },\r\n];\r\nexport const authorizationTokenFlagArr: any = [\r\n  { name: true, label_value: \"All\" },\r\n  { name: false, label_value: \"All but one must have token\" },\r\n];\r\nexport const suspenseAccountResponseArr: any = [\r\n  { id: \"2\", code: \"2\", name: \"Suspense 2\" },\r\n  { id: \"1\", code: \"1\", name: \"Suspense 1\" },\r\n];\r\nexport const authenticationModesResponseArr: any = [\r\n  { id: \"2\", code: \"2\", name: \"Inbuilt\" },\r\n  { id: \"1\", code: \"1\", name: \"AD\" },\r\n];\r\nexport const userRightsResponseArr: any = [\r\n  { id: \"VIEW\", code: \"2\", name: \"VIEW\" },\r\n  { id: \"TRANSFER\", code: \"1\", name: \"TRANSFER\" },\r\n];\r\nexport const signatoryTypeArr: any = [\r\n  { name: \"individual\", label_value: \"Individual\" },\r\n  { name: \"group\", label_value: \"Group\" },\r\n];\r\nexport const tokenTypeArr: any = [\r\n  { id: \"2\", code: \"2\", name: \"HARD\" },\r\n  { id: \"1\", code: \"1\", name: \"SOFT\" },\r\n];\r\nexport const defaultNarrationArr: any = [\r\n  {\r\n    id: \"sender_narration\",\r\n    name: \"sender_narration\",\r\n    label_value: \"Sender narration\",\r\n  },\r\n  {\r\n    id: \"append_unique_id\",\r\n    name: \"append_unique_id\",\r\n    label_value: \"Append unique ID\",\r\n  },\r\n];\r\nexport const debitOptionArr: any = [\r\n  { name: \"lump_sum\", label_value: \"Lump sum (recommended)\" },\r\n  { name: \"debit_option\", label_value: \"Debit per transaction\" },\r\n];\r\nexport const platformsResponseArr: any = [\r\n  { id: \"MOBILE\", name: \"MOBILE\", label_value: \"Mobile\" },\r\n  { id: \"WEB\", name: \"WEB\", label_value: \"Web\" },\r\n];\r\n\r\nexport const currencyArr: any = [\r\n  { id: \"NGN\", name: \"Naira\", label_value: \"Naira\" },\r\n];\r\n// ,\r\n//   { id: \"EUR\", name: \"Euro\", label_value: \"Euro\" },\r\n//   { id: \"USD\", name: \"Dollar\", label_value: \"Dollar\" },\r\n//   { id: \"GBP\", name: \"Pounds\", label_value: \"Pounds\" },\r\nexport const requestTypeArr: any = [\r\n  { id: \"PENDING\", name: \"Pending\", label_value: \"Pending\" },\r\n  { id: \"APPROVED\", name: \"Approved\", label_value: \"Approved\" },\r\n  { id: \"DECLINED\", name: \"Declined\", label_value: \"Declined\" },\r\n];\r\nexport const regNumberPrefixArr: any = [\r\n  { id: \"RC\", name: \"RC\", label_value: \"Registered Company\" },\r\n  { id: \"BN\", name: \"BN\", label_value: \"Business Name\" },\r\n];\r\nexport const nextOfKinRelationshipArr: any = [\r\n  { id: \"BROTHER\", name: \"Brother\", label_value: \"Brother\" },\r\n  { id: \"SISTER\", name: \"Sister\", label_value: \"Sister\" },\r\n  { id: \"MOTHER\", name: \"Mother\", label_value: \"Mother\" },\r\n  { id: \"FATHER\", name: \"Father\", label_value: \"Father\" },\r\n  { id: \"SPOUSE\", name: \"Spouse\", label_value: \"Spouse\" },\r\n  { id: \"OTHERS\", name: \"Others\", label_value: \"Others\" },\r\n];\r\nexport const paymentFrequencyArr: any = [\r\n  { id: \"DAILY\", name: \"Daily\", label_value: \"Daily\" },\r\n  { id: \"MONTHLY\", name: \"Monthly\", label_value: \"Monthly\" },\r\n  { id: \"WEEKLY\", name: \"Weekly\", label_value: \"Weekly\" },\r\n  { id: \"BI_WEEKLY\", name: \"Bi-weekly\", label_value: \"Bi-weekly\" },\r\n];\r\nexport const complainTypesArr: any = [\r\n  {\r\n    id: \"SERVICE_REQUEST\",\r\n    name: \"Service request complaints\",\r\n    label_value: \"Service request complaints\",\r\n  },\r\n  {\r\n    id: \"TRANSACTION_COMPLAINTS\",\r\n    name: \"Transaction complaints\",\r\n    label_value: \"Transaction complaints\",\r\n  },\r\n];\r\nexport const stateInCountryArr: any = [\r\n  { id: \"LAG\", name: \"Lagos\", label_value: \"Lagos\" },\r\n  { id: \"ABJ\", name: \"Abuja\", label_value: \"Abuja\" },\r\n  { id: \"RIVERS\", name: \"Rivers\", label_value: \"Rivers\" },\r\n];\r\nexport const deliveryLocationsArr: any = [\r\n  { id: \"LEKKI\", name: \"Lekki\", label_value: \"Lekki\" },\r\n  { id: \"SURULERE\", name: \"Surulere\", label_value: \"Surulere\" },\r\n  { id: \"CALABAR\", name: \"Calabar\", label_value: \"Calabar\" },\r\n];\r\nexport const transferTypesOptionsArr: any = [\r\n  {\r\n    id: \"OWN_ACCOUNT_TRANSFER\",\r\n    name: \"Own account transfer\",\r\n    label_value: \"Own account transfer\",\r\n  },\r\n  {\r\n    id: \"CORPORATE_TO_PARALLEX\",\r\n    name: \"Transfer to parallex account\",\r\n    label_value: \"Transfer to parallex account\",\r\n  },\r\n  {\r\n    id: \"OTHER_BANKS\",\r\n    name: \"Transfer to other banks\",\r\n    label_value: \"Transfer to other banks\",\r\n  },\r\n  {\r\n    id: \"TRANSFER_TO_BENEFICIARY\",\r\n    name: \"Transfer to beneficiaries\",\r\n    label_value: \"Transfer to beneficiaries\",\r\n  },\r\n  {\r\n    id: \"INTERNATIONAL_TRANSFER\",\r\n    name: \"Transfer to international banks\",\r\n    label_value: \"Transfer to international banks\",\r\n  },\r\n  {\r\n    id: \"BULK_UPLOAD\",\r\n    name: \"Bulk upload \",\r\n    label_value: \"Bulk upload\",\r\n  },\r\n];\r\n\r\nexport const serviceRequestTypesOptionsArr: any = [\r\n  {\r\n    id: \"CHEQUEBOOK_REQUEST\",\r\n    name: \"Chequebook request\",\r\n    label_value: \"Chequebook request\",\r\n  },\r\n  {\r\n    id: \"STOP_CHEQUE_REQUEST\",\r\n    name: \"Stop cheque requests\",\r\n    label_value: \"Stop cheque requests\",\r\n  },\r\n  {\r\n    id: \"ISSUE_DEMAND_DRAFT_REQUEST\",\r\n    name: \"Issue demand draft requests\",\r\n    label_value: \"Issue demand draft requests\",\r\n  },\r\n  {\r\n    id: \"STANDING_ORDER_REQUEST\",\r\n    name: \"Standing order requests\",\r\n    label_value: \"Standing order requests\",\r\n  },\r\n  {\r\n    id: \"ACCOUNT_STATEMENT_REQUEST\",\r\n    name: \"Account statement requests\",\r\n    label_value: \"Account statement requests\",\r\n  },\r\n  {\r\n    id: \"TRANSACTION_COMPLAINT_REQUEST\",\r\n    name: \"Transaction complaint requests\",\r\n    label_value: \"Transaction complaint requests\",\r\n  },\r\n];\r\n\r\nexport const deliveryModeOptionsArr: any = [\r\n  { id: \"COURIER\", name: \"Courier\", label_value: \"Courier\" },\r\n  { id: \"BANK_LOCATION\", name: \"Bank location\", label_value: \"Bank location\" },\r\n];\r\nexport const accountTypeOptionsArr: any = [\r\n  { id: \"ODA\", name: \"Current\", label_value: \"Current\" },\r\n  { id: \"SBA\", name: \"Savings\", label_value: \"Savings\" },\r\n];\r\nexport const titleOptionsArr: any = [\r\n  { id: \"MR\", name: \"Mr.\", label_value: \"Mr.\" },\r\n  { id: \"MRS\", name: \"Mrs.\", label_value: \"Mrs.\" },\r\n  { id: \"DR\", name: \"Dr.\", label_value: \"Dr.\" },\r\n  { id: \"CHIEF\", name: \"Chief\", label_value: \"Chief\" },\r\n  { id: \"PASTOR\", name: \"Pastor\", label_value: \"Pastor\" },\r\n  { id: \"REVD.\", name: \"Revd.\", label_value: \"Revd.\" },\r\n];\r\nexport const genderOptionsArr: any = [\r\n  { id: \"MALE\", name: \"Male\", label_value: \"Male\" },\r\n  { id: \"FEMALE\", name: \"Female\", label_value: \"Female\" },\r\n];\r\nexport const religionOptionsArr: any = [\r\n  { id: \"CHRISTIANITY\", name: \"Christianity\", label_value: \"Christianity\" },\r\n  { id: \"ISLAM\", name: \"Islam\", label_value: \"Islam\" },\r\n  { id: \"TRADITIONAL\", name: \"Traditional\", label_value: \"Traditional\" },\r\n  { id: \"OTHERS\", name: \"Others\", label_value: \"Others\" },\r\n];\r\nexport const idTypeOptionsArr: any = [\r\n  {\r\n    id: \"NATIONAL_ID\",\r\n    name: \"National identification number\",\r\n    label_value: \"National identification number\",\r\n  },\r\n  {\r\n    id: \"DRIVER_LICENCE\",\r\n    name: \"Driver's licence\",\r\n    label_value: \"Driver's licence\",\r\n  },\r\n  {\r\n    id: \"INTERNATIONAL_PASSPORT\",\r\n    name: \"International passport\",\r\n    label_value: \"International passport\",\r\n  },\r\n];\r\n\r\nexport const priorityLevelOptionsArr: any = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n\r\nexport const countriesArr: any = [\r\n  { id: \"NG\", name: \"Nigeria\", label_value: \"Nigeria\" },\r\n  { id: \"US\", name: \"USA\", label_value: \"USA\" },\r\n  { id: \"NON-US\", name: \"Other countries\", label_value: \"Other countries\" },\r\n];\r\nexport const beneficiaryTypesOptionsArr: any = [\r\n  { id: \"SINGLE\", name: \"Single\", label_value: \"Single\" },\r\n  { id: \"MULTIPLE\", name: \"Multiple\", label_value: \"Multiple\" },\r\n];\r\nexport const debitModeOptionsArr: any = [\r\n  {\r\n    id: 1,\r\n    name: \"Single Debit Multiple Credit\",\r\n    label_value: \"Single Debit Multiple Credit\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Single Debit, Single Credit\",\r\n    label_value: \"Single Debit, Single Credit\",\r\n  },\r\n];\r\nexport const scheduleTransferActionOptionsArr: any = [\r\n  {\r\n    id: \"NEW_SCHEDULE\",\r\n    name: \"Create new schedule\",\r\n    label_value: \"Create new schedule\",\r\n  },\r\n  {\r\n    id: \"CANCEL_SCHEDULE\",\r\n    name: \"Cancel previous schedule\",\r\n    label_value: \"Cancel previous schedule\",\r\n  },\r\n  {\r\n    id: \"EDIT_PREVIOUS_SCHEDULE\",\r\n    name: \"Edit previous schedule\",\r\n    label_value: \"Edit previous schedule\",\r\n  },\r\n];\r\nexport const bankOptionsArr = [\r\n  {\r\n    id: \"UBA\",\r\n    name: \"United bank for Africa\",\r\n    label_value: \"United bank for Africa\",\r\n  },\r\n  { id: \"GTB\", name: \"GTB\", label_value: \"GTB\" },\r\n  {\r\n    id: \"FBN\",\r\n    name: \"First Bank of Nigeria\",\r\n    label_value: \"First Bank of Nigeria\",\r\n  },\r\n];\r\nexport const businessSectorsOptionsArr = [\r\n  {\r\n    id: \"MSME\",\r\n    name: \"MSME\",\r\n    label_value: \"MSME\",\r\n  },\r\n  { id: \"COMMERCIAL\", name: \"Commercial\", label_value: \"Commercial\" },\r\n  {\r\n    id: \"CORPORATE\",\r\n    name: \"Corporate\",\r\n    label_value: \"Corporate\",\r\n  },\r\n  {\r\n    id: \"PUBLIC_SECTOR\",\r\n    name: \"Public sector\",\r\n    label_value: \"Public sector\",\r\n  },\r\n];\r\nexport const businessNaturesOptionsArr = [\r\n  {\r\n    id: \"COMMERCE\",\r\n    name: \"Commerce\",\r\n    label_value: \"Commerce\",\r\n  },\r\n  { id: \"MANUFACTURING\", name: \"Manufacturing\", label_value: \"Manufacturing\" },\r\n  {\r\n    id: \"TEXTILE\",\r\n    name: \"Textile\",\r\n    label_value: \"Textile\",\r\n  },\r\n  {\r\n    id: \"IT\",\r\n    name: \"Information Technology\",\r\n    label_value: \"Information Technology\",\r\n  },\r\n];\r\nexport const companyCategoryOptionsArr = [\r\n  {\r\n    id: \"COMMERCE\",\r\n    name: \"Commerce\",\r\n    label_value: \"Commerce\",\r\n  },\r\n  { id: \"MANUFACTURING\", name: \"Manufacturing\", label_value: \"Manufacturing\" },\r\n  {\r\n    id: \"TEXTILE\",\r\n    name: \"Textile\",\r\n    label_value: \"Textile\",\r\n  },\r\n  {\r\n    id: \"IT\",\r\n    name: \"Information Technology\",\r\n    label_value: \"Information Technology\",\r\n  },\r\n];\r\nexport const businessTypesOptionsArr = [\r\n  {\r\n    id: \"LTD\",\r\n    name: \"Limited Liability Company\",\r\n    label_value: \"LTD\",\r\n  },\r\n  {\r\n    id: \"SOLE_PROPIETORSHIP\",\r\n    name: \"Sole propietorship\",\r\n    label_value: \"Sole propietorship\",\r\n  },\r\n  {\r\n    id: \"PARTNERSHIP\",\r\n    name: \"Partnership\",\r\n    label_value: \"Partnership\",\r\n  },\r\n  {\r\n    id: \"MDAS\",\r\n    name: \"MDAs (Ministry, Departments and Agencies)\",\r\n    label_value: \"MDAs (Ministry, Departments and Agencies)\",\r\n  },\r\n];\r\nexport const maritalStatusOptionsArr = [\r\n  {\r\n    id: \"SINGLE\",\r\n    name: \"Single\",\r\n    label_value: \"Single\",\r\n  },\r\n  {\r\n    id: \"MARRIED\",\r\n    name: \"Married\",\r\n    label_value: \"Married\",\r\n  },\r\n  {\r\n    id: \"WIDOW(ER)\",\r\n    name: \"Widow(er)\",\r\n    label_value: \"Widow(er)\",\r\n  },\r\n  {\r\n    id: \"DIVORCED\",\r\n    name: \"Divorced\",\r\n    label_value: \"Divorced\",\r\n  },\r\n];\r\n\r\nexport const responseCodes = {\r\n  NO_RECORD_FOUND: \"25\",\r\n  FAILED: \"01\",\r\n  SUCCESSFUL: \"00\",\r\n  BAD_REQUEST: \"400\",\r\n  UNAUTHORIZED: \"401\",\r\n  INVALID_GRANT: \"INVALID_GRANT\",\r\n  SERVICE_UNAVAILABLE: \"503\",\r\n  CHANGE_PASSWORD: \"CHANGE_PASSWORD\",\r\n  ERROR_OCCURRED: \"ERROR OCCURRED\",\r\n  ACCESS_DENIED: \"ACCESS DENIED\",\r\n  PAGE_NOT_FOUND: \"404\",\r\n};\r\n\r\nexport const menuCodes = {\r\n  CREATE_MENU: \"21\",\r\n  ASSIGN_MENU_TO_ROLE: \"14\",\r\n  UPDATE_MENU: \"21\",\r\n  RESET_PASSWORD: \"4\",\r\n  CHANGE_PASSWORD: \"4\",\r\n  ONBOARD_CORPORATE_SME: \"3\",\r\n  ONBOARD_CORPORATE_ADMIN: \"21\",\r\n  APPROVE_REQUEST: \"21\",\r\n  CREATE_CORPORATE: \"3\",\r\n  CREATE_MANDATE: \"7\",\r\n  CREATE_USER_ACCOUNT_ACCESS: \"9\",\r\n  FUND_TRANSFER: \"25\",\r\n  UPDATE_USER_PROFILE: \"4\",\r\n  TRANSFER_WITHIN: \"25\",\r\n  ENABLE_OR_DISABLE_USER: \"4\",\r\n  ADD_ACCOUNT_TO_CORPORATE: \"8\",\r\n  CREATE_CORPORATE_DEPARTMENT: \"13\",\r\n  UPDATE_USER_DETAILS: \"4\",\r\n  UPDATE_DEPARTMENT_DETAILS: \"13\",\r\n\r\n};\r\n\r\nexport const forbiddenResponseBody = {\r\n  responseCode: \"403\",\r\n  description: \"You do not have sufficient right for this operation\",\r\n};\r\n\r\nexport const transactionLimit = 100000000;\r\n\r\nexport const extraSMEDetails = {\r\n  tokenEnabled: true,\r\n  soleProprietor: true,\r\n  hasToken: true,\r\n  sme: true,\r\n  verifierEnabled: false,\r\n  verifierTokenEnabled: false,\r\n  inputterTokenEnabled: true,\r\n  authorizerTokenEnabled: true,\r\n  corporateTypeId: \"4\",\r\n};\r\n\r\nexport const metricValues = {\r\n  resendTime: 10,\r\n  length: 6,\r\n  bvnLength: 11,\r\n  transactionPinLength: 8,\r\n  pinValidationTimeout: 3000,\r\n  maxFileSize: 4000000,\r\n  accountNumberLength: 10,\r\n  timeToPageReloadAfterSuccess: 2000,\r\n  monthlyTurnoverMinimum: 0,\r\n  monthlyTurnoverMaximum: 100,\r\n  monthlyTurnoverStep: 10,\r\n  monthlyTurnoverMultiplier: 1000000,\r\n  corporateCodeMinLength: 2,\r\n  usernameMinLength: 4,\r\n  taxIdLength: 13,\r\n  minRegNumberLength: 3,\r\n  minPhoneNumberLength: 11,\r\n  minCorporateCodeLength: 4,\r\n  solePropietorBusinessTypeCode: \"2\",\r\n  minimumTransferLimit: 1,\r\n};\r\n\r\nexport const baseUrl = window.location.origin;\r\n\r\nexport const currentAppVersion = {\r\n  version: process.env.REACT_APP_BUILD_VERSION,\r\n};\r\n\r\nexport const hiddenMenuFieldsArr = [\r\n  \"authStat\",\r\n  \"recordStat\",\r\n  \"amount\",\r\n  \"visible\",\r\n  \"lastUpdatedById\",\r\n  \"lastUpdatedDate\",\r\n  \"transactionMenu\",\r\n  \"menuAvailability\",\r\n  \"transactionTypeId\",\r\n  \"defaultMenu\",\r\n  \"requestHeader\",\r\n  \"menuHeader\",\r\n  \"moduleId\",\r\n  \"newMenu\",\r\n  \"menuHeaderId\",\r\n  \"displayOrder\",\r\n  \"createdById\",\r\n  \"chargeAmount\",\r\n  \"expectedSignatoryCount\",\r\n  \"actualSignatoryCount\",\r\n  \"financial\",\r\n  \"id\",\r\n  \"lastUpdatedById\",\r\n  \"lastUpdatedDate\",\r\n  \"authStat\",\r\n  \"recordStat\",\r\n  \"corporateId\",\r\n  \"mandateId\",\r\n  \"mandateSignatoryId\",\r\n  \"mandateTypeId\",\r\n  \"expectedSignatoryCount\",\r\n  \"actualSignatoryCount\",\r\n  \"visible\",\r\n  \"transactionTypeId\",\r\n  \"transactionDescription\",\r\n  \"amount\",\r\n  \"approvalLevel\",\r\n  \"expectedUserApprovalId\",\r\n  \"expectedGroupApprovalId\",\r\n  \"debitAccountNumber\",\r\n  \"menuId\",\r\n  \"chargeAmount\",\r\n];\r\n\r\nexport const menuOpsInvisibleItems = [\r\n  \"authStat\",\r\n  \"recordStat\",\r\n  \"amount\",\r\n  \"visible\",\r\n  \"lastUpdatedById\",\r\n  \"lastUpdatedDate\",\r\n  \"transactionMenu\",\r\n  \"menuAvailability\",\r\n  \"transactionTypeId\",\r\n  \"defaultMenu\",\r\n  \"requestHeader\",\r\n  \"moduleId\",\r\n  \"menuHeaderId\",\r\n  \"displayOrder\",\r\n  \"createdById\",\r\n  \"name\",\r\n  \"code\",\r\n  \"platformId\",\r\n  \"roleId\",\r\n  \"id\",\r\n  \"createdDate\",\r\n  \"createdBy\",\r\n  \"parentMenu\",\r\n  \"childMenu\",\r\n  \"transactionMenu\",\r\n  \"menuHeader\",\r\n  \"newMenu\",\r\n  \"financial\",\r\n];\r\n\r\nexport const radiosItems = [\"parentMenu\", \"childMenu\", \"transactionMenu\"];\r\n\r\nexport const visibleMenuFieldItems = [\r\n  \"menuController\",\r\n  \"mobileMenuController\",\r\n  \"serviceEndpoint\",\r\n  \"parentMenu\",\r\n  \"childMenu\",\r\n  \"menuName\",\r\n  \"menuAvailability\",\r\n  \"transactionMenu\",\r\n  \"description\",\r\n];\r\n\r\nexport const searchableMenufieldsArr = [\"createdById\", \"menuTypeId\"];\r\n\r\nexport const rangePickerRequestTypesArr = [\"APPROVED\", \"DECLINED\"];\r\n\r\nexport const visibleTransactionReceiptFieldsArr = [\r\n  \"tranDate\",\r\n  \"tranStatus\",\r\n  \"tranNarration\",\r\n  \"tranAmount\",\r\n  \"beneficiariesAcc\",\r\n  \"beneficiariesName\",\r\n  \"bankName\"\r\n];\r\n\r\nexport const emailPattern =\r\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\nexport const TINPattern = /^(\\d{8})-\\d{4}$/;\r\nexport const accountNumberPattern = /^(\\d{10})$/;\r\nexport const bvnPattern = /^(\\d{11})$/;\r\nexport const environmentV = \"NORMAL\";\r\nexport const corporateCodePrefix = \"PAR\";\r\nexport const corporateNameSubstringLength = 3;\r\nexport const defaultApprovalLimit = 10000;\r\nexport const defaultTransferLimit = 10000;\r\nexport const defaultTransactionLimit = 100000000;\r\nexport const defaultCurrency = \"NGN\";\r\nexport const defaultAppValues = {\r\n  defaultPaymentChannel: 1,\r\n  corporateChannelId: \"1\",\r\n  defaultTnxFees: \"50\",\r\n  showOnlyCorporateProducts: true,\r\n  corporateProductsFlag: \"C\",\r\n  parallexBankCode: !process.env.NODE_ENV || process.env.NODE_ENV === 'development' ? \"999015\" : \"000030\",\r\n  parallexBankName: \"Parallex Bank\",\r\n  accountType: \"CASA\",\r\n  businessTypeCodeSolePropietor: \"2\",\r\n  typeIdForOtherNonSME: \"3\",\r\n  senderPaysFee: true,\r\n  idleTimeoutInMs: 600000,\r\n  defaultCurrency: \"NGN\",\r\n  defaultCurrencyName: \"Nigerian Naira (NGN)\",\r\n  defaultCountryOfIncorporation: \"NGN\",\r\n  defaultBusinessTypePrefix: \"RC\",\r\n  debitMode: \"1\",\r\n  groupUserTypeId: \"2\",\r\n  alertTimeout: 5000,\r\n  baseCurrency: \"EUR\",\r\n  adminMakerUserTypeId: \"4\",\r\n  adminCheckerUserTypeId: \"3\",\r\n  smeCorporateTypeId: \"4\",\r\n  smeBusinessTypeId: \"2\",\r\n  channel: \"WEB\",\r\n  ftChannel: \"2\",\r\n  isFtDirectToParallex: false,\r\n  transactionLocation: \"LAGOS\",\r\n  postingOptionId: \"1\",\r\n  suspenseAccountId: \"1\",\r\n  narrationOptionId: \"1\",\r\n  smeAdminBusinessTypeDefaults: {\r\n    approvalLimit: defaultApprovalLimit,\r\n    transferLimit: defaultTransferLimit,\r\n    globalAccountAccessEnabled: true,\r\n    signatory: true,\r\n    autoApprovalEnabled: true,\r\n    tokenEnabled: true,\r\n    tokenDelivered: false,\r\n    viewBalanceEnabled: true,\r\n    authenticationModeId: 1,\r\n    userTypeId: \"1\",\r\n  },\r\n  smeCorporateBusinessTypeDefaults: {\r\n    autoApprovalEnabled: true,\r\n    verifierTokenEnabled: false,\r\n    inputterTokenEnabled: true,\r\n    authorizerTokenEnabled: true,\r\n    verifierEnabled: false,\r\n    hasToken: true,\r\n    soleProprietor: true,\r\n    sme: true,\r\n  },\r\n  transferTypesString: \"Transfer\",\r\n  mandateTypes: {\r\n    accountBasedMandateType: \"1\",\r\n    transactionTypeBasedMandateType: \"2\",\r\n    moduleBasedMandateType: \"3\",\r\n    deptBasedMandateType: \"4\",\r\n    genericBasedMandateType: \"5\",\r\n    amountBasedMandateType: \"6\",\r\n  },\r\n};\r\nexport const appUserRoles = {\r\n  SYSTEM_WIDE_MAKER: 2,\r\n  SYSTEM_WIDE_CHECKER: 1,\r\n  REGULAR_CORPORATE_MAKER: 3,\r\n  REGULAR_CORPORATE_CHECKER: 4,\r\n};\r\nexport const pageFlows = {\r\n  ACCOUNT_CREATION: \"account_creation\",\r\n  CORPORATE_PROFILING: \"corporate_profiling\",\r\n  CORPORATE_ONBOARDING: \"corporate_onboarding\",\r\n};\r\nexport const geolocationFinderUrl =\r\n  \"https://geolocation-db.com/json/0f761a30-fe14-11e9-b59f-e53803842572\";\r\n// export const apiKeyForForexApi = \"01a06eaf0d0836be23655de6276542d5\";\r\n// export const forexApiUrl =\r\n//   \"http://api.exchangeratesapi.io/v1/latest?access_key=\";\r\n","import axios, { AxiosInstance } from \"axios\";\r\nimport { authBaseUrl } from \"../api-endpoints\";\r\nimport { encryptStorage } from \"../utils/encryptor\";\r\nimport {\r\n  clearTimeouts,\r\n  isEmptyString,\r\n  isNullOrUndefined,\r\n  isTokenCloseToExpiry,\r\n  tokenRefreshTimeout,\r\n  tokenRequeryProcessing,\r\n} from \"../utils/tools\";\r\nimport { handleMyErrors } from \"./error-handler-service\";\r\nimport queryString from \"query-string\";\r\n\r\nconst myOauth2Axios: AxiosInstance = axios.create({\r\n  baseURL: \"\",\r\n});\r\nmyOauth2Axios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\nmyOauth2Axios.defaults.headers.post[\"Accept\"] = \"application/json\";\r\nmyOauth2Axios.defaults.timeout = 120000;\r\nmyOauth2Axios.interceptors.request.use((request) => {\r\n  return request;\r\n});\r\n\r\nfunction setJwt(jwt: string | null) {\r\n  myOauth2Axios.defaults.headers.common[\"Authorization\"] = `Bearer ${jwt}`;\r\n}\r\n\r\nfunction getRefreshToken() {\r\n  let tokenVal = encryptStorage.getItem(\"refreshToken\");\r\n  return tokenVal;\r\n}\r\n\r\nfunction getJwt() {\r\n  let tokenVal: string = myOauth2Axios.defaults.headers.common[\"Authorization\"];\r\n\r\n  if (!isNullOrUndefined(tokenVal)) {\r\n    let tokenValSplit = tokenVal.split(\" \");\r\n    if (tokenValSplit.length > 1 && tokenValSplit[1].length > 0) {\r\n      return tokenVal;\r\n    } else {\r\n      return null;\r\n    }\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport const listenForTokenExpiry = async () => {\r\n  let expiresAt = encryptStorage.getItem(\"expiresAt\");\r\n  if (isTokenCloseToExpiry(Number(expiresAt) ?? -1)) {\r\n    await refreshToken();\r\n  }\r\n};\r\n\r\nexport const refreshToken = async () => {\r\n  try {\r\n    let refT = getRefreshToken();\r\n    if (!isNullOrUndefined(refT) || !isEmptyString(refT)) {\r\n      const options = {\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          Authorization: \"Basic \".concat(\r\n            process.env.REACT_APP_BASIC_AUTH ?? \"\"\r\n          ),\r\n        },\r\n      };\r\n      const url = `${authBaseUrl}/oauth/token`;\r\n      const { status, data } = await myOauth2Axios.post(\r\n        url,\r\n        queryString.stringify({\r\n          grant_type: \"refresh_token\",\r\n          client_id: \"SYSTEM\",\r\n          refresh_token: refT,\r\n        }),\r\n        options\r\n      );\r\n\r\n      if (status === 200 && data) {\r\n        const jwtToken = data.access_token;\r\n        clearTimeouts(tokenRefreshTimeout);\r\n        encryptStorage.setItem(\"refreshToken\", data.refresh_token);\r\n        tokenRequeryProcessing(jwtToken);\r\n\r\n        // recursiveCountdownTo(tRes.tokenRequeryInterval, true);\r\n        httpServiceInterfaceOauth2.setJwt(jwtToken);\r\n        return data;\r\n      }\r\n    }\r\n  } catch (err) {\r\n    httpServiceInterfaceOauth2.setJwt(\"\");\r\n    return handleMyErrors(err);\r\n  }\r\n};\r\n\r\nconst doGet = async (url: string, _config?: any) => {\r\n  let resData: any = {};\r\n  try {\r\n    // if (httpServiceInterfaceOauth2.getJwt() === null) {\r\n    //   await refreshToken();\r\n    // }\r\n    const { data } = await myOauth2Axios.get(url);\r\n    return data;\r\n  } catch (err) {\r\n    resData = handleMyErrors(err);\r\n  }\r\n  return resData;\r\n};\r\n\r\nconst doPost = async (url: string, requestBody: any, config: any = {}) => {\r\n  let resData: any;\r\n  try {\r\n    // await authHttpForUser();\r\n    const { data } = await myOauth2Axios.post(url, requestBody, config);\r\n    return data;\r\n  } catch (err) {\r\n    resData = handleMyErrors(err);\r\n  }\r\n  return resData;\r\n};\r\n\r\nconst doPut = async (url: string, requestBody: any, config: any = {}) => {\r\n  let resData: any;\r\n  try {\r\n    // await authHttpForUser();\r\n    const { data } = await myOauth2Axios.put(url, requestBody, config);\r\n    return data;\r\n  } catch (err) {\r\n    resData = handleMyErrors(err);\r\n  }\r\n  return resData;\r\n};\r\n\r\nexport const httpServiceInterfaceOauth2 = {\r\n  myAxios: axios,\r\n  setJwt: setJwt,\r\n  // setRefreshToken: setRefreshToken,\r\n  getJwt: getJwt,\r\n  get: doGet,\r\n  post: doPost,\r\n  put: doPut,\r\n};\r\n","export const encryptStorage = sessionStorage;\r\n","import { generateRandomChars, generateRandomNumber } from \"./helpers\";\r\nimport {\r\n  corporateCodePrefix,\r\n  corporateNameSubstringLength,\r\n  defaultAppValues,\r\n  metricValues,\r\n  responseCodes,\r\n} from \"./static\";\r\nimport { format } from \"date-fns\";\r\nimport moment from \"moment\";\r\nimport {\r\n  httpServiceInterfaceOauth2,\r\n  refreshToken,\r\n} from \"../services/http-service-oauth\";\r\nimport { encryptStorage } from \"./encryptor\";\r\n\r\nlet tokenCounterTimeoutId = -1;\r\n\r\nexport const tokenRequeryProcessing = (accessToken: string) => {\r\n  let _tDet = parseJwt(accessToken);\r\n  let expiresAt = _tDet?.exp;\r\n  let expiresAt_ms = expiresAt;\r\n  let nowNow = moment.now();\r\n  // let tokenRequeryInterval = (expiresAt * 1000 - nowNow) * 0.8;\r\n  let tokenRequeryInterval = 180000;\r\n  encryptStorage.setItem(\"nowNow\", String(nowNow));\r\n  encryptStorage.setItem(\"expiresAt\", expiresAt_ms);\r\n  encryptStorage.setItem(\"requeryTime\", String(nowNow + tokenRequeryInterval));\r\n  encryptStorage.setItem(\"tokenRequeryInterval\", String(tokenRequeryInterval));\r\n\r\n  return { tokenDetails: _tDet, tokenRequeryInterval: tokenRequeryInterval };\r\n};\r\nexport const recursiveCountdownTo = async (\r\n  countdownVal: any,\r\n  isTokenRefreshed = false\r\n) => {\r\n  if (countdownVal < 1000) {\r\n    return;\r\n  }\r\n  setTimeout(() => {\r\n    if (!isTokenRefreshed) {\r\n      refreshToken();\r\n    }\r\n    recursiveCountdownTo(countdownVal, isTokenRefreshed);\r\n  }, countdownVal);\r\n};\r\nconst getTokenRefreshTime = () => {\r\n  let interval = encryptStorage.getItem(\"tokenRequeryInterval\")\r\n  if (!isNullOrUndefined(interval)) {\r\n    let time = Number(interval)\r\n    return time - (Math.floor(time / 5))\r\n  }\r\n  return 5000\r\n}\r\nexport const keepTokenFresh = async () => {\r\n  setTimeout(() => {\r\n    refreshToken()\r\n    keepTokenFresh()\r\n  }, getTokenRefreshTime());\r\n}\r\n\r\nexport const tokenRefreshTimeout = tokenCounterTimeoutId;\r\nexport const clearTimeouts = (timeOutId = 0) => {\r\n  if (timeOutId > 0) {\r\n    window.clearTimeout(timeOutId);\r\n  } else {\r\n    var noop = function () { },\r\n      firstId = window.setTimeout(noop, 0);\r\n    return function () {\r\n      var lastId = window.setTimeout(noop, 0);\r\n      console.log(\"Removing\", lastId - firstId, \"timeout handlers\");\r\n      while (firstId !== lastId) window.clearTimeout(++firstId);\r\n    };\r\n  }\r\n};\r\n\r\nexport const isObject = (item: any) => {\r\n  return (\r\n    typeof item === \"object\" &&\r\n    !Array.isArray(item) &&\r\n    item !== null &&\r\n    item !== undefined\r\n  );\r\n};\r\n\r\nexport const skipObject = (arrOfVals: any, objVal: any) => {\r\n  let newObj: any = {};\r\n  if (arrOfVals.length === 0) {\r\n    for (const [keys, values] of Object.entries(objVal)) {\r\n      newObj = Object.assign({}, newObj, {\r\n        [keys]: values,\r\n      });\r\n    }\r\n    return newObj;\r\n  } else {\r\n    for (const [keys, values] of Object.entries(objVal)) {\r\n      if (!arrOfVals.includes(keys)) {\r\n        newObj = Object.assign({}, newObj, {\r\n          [keys]: values,\r\n        });\r\n      }\r\n    }\r\n    return newObj;\r\n  }\r\n};\r\n\r\nexport const cherryPickObject = (arrOfVals: any, objVal: any) => {\r\n  let newObj: any = {};\r\n  for (const [keys, values] of Object.entries(objVal)) {\r\n    if (arrOfVals.includes(keys)) {\r\n      newObj = Object.assign({}, newObj, {\r\n        [keys]: values,\r\n      });\r\n    }\r\n  }\r\n  return newObj;\r\n};\r\n\r\nexport const hasKeys = (objVal: any) => {\r\n  return !isNullOrUndefined(objVal) && Object.entries(objVal).length > 0;\r\n};\r\nexport const isKeyPresent = (objVal: any, requiredKey: string) => {\r\n  return !isNullOrUndefined(objVal) && objVal[requiredKey];\r\n};\r\n\r\nexport const createUUID = (prefix: string) => {\r\n  return (\r\n    prefix +\r\n    (new Date().getTime().toString(16) +\r\n      Math.floor(1e7 * Math.random()).toString(16))\r\n  );\r\n};\r\n\r\nexport const checkValueOrElseUseDefinedVal = (\r\n  val: any,\r\n  definedString: string\r\n) => {\r\n  return val !== null && val !== undefined ? val : definedString;\r\n};\r\n\r\nexport const isEmptyString = (val: any) => {\r\n  return val === null || val === undefined || val.length === 0;\r\n};\r\n\r\nexport const isANumber = (val: any) => {\r\n  return val !== null && val !== undefined && !Number.isNaN(val);\r\n};\r\n\r\nexport const valueIsLessThan = (val: any, operand: number) => {\r\n  return isANumber(val) && val < operand;\r\n};\r\n\r\nexport const valueIsGreaterThan = (val: any, operand: number) => {\r\n  return isANumber(val) && val > operand;\r\n};\r\n\r\nexport const isEmptyArray = (val: any) => {\r\n  return val === null || val === undefined || val.length === 0;\r\n};\r\n\r\nexport const isNullOrUndefined = (val: any) => {\r\n  return val === null || val === undefined || val === {};\r\n};\r\n\r\nexport const trueOrFalse = (val: any) => {\r\n  return checkValueOrElseUseDefinedVal(val, \"\") !== \"\" &&\r\n    val !== null &&\r\n    val?.toString().toLowerCase() === \"true\"\r\n    ? true\r\n    : val.toString().toLowerCase() === \"false\"\r\n      ? false\r\n      : val;\r\n};\r\n\r\nexport const isYesOrNo = (val: any) => {\r\n  return checkValueOrElseUseDefinedVal(val, \"\") !== \"\" &&\r\n    trueOrFalse(val) === false\r\n    ? \"No\"\r\n    : trueOrFalse(val) === true\r\n      ? \"Yes\"\r\n      : val;\r\n};\r\n\r\nexport const parseResponse = (val: any, fallbackRes: string) => {\r\n  if (checkValueOrElseUseDefinedVal(val, \"\") !== \"\") {\r\n    let resMessage = checkValueOrElseUseDefinedVal(\r\n      val?.actionResponse?.message,\r\n      fallbackRes\r\n    );\r\n\r\n    return resMessage;\r\n  } else {\r\n    return fallbackRes;\r\n  }\r\n};\r\n\r\nexport const isSuccessful = (val: any) => {\r\n  return (\r\n    (val !== null && val !== undefined && val === \"00\") ||\r\n    val === true ||\r\n    String(val).toLowerCase() === \"successful\"\r\n  );\r\n};\r\nexport const isDeclined = (val: any) => {\r\n  return (\r\n    (val !== null && val !== undefined && val === \"05\") ||\r\n    val === true ||\r\n    String(val).toLowerCase() === \"successful\"\r\n  );\r\n};\r\nexport const isNotFound = (val: any) => {\r\n  return (\r\n    val !== null && val !== undefined && val === responseCodes.NO_RECORD_FOUND\r\n  );\r\n};\r\nexport const splitString = (val: string, regexp: string) => {\r\n  let res = \"\";\r\n  if (!isEmptyString(val)) {\r\n    res = val.split(regexp).join(\" \");\r\n  }\r\n  return res;\r\n};\r\nexport const splitObject = (val: any) => {\r\n  let res = \"\";\r\n  for (const [, value] of Object.entries(val)) {\r\n    res += String(value).concat(\"<br/>\");\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const camelCaseToSentenceCase = (val: string) => {\r\n  let res = \"\";\r\n  try {\r\n    if (!isEmptyString(val)) {\r\n      res = val.replace(/([a-zA-Z])(?=[A-Z])/g, \"$1 \");\r\n    }\r\n  } catch (error) {\r\n    console.log(\"ERROR OCCURRED WHILE PARSING:::\", error);\r\n  }\r\n\r\n  return capitaliseFirstLetter(res);\r\n};\r\n\r\nexport const upperCaseCharAt = (val: string, loc: number) => {\r\n  let res = val;\r\n  if (!isEmptyString(val)) {\r\n    res = val.length > 0 ? val.charAt(loc).toUpperCase() : val;\r\n  }\r\n  return res;\r\n};\r\nexport const capitaliseFirstLetter = (val: string) => {\r\n  let res = val;\r\n  if (!isEmptyString(val)) {\r\n    res = val.length > 0 ? val.charAt(0).toUpperCase() + val.slice(1) : val;\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const makeTitleCase = (stringInContext: string) => {\r\n  let titleSentence = stringInContext.toLowerCase().split(\" \");\r\n  for (let i = 0; i < titleSentence.length; i++) {\r\n    titleSentence[i] =\r\n      titleSentence[i][0].toUpperCase() + titleSentence[i].slice(1) + \" \";\r\n  }\r\n  return titleSentence;\r\n};\r\n\r\nexport const makeSentenceCase = (val: string) => {\r\n  let res = val;\r\n  if (!isEmptyString(val)) {\r\n    res = val.length > 0 ? val.charAt(0).toUpperCase() + val.slice(1) : val;\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const getSessionId = () => {\r\n  return /SESS\\w*ID=([^;]+)/i.test(document.cookie) ? RegExp.$1 : false;\r\n};\r\n\r\nexport const useGoBack = () => { };\r\n\r\nexport const wait = (ms: any) =>\r\n  new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\nexport const grouper =\r\n  (key: any) =>\r\n    (array: any[], asObject = {}) =>\r\n      array.reduce((objectsByKeyValue, obj) => {\r\n        const value = obj[key];\r\n        objectsByKeyValue[value] = (objectsByKeyValue[value] || []).concat(obj);\r\n        return objectsByKeyValue;\r\n      }, asObject);\r\n\r\nexport const groupByHelper = grouper(\"parentMenuName\");\r\nexport const groupByReferenceNumber = grouper(\"requestReference\");\r\nexport const stringStripper = ({\r\n  stringInContext,\r\n  replacer,\r\n  replacee,\r\n}: any) => {\r\n  let stringAfterReplacement = \"\";\r\n  try {\r\n    stringAfterReplacement = stringInContext.replaceAll(\r\n      replacee ?? \"\",\r\n      replacer === \"\" ? \"\" : replacer\r\n    );\r\n  } catch (error) {\r\n    stringAfterReplacement = stringInContext;\r\n  }\r\n  return stringAfterReplacement;\r\n};\r\n\r\nexport const toDateFormat = (date: any, dateFormat?: string) => {\r\n  let d = isNullOrUndefined(date) ? new Date() : new Date(date);\r\n  let dtString = \"\";\r\n  switch (dateFormat) {\r\n    case \"yyyy-MM-dd\":\r\n      dtString = format(new Date(), dateFormat);\r\n      break;\r\n    default:\r\n      dtString = String(d.getDate()).concat(\r\n        String(d.getMonth() + 1),\r\n        String(d.getFullYear())\r\n      );\r\n      break;\r\n  }\r\n\r\n  return dtString;\r\n};\r\n\r\nexport const generateCorporateCodePattern = (companyName = \"\") => {\r\n  let corporateCodeVal = \"\";\r\n  if (!isNullOrUndefined(companyName)) {\r\n    if (companyName.length > corporateNameSubstringLength) {\r\n      corporateCodeVal = corporateCodePrefix.concat(\r\n        companyName.substring(0, corporateNameSubstringLength),\r\n        generateRandomChars(3)\r\n      );\r\n    } else {\r\n      corporateCodeVal = corporateCodePrefix.concat(\r\n        companyName,\r\n        generateRandomChars(3)\r\n      );\r\n    }\r\n  }\r\n  return corporateCodeVal.length > 0\r\n    ? corporateCodeVal.toLocaleLowerCase()\r\n    : corporateCodeVal;\r\n};\r\n\r\nexport const generateUsernamePattern = (username = \"\") => {\r\n  let usernameVal = \"\";\r\n  if (!isNullOrUndefined(username)) {\r\n    usernameVal = shuffle(username);\r\n  }\r\n\r\n  return usernameVal.length > 0 ? usernameVal.toLocaleLowerCase() : usernameVal;\r\n};\r\n\r\nexport const shuffle = (stringToRandomize: string) => {\r\n  var arr = stringToRandomize.split(\"\");\r\n  var n = arr.length;\r\n\r\n  for (var i = 0; i < n - 1; ++i) {\r\n    var j = generateRandomNumber(n);\r\n\r\n    var temp = arr[i];\r\n    arr[i] = arr[j];\r\n    arr[j] = temp;\r\n  }\r\n\r\n  stringToRandomize = arr.join(\"\");\r\n  return stringToRandomize;\r\n};\r\n\r\nexport const buildDateRangeString = (data: any) => {\r\n  return data.startDate.concat(\r\n    \"/\",\r\n    data?.endDate,\r\n    \"/\",\r\n    data?.requestTypeId === \"APPROVED\" ? 1 : 0\r\n  );\r\n};\r\n\r\nexport const sanitizeUrl = (data: string) => {\r\n  return data.startsWith(\"/\") ? data.substr(1) : data;\r\n};\r\n\r\nexport const getToday = () => {\r\n  let myDate = new Date();\r\n  let year: any = String(myDate.getFullYear());\r\n  let month: any =\r\n    myDate.getMonth() < 10 ? \"0\" + myDate.getMonth() : myDate.getMonth();\r\n  let day: any = myDate.getDay() < 10 ? \"0\" + myDate.getDay() : myDate.getDay();\r\n\r\n  let finalDate = String(month + day + year);\r\n  return finalDate;\r\n};\r\n\r\nexport const stringSplitter = (splitBy: string, stringToSplit: string) => {\r\n  try {\r\n    let splittedString = stringToSplit.trim().split(splitBy);\r\n    let splittedStringArr = splittedString.join(\" \");\r\n\r\n    return splittedStringArr;\r\n  } catch (error) {\r\n    return stringToSplit;\r\n  }\r\n};\r\n\r\nexport const parseJwt = (token: any) => {\r\n  try {\r\n    let base64Url = token.split(\".\")[1];\r\n    let base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n    let jsonPayload = decodeURIComponent(\r\n      atob(base64)\r\n        .split(\"\")\r\n        .map(function (c) {\r\n          return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\r\n        })\r\n        .join(\"\")\r\n    );\r\n    return JSON.parse(jsonPayload);\r\n  } catch (err) {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const isTokenExpired = (tokenExpiryIn: number) => {\r\n  let nowNow = moment().toDate().getTime();\r\n  let isExpired = moment(nowNow).isAfter(moment(tokenExpiryIn));\r\n  return isExpired;\r\n};\r\n\r\nexport const isTokenCloseToExpiry = (tokenExpiryIn: number) => {\r\n  let nowNow = moment().toDate().getTime();\r\n  let willExpireIn = moment(tokenExpiryIn);\r\n  let isExpiringIn = willExpireIn.diff(nowNow);\r\n  let requeryT = encryptStorage.getItem(\"tokenRequeryTime\") ?? -1;\r\n  return requeryT === -1 ? true : requeryT >= isExpiringIn;\r\n};\r\n\r\nexport const checkTokenStatus = () => {\r\n  let response = true;\r\n  let inputterTokenEnabled = true;\r\n  let tokenEnabled = true;\r\n\r\n  let httpClientJwt = httpServiceInterfaceOauth2.getJwt();\r\n\r\n  if (isNullOrUndefined(httpClientJwt)) {\r\n    return response;\r\n  } else {\r\n    let accessJwt: any = parseJwt(httpClientJwt);\r\n    inputterTokenEnabled =\r\n      !isNullOrUndefined(accessJwt) && !isNullOrUndefined(inputterTokenEnabled)\r\n        ? accessJwt.corporate_inputter_token_enabled\r\n        : inputterTokenEnabled;\r\n\r\n    tokenEnabled =\r\n      !isNullOrUndefined(accessJwt) && !isNullOrUndefined(tokenEnabled)\r\n        ? accessJwt.user_token_enabled\r\n        : tokenEnabled;\r\n\r\n    if (inputterTokenEnabled || (!inputterTokenEnabled && tokenEnabled)) {\r\n      return response;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n};\r\n\r\nexport const getTokenVal = () => {\r\n  return httpServiceInterfaceOauth2.getJwt();\r\n};\r\n\r\nexport const ParseUploadedJson = (jsonArray: any[]) => {\r\n  // The first object of the array is not neccessary\r\n  jsonArray.shift()\r\n\r\n  // extract the headings\r\n  const headings: any[] = Object.values(jsonArray[0])\r\n\r\n  // remove the heading row\r\n  jsonArray.shift()\r\n\r\n  let totalAmount = 0\r\n  // Create a Json object that properly represents the excel file\r\n  const CsvObjectArray = jsonArray.map((row) => {\r\n    const rowValuesArray = Object.values(row)\r\n    const rowObject: any = {}\r\n    for (let i = 0; i < headings.length; i++) {\r\n      rowObject[headings[i]] = rowValuesArray[i]\r\n      if (headings[i] === \"AMOUNT\") totalAmount = totalAmount + Number(rowValuesArray[i])\r\n    }\r\n    return rowObject\r\n  })\r\n  return { CsvObjectArray, totalAmount }\r\n}\r\n\r\nexport const defineMandateRule = (mandateType?: string) => {\r\n  let mandateRule = Object.assign({ globalRule: true });\r\n  switch (mandateType) {\r\n    case defaultAppValues.mandateTypes.accountBasedMandateType:\r\n      mandateRule = { accountRule: true };\r\n      break;\r\n    case defaultAppValues.mandateTypes.amountBasedMandateType:\r\n      mandateRule = { amountRule: true };\r\n      break;\r\n    case defaultAppValues.mandateTypes.moduleBasedMandateType:\r\n      mandateRule = { moduleRule: true };\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return mandateRule;\r\n};\r\n\r\nexport const pageRefresher = (url = \"\") => {\r\n  setTimeout(() => {\r\n    if (url !== \"\") {\r\n      window.location.href = url;\r\n    } else {\r\n      window.location.reload();\r\n    }\r\n  }, metricValues.timeToPageReloadAfterSuccess);\r\n};\r\n","import { metricValues } from \"./static\";\r\n\r\nexport const responseMessage = {\r\n  ACCESS_DENIED: \"Access is denied .... Please check your credentials\",\r\n  ACCOUNT_DIGITS_MUST_BE_10: \"A 10 digit Account number is required\",\r\n  ACCOUNT_NUMBER_IS_FOUND: \"Account number is found\",\r\n  ACCOUNT_RECORD_NOT_FOUND: \"Account details not found ....\",\r\n  ACCOUNT_STATEMENT_REQUEST_SUBMITTED_SUCCESSFULLY:\r\n    \"Account statement request submitted successfully\",\r\n  APPROVAL_GROUP_CREATION_SUCCESSFUL: \"Approval group creation successful\",\r\n  APPROVAL_GROUP_CREATION_FAILED: \"Approval group creation failed\",\r\n  APPROVAL_GROUP_DELETE_SUCCESSFUL: \"Approval group deletion successful\",\r\n  APPROVAL_GROUP_DELETE_FAILED: \"Approval group deletion failed\",\r\n  APPROVAL_GROUP_UPDATE_SUCCESSFUL: \"Approval group update successful\",\r\n  APPROVAL_GROUP_UPDATE_FAILED: \"Approval group update failed\",\r\n  BAD_REQUEST: \"One or more required fields are not adequately supplied\",\r\n  BENEFICIARY_LIMIT_EXCEEDED: \"You can not add more than \".concat(\r\n    String(process.env.REACT_APP_MAXIMUM_BENEFICIARY_COUNT),\r\n    \" beneficiaries\"\r\n  ),\r\n  CHANGED_PASSWORD_FAILED:\r\n    \"Changed password failed | Please confirm your details\",\r\n  CHANGED_PASSWORD_SUCCESSFULLY:\r\n    \"Changed password successful | Please login with new password\",\r\n  CHEQUE_BOOK_REQUEST_SUBMITTED_SUCCESSFULLY:\r\n    \"Cheque book request submitted successfully\",\r\n  CODE_LENGTH: \"Code should be  \",\r\n  CODE_SENT_TO_YOUR_EMAIL: \"{CODE} has been sent to your email\",\r\n  CODE_SENT_TO_YOUR_PHONE: \"{CODE} has been sent to your phone number\",\r\n  CORPORATE_ACCOUNT_ONBOARDED_SUCCESSFULLY:\r\n    \"Corporate account onboarded successfully ...\",\r\n  CORPORATE_CODE_NOT_AVAILABLE:\r\n    \"Corporate code chosen is not available ... check another\",\r\n  CORPORATE_CODE_COULD_NOT_BE_VALIDATED:\r\n    \"Corporate code could not be validated\",\r\n  CORPORATE_CODE_IS_AVAILABLE: \"Corporate code is available\",\r\n  CORPORATE_SME_ONBOARDING_FAILED: \"Corporate SME onboarding failed\",\r\n  CORPORATE_SME_ONBOARDING_SUCCESSFUL:\r\n    \"Corporate SME onboarding was successful\",\r\n  COULD_NOT_FETCH: \"Ooops ! Could not fetch \",\r\n  DIRECTOR_ADDED_FAILED: \"Director could not be added\",\r\n  DIRECTOR_ADDED_SUCCESSFULLY: \"Director added successfully\",\r\n  DEPARTMENT_CREATED_SUCCESSFULLY: \"Department created successfully\",\r\n  DESTINATION_ACCOUNT_HAS_BEEN_PREVIOUSLY_ADDED:\r\n    \"Account has been previously added as a beneficiary\",\r\n  ERROR_OCCURRED: \"Error occurred ... Please contact admin\",\r\n  FAILED: \"FAILED\",\r\n  FILE_TOO_LARGE: \"File too large\",\r\n  FUND_TRANSFER_SUCCESSFUL: \"Fund transfer was successful\",\r\n  FUND_TRANSFER_FAILED: \"Fund transfer failed ... please try again later\",\r\n  INCOMPLETE_PIN_OR_TOKEN:\r\n    \"You have not passed the complete token. Please verify!\",\r\n  INITIATOR_BVN_OR_CORRELATIONID:\r\n    \"Initiator BVN or correlation ID can not be empty. You must provide one of the two information\",\r\n  INVALID_BVN_OR_DATE_COMBINATION: \"Invalid bvn and date of birth combination\",\r\n  INVALID_LOGIN_CREDENTIALS:\r\n    \"Invalid Login credentials ! Please check your username/password\",\r\n  INVALID_OTP: \"Invalid OTP was provided ! Please enter the correct value\",\r\n  INVALID_REG_NUMBER: \"Invalid Registration number / Business not registered\",\r\n  INVALID_GRANT: \"Access denied by connecting service ... Contact admin\",\r\n  ISSUE_DEMAND_DRAFT_SUBMITTED_SUCCESSFULLY:\r\n    \"Issue demand draft request submitted successfully\",\r\n  IS_FOUND: \"Is found\",\r\n  MB_PIN_CHANGE_REQUEST_SUBMITTED_SUCCESSFULLY:\r\n    \"Mobile banking pin change request submitted successfully\",\r\n  MENU_UPDATE_SUCCESSFUL:\r\n    \" Menu update Request has been sent successfully ... May require approval before is usable\",\r\n  MANDATE_CREATION_SUCCESSFUL:\r\n    \" Mandate creation successful ... May require approval before is usable\",\r\n  MANDATE_UPDATE_SUCCESSFUL:\r\n    \" Mandate update successful ... May require approval before is usable\",\r\n  MANDATE_UPDATE_FAILED: \" Mandate update failed ...\",\r\n  MANDATE_CREATION_FAILED: \" Mandate creation failed ...\",\r\n  MANDATE_SIGNATORY_UPDATE_SUCCESSFUL:\r\n    \"Mandate signatory update successful ... May require approval before is usable\",\r\n  MANDATE_SIGNATORY_UPDATE_FAILED:\r\n    \"Mandate signatory update failed ... Contact support\",\r\n  MENU_CREATION_SUCCESSFUL:\r\n    \" Menu creation request has been submitted successfully ... May require approval before is usable\",\r\n  MENU_CREATION_FAILED: \" Menu creation failed ... Contact support\",\r\n  MENU_DELETION_SUCCESSFUL:\r\n    \" Menu deletion successful ... May require approval before is usable\",\r\n  MENU_DELETION_FAILED: \" Menu deletion failed ... Contact support\",\r\n  MENU_UPDATE_FAILED: \" Menu update failed ... Contact support\",\r\n  NO_RECORD_FOUND: \"No record found\",\r\n  OTP_LENGTH_GT_ZERO: \"One time password length must be greater than zero\",\r\n  OTP_SENT_SUCCESSFULLY: \"Cool! OTP sent successfully ... \",\r\n  REFERENCE_ADDED_SUCCESSFULLY:\r\n    \"Corprate reference details was added successfully\",\r\n  REFERENCE_ADDITION_FAILED: \"Corprate reference details could not be added\",\r\n  REG_NUMBER_FOUND: \"Registration number search was successful\",\r\n  REQUEST_APPROVAL_FAILED: \"Request could not be approved. Try again later\",\r\n  REQUEST_APPROVAL_SUCCESSFUL: \"Request approved successfully\",\r\n  REQUEST_DECLINE_SUCCESSFUL: \"Request declined successfully\",\r\n  REQUEST_DECLINE_FAILED: \"Request could not be declined. Try again later\",\r\n  RESET_PASSWORD_FAILED: \"Reset password process could not be initiated\",\r\n  SERVICE_UNAVAILABLE:\r\n    \"Service is currenty unavailable .. Please try again later\",\r\n  SERVICE_REQUEST_SUBMITTED_SUCCESSFULLY:\r\n    \"Service request submitted successfully\",\r\n  SIGNATORY_ADDED_SUCCESSFULLY: \"Signatory added successfully\",\r\n  SOME_REQUEST_APPROVAL_FAILED:\r\n    \"Some Request could not be approved. Contact admin\",\r\n  STANDING_ORDER_REQUEST_SUBMITTED_SUCCESSFULLY:\r\n    \"Standing order request submitted successfully\",\r\n  STAGING_ENTITY_DATA_SUBMITTED_SUCCESSFULLY:\r\n    \"Staging entity submitted successfully\",\r\n  STAGING_ENTITY_DATA_SUBMISSION_FAILED: \"Staging entity submission failed\",\r\n  STOP_CHEQUE_REQUEST_SUBMITTED_SUCCESSFULLY:\r\n    \"Stop cheque request submitted successfully\",\r\n  SUCCESSFUL: \"Cool! Successful operation ... \",\r\n  SESSION_EXPIRED: \"It appears session is expired , please login again ... \",\r\n  SERVICE_ENDPOINT_NOT_REACHABLE: \"Service endpoint not reachable\",\r\n  TNX_PIN_VALID: \"Cool! Transaction pin validated ... \",\r\n  USERNAME_IS_AVAILABLE: \"Username is available\",\r\n  USER_ADDED_TO_APPROVAL_GROUP_SUCCESSFULLY:\r\n    \"User added to approval group successfully\",\r\n  USER_ADDING_TO_APPROVAL_GROUP_FAILED:\r\n    \"User could not be added to approval group\",\r\n  USERNAME_NOT_AVAILABLE: \"Username not available\",\r\n  USERNAME_MUST_BE_UNIQUE: \"Username must be unique\",\r\n  USERNAME_CAN_NOT_BE_EMPTY: \"Username can not be empty\",\r\n  UNABLE_TO_UPLOAD_FILE: \"Unable to upload file\",\r\n  REQUEST_COULD_NOT_BEEN_AUTHENTICATED: \"Request could not be authenticated\",\r\n  REGISTRATION_MIN_NUMBER_LENGTH:\r\n    \"Registration number length must not be less than \".concat(\r\n      metricValues.minRegNumberLength.toString(),\r\n      \" characters\"\r\n    ),\r\n  REG_COULD_NOT_BE_VALIDATED:\r\n    \"Registration number could not be validated . Please enter your company name manually\",\r\n  USER_ADDED_TO_CORPORATE_SUCCESSFULLY:\r\n    \"User added to corporate successfully ...\",\r\n  FEEDBACK_SENT_SUCCESSFULLY: \"Feedback sent successfully\",\r\n\r\n};\r\n","import { ResponseBody } from \"../models/types\";\r\nimport { responseCodes } from \"../utils/static\";\r\nimport { isNullOrUndefined, isObject } from \"../utils/tools\";\r\nimport { responseMessage } from \"../utils/ui-messages\";\r\n\r\nexport const handleMyErrors = (err: any) => {\r\n  let finalErrRes: ResponseBody = {\r\n    responseCode: \"\",\r\n    data: {},\r\n    hasError: true,\r\n  };\r\n  try {\r\n    const errRes = err.response?.data;\r\n    if (\r\n      !isNullOrUndefined(errRes) &&\r\n      errRes.error_description?.toString().includes(\"change default/initial\")\r\n    ) {\r\n      finalErrRes = {\r\n        ...finalErrRes,\r\n        responseCode: responseCodes.CHANGE_PASSWORD,\r\n      };\r\n    } else if (\r\n      !isNullOrUndefined(errRes) &&\r\n      errRes.error?.toString().includes(\"access_denied\")\r\n    ) {\r\n      finalErrRes = {\r\n        ...finalErrRes,\r\n        responseCode: responseCodes.ACCESS_DENIED,\r\n        data: responseMessage.ACCESS_DENIED,\r\n      };\r\n      throw new Error(String(finalErrRes));\r\n    } else if (\r\n      !isNullOrUndefined(errRes) &&\r\n      errRes.error?.toString().includes(\"invalid_grant\")\r\n    ) {\r\n      finalErrRes = {\r\n        ...finalErrRes,\r\n        responseCode: responseCodes.INVALID_GRANT,\r\n        data: responseMessage.INVALID_GRANT,\r\n      };\r\n      throw new Error(String(finalErrRes));\r\n    } else if (err.message?.includes(\"401\")) {\r\n      finalErrRes = {\r\n        ...finalErrRes,\r\n        data: responseMessage.SESSION_EXPIRED,\r\n        responseCode: responseCodes.UNAUTHORIZED,\r\n      };\r\n      // throw new Error(responseMessage.REQUEST_COULD_NOT_BEEN_AUTHENTICATED);\r\n    } else if (err.message?.includes(\"404\")) {\r\n      finalErrRes = {\r\n        ...finalErrRes,\r\n        responseCode: responseCodes.PAGE_NOT_FOUND,\r\n        data: \"No response from requested service as it is not found\",\r\n      };\r\n    } else if (!isNullOrUndefined(err?.response) && isObject(err?.response)) {\r\n      let errResData = err.response.data || {};\r\n      let errResDataString = \"\";\r\n      for (const [keys, values] of Object.entries(errResData)) {\r\n        errResDataString += keys !== \"responseCode\" ? values + \"<br/>\" : \"\";\r\n      }\r\n      if (errResDataString.includes(\"service unavailable\")) {\r\n        finalErrRes = {\r\n          ...finalErrRes,\r\n          responseCode: responseCodes.SERVICE_UNAVAILABLE,\r\n          data: responseMessage.SERVICE_UNAVAILABLE,\r\n        };\r\n      } else\r\n        finalErrRes = {\r\n          ...finalErrRes,\r\n          responseCode: responseCodes.BAD_REQUEST,\r\n          data:\r\n            isNullOrUndefined(errResDataString) ||\r\n            errResDataString?.toLowerCase().includes(\"bad request\")\r\n              ? responseMessage.BAD_REQUEST\r\n              : errResDataString,\r\n        };\r\n    } else {\r\n      finalErrRes = {\r\n        ...finalErrRes,\r\n        responseCode: responseCodes.ERROR_OCCURRED,\r\n        data: err.message,\r\n      };\r\n    }\r\n  } catch (err) {\r\n    finalErrRes = {\r\n      ...finalErrRes,\r\n      responseCode: responseCodes.ERROR_OCCURRED,\r\n    };\r\n    console.log(\"ERROR OCCURRED WHILE PARSING ERRORS=>\", err);\r\n  }\r\n  return finalErrRes;\r\n};\r\n","// Fetch categories cases\nexport const FETCH_CATEGORIES_STARTED = \"FETCH_CATEGORIES_STARTED\";\nexport const FETCH_CATEGORIES_FAILURE = \"FETCH_CATEGORIES_FAILURE\";\nexport const FETCH_CATEGORIES_SUCCESS = \"FETCH_CATEGORIES_SUCCESS\";\n\n// Fetch each category's products cases\nexport const FETCH_CATEGORY_PRODUCTS_STARTED = \"FETCH_CATEGORY_PRODUCTS_STARTED\";\nexport const FETCH_CATEGORY_PRODUCTS_FAILURE = \"FETCH_CATEGORY_PRODUCTS_FAILURE\";\nexport const FETCH_CATEGORY_PRODUCTS_SUCCESS = \"FETCH_CATEGORY_PRODUCTS_SUCCESS\";\n\n// Fetch all products\nexport const FETCH_PRODUCTS_STARTED = \"FETCH_PRODUCTS_STARTED\";\nexport const FETCH_PRODUCTS_SUCCESS = \"FETCH_PRODUCTS_SUCCESS\";\nexport const FETCH_PRODUCTS_FAILURE = \"FETCH_PRODUCTS_FAILURE\";\n\n// Fetch all products\nexport const FETCH_USER_PRODUCTS_STARTED = \"FETCH_USER_PRODUCTS_STARTED\";\nexport const FETCH_USER_PRODUCTS_SUCCESS = \"FETCH_USER_PRODUCTS_SUCCESS\";\nexport const FETCH_USER_PRODUCTS_FAILURE = \"FETCH_USER_PRODUCTS_FAILURE\";\n\n// Fetch single product\nexport const FETCH_SINGLE_PRODUCT_STARTED = \"FETCH_SINGLE_PRODUCT_STARTED\";\nexport const FETCH_SINGLE_PRODUCT_SUCCESS = \"FETCH_SINGLE_PRODUCT_SUCCESS\";\nexport const FETCH_SINGLE_PRODUCT_FAILURE = \"FETCH_SINGLE_PRODUCT_FAILURE\";\n\n// Add new Category\nexport const ADD_CATEGORY_SUCCESS = \"ADD_CATEGORY_SUCCESS\";\nexport const ADD_CATEGORY_FAILURE = \"ADD_CATEGORY_FAILURE\";\n\n// Add new Product\nexport const ADD_PRODUCT_SUCCESS = \"ADD_PRODUCT_SUCCESS\";\nexport const ADD_PRODUCT_FAILURE = \"ADD_PRODUCT_FAILURE\";\n\n// Delete category\nexport const DELETE_CATEGORY_SUCCESS = \"DELETE_CATEGORY_SUCCESS\";\nexport const DELETE_CATEGORY_FAILURE = \"DELETE_CATEGORY_FAILURE\";\n\n// Update Category\nexport const UPDATE_CATEGORY_SUCCESS = \"UPDATE_CATEGORY_SUCCESS\";\nexport const UPDATE_CATEGORY_FAILURE = \"UPDATE_CATEGORY_FAILURE\";\n\n// Delete product\nexport const DELETE_PRODUCT_SUCCESS = \"DELETE_PRODUCT_SUCCESS\";\nexport const DELETE_PRODUCT_FAILURE = \"DELETE_PRODUCT_FAILURE\";\n\n// Update Product\nexport const UPDATE_PRODUCT_SUCCESS = \"UPDATE_PRODUCT_SUCCESS\";\nexport const UPDATE_PRODUCT_FAILURE = \"UPDATE_PRODUCT_FAILURE\";\n\n// users options\nexport const USER_LOADING = \"USER_LOADING\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const REGISTER_USER_SUCCESS = \"REGISTER_USER_SUCCESS\";\nexport const REGISTER_USER_FAILURE = \"REGISTER_USER_FAILURE\";\nexport const LOGIN_USER_SUCCESS = \"LOGIN_USER_SUCCESS\";\nexport const LOGIN_USER_FAILURE = \"LOGIN_USER_FAILURE\";\nexport const LOGOUT_USER_SUCCESS = \"LOGOUT_USER_SUCCESS\";\nexport const UPDATE_USER_SUCCESS = \"UPDATE_USER_SUCCESS\";\nexport const UPDATE_USER_FAILURE = \"UPDATE_USER_FAILURE\";\n\n// fetch cart products\nexport const FETCH_CART_STARTED = \"FETCH_CART_STARTED\";\nexport const FETCH_CART_SUCCESS = \"FETCH_CART_SUCCESS\";\nexport const FETCH_CART_FAILURE = \"FETCH_CART_FAILURE\";\n\n// add product to cart\nexport const ADD_TO_CART_SUCCESS = \"ADD_TO_CART_SUCCESS\";\nexport const ADD_TO_CART_FAILURE = \"ADD_TO_CART_FAILURE\";\n\n// change quantity from cart\nexport const CHANGE_CART_QUANTITY_SUCCESS = \"CHANGE_CART_QUANTITY_SUCCESS\";\nexport const CHANGE_CART_QUANTITY_FAILURE = \"CHANGE_CART_QUANTITY_FAILURE\";\n\n// delete product from cart\nexport const DELETE_FROM_CART_SUCCESS = \"DELETE_FROM_CART_SUCCESS\";\nexport const DELETE_FROM_CART_FAILURE = \"DELETE_FROM_CART_FAILURE\";\n\n// fetch All user Addresses\nexport const FETCH_ADDRESSES_STARTED = \"FETCH_ADDRESSES_STARTED\";\nexport const FETCH_ADDRESSES_SUCCESS = \"FETCH_ADDRESSES_SUCCESS\";\nexport const FETCH_ADDRESSES_FAILURE = \"FETCH_ADDRESSES_FAILURE\";\n\n// add a new address\nexport const ADD_ADDRESS_SUCCESS = \"ADD_ADDRESS_SUCCESS\";\nexport const ADD_ADDRESS_FAILURE = \"ADD_ADDRESS_FAILURE\";\n\n// delete an address\nexport const DELETE_ADDRESS_SUCCESS = \"DELETE_ADDRESS_SUCCESS\";\nexport const DELETE_ADDRESS_FAILURE = \"DELETE_ADDRESS_FAILURE\";\n\n// update an address\nexport const EDIT_ADDRESS_SUCCESS = \"EDIT_ADDRESS_SUCCESS\";\nexport const EDIT_ADDRESS_FAILURE = \"EDIT_ADDRESS_FAILURE\";\n\n// fetch WISHLIST products\nexport const FETCH_WISHLIST_STARTED = \"FETCH_WISHLIST_STARTED\";\nexport const FETCH_WISHLIST_SUCCESS = \"FETCH_WISHLIST_SUCCESS\";\nexport const FETCH_WISHLIST_FAILURE = \"FETCH_WISHLIST_FAILURE\";\n\n// add product to WISHLIST\nexport const ADD_TO_WISHLIST_SUCCESS = \"ADD_TO_WISHLIST_SUCCESS\";\nexport const ADD_TO_WISHLIST_FAILURE = \"ADD_TO_WISHLIST_FAILURE\";\n\n// delete product from WISHLIST\nexport const DELETE_FROM_WISHLIST_SUCCESS = \"DELETE_FROM_WISHLIST_SUCCESS\";\nexport const DELETE_FROM_WISHLIST_FAILURE = \"DELETE_FROM_WISHLIST_FAILURE\";\n\n// fetch All user orders history\nexport const FETCH_HISTORY_STARTED = \"FETCH_HISTORY_STARTED\";\nexport const FETCH_HISTORY_SUCCESS = \"FETCH_HISTORY_SUCCESS\";\nexport const FETCH_HISTORY_FAILURE = \"FETCH_HISTORY_FAILURE\";\n\n// fetch All seller's orders to ship\nexport const FETCH_ORDERS_TO_SHIP_STARTED = \"FETCH_ORDERS_TO_SHIP_STARTED\";\nexport const FETCH_ORDERS_TO_SHIP_SUCCESS = \"FETCH_ORDERS_TO_SHIP_SUCCESS\";\nexport const FETCH_ORDERS_TO_SHIP_FAILURE = \"FETCH_ORDERS_TO_SHIP_FAILURE\";\n\n// fetch All seller's shipped orders\nexport const FETCH_SHIPPED_ORDERS_STARTED = \"FETCH_SHIPPED_ORDERS_STARTED\";\nexport const FETCH_SHIPPED_ORDERS_SUCCESS = \"FETCH_SHIPPED_ORDERS_SUCCESS\";\nexport const FETCH_SHIPPED_ORDERS_FAILURE = \"FETCH_SHIPPED_ORDERS_FAILURE\";\n\n// Mark order as shipped\nexport const ORDER_SHIPPED_SUCCESS = \"ORDER_SHIPPED_SUCCESS\";\nexport const ORDER_SHIPPED_FAILURE = \"ORDER_SHIPPED_SUCCESS\";\n\n// order success\nexport const PLACED_ORDER_SUCCESS = \"PLACED_ORDER_SUCCESS\";\nexport const PLACED_ORDER_FAILURE = \"PLACED_ORDER_FAILURE\";\n\n// Choose order address\nexport const CHOOSE_ORDER_ADDRESS_SUCCESS = \"CHOOSE_ORDER_ADDRESS_SUCCESS\";\nexport const CHOOSE_ORDER_ADDRESS_FAILURE = \"CHOOSE_ORDER_ADDRESS_SUCCESS\";\n\n// users options\nexport const FETCH_ALL_USERS_STARTED = \"FETCH_ALL_USERS_STARTED\";\nexport const FETCH_ALL_USERS_SUCCESS = \"FETCH_ALL_USERS_SUCCESS\";\nexport const FETCH_ALL_USERS_FAILURE = \"FETCH_ALL_USERS_FAILURE\";\n\n// change user permissions to admin\nexport const ADMIN_PERMISSION_SUCCESS = \"ADMIN_PERMISSION_SUCCESS\";\nexport const ADMIN_PERMISSION_FAILURE = \"ADMIN_PERMISSION_FAILURE\";\n\n// change user permissions to shipper\nexport const SHIPPER_PERMISSION_SUCCESS = \"SHIPPER_PERMISSION_SUCCESS\";\nexport const SHIPPER_PERMISSION_FAILURE = \"SHIPPER_PERMISSION_FAILURE\";\n\n// restrict user from all permissions\nexport const STRICT_USER_SUCCESS = \"STRICT_USER_SUCCESS\";\nexport const STRICT_USER_FAILURE = \"STRICT_USER_FAILURE\";\n\n// fetch shippers\nexport const FETCH_SHIPPERS_STARTED = \"FETCH_SHIPPERS_STARTED\";\nexport const FETCH_SHIPPERS_SUCCESS = \"FETCH_SHIPPERS_SUCCESS\";\nexport const FETCH_SHIPPERS_FAILURE = \"FETCH_SHIPPERS_FAILURE\";\n\n// edit shipper\nexport const EDIT_SHIPPERS_SUCCESS = \"EDIT_SHIPPERS_SUCCESS\";\nexport const EDIT_SHIPPERS_FAILURE = \"EDIT_SHIPPERS_FAILURE\";\n\n// fetch All shipper orders to deliver\nexport const FETCH_ORDERS_TO_DELIVER_STARTED = \"FETCH_ORDERS_TO_DELIVER_STARTED\";\nexport const FETCH_ORDERS_TO_DELIVER_SUCCESS = \"FETCH_ORDERS_TO_DELIVER_SUCCESS\";\nexport const FETCH_ORDERS_TO_DELIVER_FAILURE = \"FETCH_ORDERS_TO_DELIVER_FAILURE\";\n\n// Mark order as delivered\nexport const ORDER_DELIVERED_SUCCESS = \"ORDER_DELIVERED_SUCCESS\";\nexport const ORDER_DELIVERED_FAILURE = \"ORDER_DELIVERED_SUCCESS\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\n\nexport const SET_MESSAGE = \"SET_MESSAGE\";\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\n","import {\n  Card,\n  CardHeader,\n  Container,\n  Row,\n} from \"reactstrap\";\n\nimport {\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  Col,\n} from \"reactstrap\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\n// import PaginationFactory from \"react-bootstrap-table2-paginator\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"components/Headers/Header.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { endpoints } from \"../api-endpoints\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport \"./modal.css\"\nimport userService from \"services/user.service\";\nimport { param } from \"jquery\";\n\nconst Drivers = () => {\n  const [modalInfo, setModalInfo] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [show, setShow] = useState(false);\n  const [state, setState] = useState();\n  const [drivers, setDrivers] = useState([]);\n  const driver = [];\n  const navigate = useHistory();\n\n  const { SearchBar } = Search;\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    async function fetchUsers() {\n      const fullResponse = await fetch(endpoints.getDrivers);\n      const responseJson = await fullResponse.json();\n      setDrivers(responseJson.users);\n    }\n    fetchUsers();\n  }, []);\n\n  drivers.forEach((user) => {\n    driver.push(user);\n  });\n\n  console.log(\n    \"Created drivers>>>>>>> from headers from map markers used\",\n    driver\n  );\n\n\n  const rowEvents = {\n    onClick: (e, row) => {\n      console.log(\"Row list test\", row);\n      setModalInfo(row);\n      toggleTrueFalse();\n    },\n  };\n\n  const toggleTrueFalse = () => {\n    setShowModal(handleShow)\n  }\n\n//   const submitform() {\n//     //Now I have the all values wrapped in a object to send to server\n// }\n\nconst handleOnChange = (e) => {\n    const { value, name } = e.target\n    setState({ [name] : value })\n};\n\n    const handleUpdate = async (e) => {\n      e.preventDefault();\n      try {\n    const formData = state\n\n        const response = await userService.updateUser.concat(`${modalInfo.Id}`).then(\n          () => {\n            // navigate.push(\"/admin/index\");\n            console.log(response)\n            // window.location.reload();\n          },\n          (error) => {\n            console.log(error);\n          }\n        );\n        console.log(response.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\nconst ModalContent = () => {\n  return (\n    <Modal\n      show={show}\n      onHide={handleClose}\n      className=\"modal-width\"\n      contentClassName=\"transparentBgClass\"\n      dialogClassName=\"modal-width\"\n      aria-labelledby=\"example-custom-modal-styling-title\"\n    >\n      <Modal.Header closeLabel=\"X\">\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Close\n        </Button>\n        <Modal.Title>\n          {modalInfo.first_name} {modalInfo.last_name}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Container fluid>\n          <Row>\n            <Col className=\"order-xl-2 mb-5 mb-xl-0\" xl=\"4\">\n              <Card className=\"card-profile shadow\">\n                <Row className=\"justify-content-center\">\n                  <Col className=\"order-lg-2\" lg=\"3\">\n                    <div className=\"card-profile-image\">\n                      <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                        <img\n                          alt=\"...\"\n                          className=\"rounded-circle\"\n                          src={\n                            require(\"../assets/img/theme/team-4-800x800.jpg\")\n                              .default\n                          }\n                        />\n                      </a>\n                    </div>\n                  </Col>\n                </Row>\n                <CardHeader className=\"text-center border-0 pt-8 pt-md-4 pb-0 pb-md-4\">\n                  <div className=\"d-flex justify-content-between\">\n                    <Button\n                      className=\"mr-4\"\n                      color=\"info\"\n                      href=\"#pablo\"\n                      onClick={(e) => e.preventDefault()}\n                      size=\"sm\"\n                    >\n                      {/* Approve */}\n                    </Button>\n                    <Button\n                      className=\"float-right\"\n                      color=\"default\"\n                      href=\"#pablo\"\n                      onClick={(e) => e.preventDefault()}\n                      size=\"sm\"\n                    >\n                      {/* Delete */}\n                    </Button>\n                  </div>\n                </CardHeader>\n                <CardBody className=\"pt-0 pt-md-4\">\n                  <Row>\n                    <div className=\"col\">\n                      <div className=\"card-profile-stats d-flex justify-content-center mt-md-5\">\n                        <div>\n                          <span className=\"heading\">22</span>\n                          <span className=\"description\">Total Tows</span>\n                        </div>\n                        <div>\n                          <span className=\"heading\">10</span>\n                          <span className=\"description\">Commissioned Tows</span>\n                        </div>\n                        <div>\n                          <span className=\"heading\">89</span>\n                          <span className=\"description\">\n                            Total tow Commission owed\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  </Row>\n                  <div className=\"text-center\">\n                    <h3>\n                      {modalInfo.first_name} {modalInfo.last_name}\n                      <span className=\"font-weight-light\"></span>\n                    </h3>\n                    <div className=\"h5 font-weight-300\">\n                      <i className=\"ni location_pin mr-2\" />\n                      Current Address:{\" \"}\n                      <b>{modalInfo.vehicle_details.address}</b>\n                    </div>\n\n                    <hr className=\"my-4\" />\n                    <p>\n                      {modalInfo.first_name} — registered on{\" \"}\n                      {modalInfo.createdAt}, with license{\" \"}\n                      <b>{modalInfo.vehicle_details.v_license}</b>\n                    </p>\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col className=\"order-xl-1\" xl=\"8\">\n              <Card className=\"bg-secondary shadow\">\n                <CardHeader className=\"bg-white border-0\">\n                  <Row className=\"align-items-center\">\n                    <Col xs=\"8\">\n                      <h3 className=\"mb-0\">My account</h3>\n                    </Col>\n                    <Col className=\"text-right\" xs=\"4\">\n                      <Button\n                        color=\"primary\"\n                        href=\"#pablo\"\n                        onClick={(e) => e.preventDefault()}\n                        size=\"sm\"\n                      >\n                        Settings\n                      </Button>\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      User information\n                    </h6>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-username\"\n                            >\n                              Username\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={modalInfo.first_name}\n                              id=\"input-username\"\n                              placeholder=\"Username\"\n                              // onChange={() => handleOnChange}\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-email\"\n                            >\n                              Email address\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-email\"\n                              placeholder={modalInfo.email}\n                              // onChange={() => handleOnChange}\n                              type=\"email\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-first-name\"\n                            >\n                              First name\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={modalInfo.first_name}\n                              id=\"input-first-name\"\n                              placeholder=\"First name\"\n                              // onChange={() => handleOnChange}\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-last-name\"\n                            >\n                              Last name\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={modalInfo.last_name}\n                              id=\"input-last-name\"\n                              placeholder=\"Last name\"\n                              // onChange={() => handleOnChange}\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n                    <hr className=\"my-4\" />\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      Contact information\n                    </h6>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col md=\"12\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-address\"\n                            >\n                              Address\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={modalInfo.vehicle_details.address}\n                              id=\"input-address\"\n                              placeholder=\"Vehicle Address\"\n                              // onChange={() => handleOnChange}\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-city\"\n                            >\n                              Phone Number\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={modalInfo.number}\n                              id=\"input-city\"\n                              placeholder=\"Phone Number\"\n                              // onChange={() => handleOnChange}\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n                    <hr className=\"my-4\" />\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      Vehicle information\n                    </h6>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col md=\"12\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-address\"\n                            >\n                              Manufacturer\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={modalInfo.vehicle_details.address}\n                              id=\"input-address\"\n                              placeholder=\"Manufacturer\"\n                              // onChange={() => handleOnChange}\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-city\"\n                            >\n                              Vehicle Type\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={modalInfo.vehicle_details.address}\n                              id=\"input-city\"\n                              placeholder=\"Vehicle Type\"\n                              // onChange={() => handleOnChange}\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-country\"\n                            >\n                              Max Weight\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={\n                                modalInfo.vehicle_details.max_weight\n                              }\n                              id=\"input-country\"\n                              placeholder=\"Max Weight\"\n                              // onChange={() => handleOnChange}\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-country\"\n                            >\n                              Vehicle License\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-postal-code\"\n                              defaultValue={modalInfo.vehicle_details.v_license}\n                              placeholder=\"Vehicle License\"\n                              // onChange={() => handleOnChange}\n                              type=\"number\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n                    <hr className=\"my-4\" />\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      Payment Details\n                    </h6>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col md=\"12\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-address\"\n                            >\n                              Account Holder Name\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={\n                                modalInfo.payment_details.bank_holder_name\n                              }\n                              id=\"input-address\"\n                              placeholder=\"Account Holder Name\"\n                              // onChange={() => handleOnChange}\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-city\"\n                            >\n                              Account Number\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={\n                                modalInfo.payment_details.account_number\n                              }\n                              id=\"input-city\"\n                              placeholder=\"Account Number\"\n                              // onChange={() => handleOnChange}\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-country\"\n                            >\n                              Bank Name\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={modalInfo.payment_details.bank_name}\n                              id=\"input-country\"\n                              placeholder=\"Bank Name\"\n                              // onChange={() => handleOnChange()}\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </Modal.Body>\n      <Modal.Footer>\n        {/* <Button variant=\"secondary\" onClick={handleUpdate}>\n          Update\n        </Button> */}\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\n  const columns = [\n    { dataField: \"first_name\", text: \"Driver First Name\" },\n    { dataField: \"last_name\", text: \"Driver Last Name\" },\n    { dataField: \"email\", text: \"Driver Email\" },\n    { dataField: \"number\", text: \"Driver Phone\" },\n    { dataField: \"vehicle_details.v_license\", text: \"License Number\" },\n  ];\n  return (\n    <>\n      <Header />\n      <Container className=\"mt--7\" fluid>\n        <CardHeader className=\"border-0\">\n          <h3 className=\"mb-0\">Drivers list</h3>\n        </CardHeader>\n        <Row>\n          <div className=\"col\">\n            <Card className=\"shadow\">\n              <CardHeader className=\"border-0\">\n                <h3 className=\"mb-0\">Drivers list</h3>\n              </CardHeader>\n\n              <BootstrapTable\n                keyField=\"email\"\n                data={driver}\n                columns={columns}\n                pagination={paginationFactory()}\n                rowEvents={rowEvents}\n              />\n            </Card>\n          </div>\n        </Row>\n        {show ? <ModalContent /> : null}\n      </Container>\n    </>\n  );\n};\n\nexport default Drivers;\n","import { Card, CardBody, CardTitle, Container, Row, Col } from \"reactstrap\";\nimport { fetchAllDrivers } from \"services/onboarding-service\";\nimport axios from \"axios\";\nimport { endpoints } from \"../../api-endpoints\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useState, useEffect } from \"react\";\nimport { isSuccessful } from \"../../utils/tools\";\n// import { useSelector, useDispatch } from \"react-redux\";\nimport { fetchDrivers } from \"services/onboarding-service\";\nimport Drivers from \"views/Drivers\";\n\n\n\n\nconst Header = () => {\n\n  // const dispatch = useDispatch();\n  const [drivers, setDrivers] = useState([]);\n\nuseEffect(() => {\n  async function fetchUsers() {\n    const fullResponse = await fetch(endpoints.getDrivers);\n    const responseJson = await fullResponse.json();\n    // console.log(\"Created drivers>>>>>>>: from headers responses\", responseJson);\n    setDrivers(responseJson);\n  }\n\n  fetchUsers();\n}, []);\nconsole.log(\"Drivers on dashboard\", drivers)\n  return (\n    <>\n      <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\">\n        <Container fluid>\n          <div className=\"header-body\">\n            {/* Card stats */}\n            <Row>\n              <Col lg=\"6\" xl=\"3\">\n                <Card className=\"card-stats mb-4 mb-xl-0\">\n                  <CardBody>\n                    <Row>\n                      <div className=\"col\">\n                        <CardTitle\n                          tag=\"h5\"\n                          className=\"text-uppercase text-muted mb-0\"\n                        >\n                          Total Drivers\n                        </CardTitle>\n                        <span className=\"h2 font-weight-bold mb-0\">\n                          {drivers.count}\n                        </span>\n                      </div>\n                      <Col className=\"col-auto\">\n                        <div className=\"icon icon-shape bg-danger text-white rounded-circle shadow\">\n                          <i className=\"fas fa-chart-bar\" />\n                        </div>\n                      </Col>\n                    </Row>\n                    <p className=\"mt-3 mb-0 text-muted text-sm\">\n                      <span className=\"text-success mr-2\">\n                        <i className=\"fa fa-arrow-up\" /> %\n                      </span>{\" \"}\n                      <span className=\"text-nowrap\">Since last month</span>\n                    </p>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col lg=\"6\" xl=\"3\">\n                <Card className=\"card-stats mb-4 mb-xl-0\">\n                  <CardBody>\n                    <Row>\n                      <div className=\"col\">\n                        <CardTitle\n                          tag=\"h5\"\n                          className=\"text-uppercase text-muted mb-0\"\n                        >\n                          Total Verified Drivers\n                        </CardTitle>\n                        <span className=\"h2 font-weight-bold mb-0\">\n                       \n                            {drivers.count}\n                        </span>\n                      </div>\n                      <Col className=\"col-auto\">\n                        <div className=\"icon icon-shape bg-warning text-white rounded-circle shadow\">\n                          <i className=\"fas fa-chart-pie\" />\n                        </div>\n                      </Col>\n                    </Row>\n                    <p className=\"mt-3 mb-0 text-muted text-sm\">\n                      <span className=\"text-danger mr-2\">\n                        <i className=\"fas fa-arrow-down\" /> %\n                      </span>{\" \"}\n                      <span className=\"text-nowrap\">Since last week</span>\n                    </p>\n                  </CardBody>\n                </Card>\n              </Col>\n              {/* <Col lg=\"6\" xl=\"3\">\n                <Card className=\"card-stats mb-4 mb-xl-0\">\n                  <CardBody>\n                    <Row>\n                      <div className=\"col\">\n                        <CardTitle\n                          tag=\"h5\"\n                          className=\"text-uppercase text-muted mb-0\"\n                        >\n                          Total Tow Request\n                        </CardTitle>\n                        <span className=\"h2 font-weight-bold mb-0\">924</span>\n                      </div>\n                      <Col className=\"col-auto\">\n                        <div className=\"icon icon-shape bg-yellow text-white rounded-circle shadow\">\n                          <i className=\"fas fa-users\" />\n                        </div>\n                      </Col>\n                    </Row>\n                    <p className=\"mt-3 mb-0 text-muted text-sm\">\n                      <span className=\"text-warning mr-2\">\n                        <i className=\"fas fa-arrow-down\" /> 1.10%\n                      </span>{\" \"}\n                      <span className=\"text-nowrap\">Since yesterday</span>\n                    </p>\n                  </CardBody>\n                </Card>\n              </Col> */}\n              {/* <Col lg=\"6\" xl=\"3\">\n                <Card className=\"card-stats mb-4 mb-xl-0\">\n                  <CardBody>\n                    <Row>\n                      <div className=\"col\">\n                        <CardTitle\n                          tag=\"h5\"\n                          className=\"text-uppercase text-muted mb-0\"\n                        >\n                          Performance\n                        </CardTitle>\n                        <span className=\"h2 font-weight-bold mb-0\">49,65%</span>\n                      </div>\n                      <Col className=\"col-auto\">\n                        <div className=\"icon icon-shape bg-info text-white rounded-circle shadow\">\n                          <i className=\"fas fa-percent\" />\n                        </div>\n                      </Col>\n                    </Row>\n                    <p className=\"mt-3 mb-0 text-muted text-sm\">\n                      <span className=\"text-success mr-2\">\n                        <i className=\"fas fa-arrow-up\" /> 12%\n                      </span>{\" \"}\n                      <span className=\"text-nowrap\">Since last month</span>\n                    </p>\n                  </CardBody>\n                </Card>\n              </Col> */}\n            </Row>\n          </div>\n        </Container>\n      </div>\n    </>\n  );\n};\n\nexport default Header;\n","\nimport React, { useState, useEffect, useReducer } from \"react\";\n// node.js library that concatenates classes (strings)\nimport classnames from \"classnames\";\n// javascipt plugin for creating charts\nimport Chart from \"chart.js\";\n// react plugin used to create charts\nimport { Line, Bar } from \"react-chartjs-2\";\n// import { useEffect } from \"react\";\n// import { isSuccessful } from \"utils/tools\";\nimport getCurrentUser from \"../services/auth_service\"\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  NavItem,\n  NavLink,\n  Nav,\n  Progress,\n  Table,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n\n// core components\nimport {\n  chartOptions,\n  parseOptions,\n  chartExample1,\n  chartExample2,\n} from \"variables/charts.js\";\n\nimport Header from \"components/Headers/Header.js\";\n// import { fetchAllDrivers } from \"services/onboarding-service\";\n// import axios from \"axios\";\n// import { endpoints } from \"../api-endpoints\";\n// import { useDispatch, useSelector } from \"react-redux\";\n\n\n\nconst Index = (props) => {\n\n// const dispatch = useDispatch();\n\n  const [activeNav, setActiveNav] = useState(1);\n\n  const [chartExample1Data, setChartExample1Data] = useState(\"data1\");\n  // const [, setIsFetching] = useState(false);\n  \n\n  if (window.Chart) {\n    parseOptions(Chart, chartOptions());\n  }\n\n  const toggleNavs = (e, index) => {\n    e.preventDefault();\n    setActiveNav(index);\n    setChartExample1Data(\"data\" + index);\n  };\n\n\n\n\t// const [user, setValues] = \n\n    // useEffect(() => {\n    //   // getCurrentUser()\n    //   console.log('Data from server>>>:', localStorage.getItem(\"user\"))\n    //   // eslint-disable-next-line react-hooks/exhaustive-deps\n    // }, []);\n// var retrievedObject = localStorage.getItem(\"user\");\n\n// console.log(\"Local Storage item\", window.localStorage.getItem(\"user\"));\n\n    //  useEffect(() => {\n    //    // Using an IIFE\n    //    (async function fetchAllDrivers() {\n    //     let config = {\n    //       method: \"post\",\n    //       url: endpoints.getDrivers,\n    //       headers: {\n    //         Accept: \"application/json, text/plain, /\",\n    //         \"Content-Type\": \"multipart/form-data\",\n    //       },\n    //     };\n    //      let data = await axios.get(config);\n    //   console.log(\"Data from server>>>:\", data);\n    //    })();\n    //  }, []);  \n//  const getUsers = async () => {\n//    let url = endpoints.getDrivers;\n//    const users = await axios.get(url);\n//    if (users) {\n//      let totalUsers = users.count;\n     \n//        setDrivers({\n//          count: totalUsers,\n//        }\n//      );\n//    console.log(\"Total users:>>>>\", totalUsers);\n\n//    }\n//    console.log(\"users:>>>>\", users);\n//    getUsers(); \n//  };\n\n    //  useEffect(() => {\n    //    getUsers(); // run it, run it\n    //  }, [users]);\n \n    // const doFetchDrivers = async () => {\n    //   try {\n    //     setIsFetching(true);\n    //     const res = await fetchAllDrivers();\n    //     setIsFetching(false);\n    //     if (res && isSuccessful(res?.actionResponse?.code)) {\n    //       setDrivers(res.responses);\n    //       // console.log(\"Created driver>>>>>>>: from header\", res.responses)\n    //     }\n    //   } catch (error) {\n    //     setIsFetching(false);\n    //     // handleMyErrors(error);\n    //   }\n    // };\n\n    // console.log(\"Created drivers>>>>>>>:\", drivers);\n    // useEffect(() => {\n    //   doFetchDrivers();\n    \n    //   return () => {};\n    //   // eslint-disable-next-line react-hooks/exhaustive-deps\n    // }, [drivers]);\n\n  return (\n    <>\n      <Header />\n      \n      {/* <Container className=\"mt--7\" fluid>\n        <Row>\n          <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\n            <Card className=\"bg-gradient-default shadow\">\n              <CardHeader className=\"bg-transparent\">\n                <Row className=\"align-items-center\">\n                  {/* <div className=\"col\">\n                    <h6 className=\"text-uppercase text-light ls-1 mb-1\">\n                      Overview\n                    </h6>\n                    <h2 className=\"text-white mb-0\">Sales value </h2>\n                  </div> */}\n                  {/* <div className=\"col\">\n                    <Nav className=\"justify-content-end\" pills>\n                      <NavItem>\n                        <NavLink\n                          className={classnames(\"py-2 px-3\", {\n                            active: activeNav === 1,\n                          })}\n                          href=\"#pablo\"\n                          onClick={(e) => toggleNavs(e, 1)}\n                        >\n                          <span className=\"d-none d-md-block\">Month</span>\n                          <span className=\"d-md-none\">M</span>\n                        </NavLink>\n                      </NavItem>\n                      <NavItem>\n                        <NavLink\n                          className={classnames(\"py-2 px-3\", {\n                            active: activeNav === 2,\n                          })}\n                          data-toggle=\"tab\"\n                          href=\"#pablo\"\n                          onClick={(e) => toggleNavs(e, 2)}\n                        >\n                          <span className=\"d-none d-md-block\">Week</span>\n                          <span className=\"d-md-none\">W</span>\n                        </NavLink>\n                      </NavItem>\n                    </Nav>\n                  </div> */}\n                {/* </Row>\n              </CardHeader>\n              <CardBody> */}\n                {/* Chart */}\n                {/* <div className=\"chart\">\n                  <Line\n                    data={chartExample1[chartExample1Data]}\n                    options={chartExample1.options}\n                    getDatasetAtEvent={(e) => console.log(e)}\n                  />\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col xl=\"4\">\n            <Card className=\"shadow\">\n              <CardHeader className=\"bg-transparent\"> */}\n                {/* <Row className=\"align-items-center\">\n                  <div className=\"col\">\n                    <h6 className=\"text-uppercase text-muted ls-1 mb-1\">\n                      Performance\n                    </h6>\n                    <h2 className=\"mb-0\">Total orders</h2>\n                  </div>\n                </Row> */}\n              {/* </CardHeader>\n              <CardBody>\n                {/* Chart */}\n                {/* <div className=\"chart\">\n                  <Bar\n                    data={chartExample2.data}\n                    options={chartExample2.options}\n                  />\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Row className=\"mt-5\">\n          <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\n            <Card className=\"shadow\">\n              <CardHeader className=\"border-0\">\n                <Row className=\"align-items-center\">\n                  <div className=\"col\">\n                    <h3 className=\"mb-0\">Page visits</h3>\n                  </div>\n                  <div className=\"col text-right\">\n                    <Button\n                      color=\"primary\"\n                      href=\"#pablo\"\n                      onClick={(e) => e.preventDefault()}\n                      size=\"sm\"\n                    >\n                      See all\n                    </Button>\n                  </div>\n                </Row>\n              </CardHeader>\n              <Table className=\"align-items-center table-flush\" responsive>\n                <thead className=\"thead-light\">\n                  <tr>\n                    <th scope=\"col\">Page name</th>\n                    <th scope=\"col\">Visitors</th>\n                    <th scope=\"col\">Unique users</th>\n                    <th scope=\"col\">Bounce rate</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">/argon/</th>\n                    <td>4,569</td>\n                    <td>340</td>\n                    <td>\n                      <i className=\"fas fa-arrow-up text-success mr-3\" /> 46,53%\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">/argon/index.html</th>\n                    <td>3,985</td>\n                    <td>319</td>\n                    <td>\n                      <i className=\"fas fa-arrow-down text-warning mr-3\" />{\" \"}\n                      46,53%\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">/argon/charts.html</th>\n                    <td>3,513</td>\n                    <td>294</td>\n                    <td>\n                      <i className=\"fas fa-arrow-down text-warning mr-3\" />{\" \"}\n                      36,49%\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">/argon/tables.html</th>\n                    <td>2,050</td>\n                    <td>147</td>\n                    <td>\n                      <i className=\"fas fa-arrow-up text-success mr-3\" /> 50,87%\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">/argon/profile.html</th>\n                    <td>1,795</td>\n                    <td>190</td>\n                    <td>\n                      <i className=\"fas fa-arrow-down text-danger mr-3\" />{\" \"}\n                      46,53%\n                    </td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Card>\n          </Col>\n          <Col xl=\"4\">\n            <Card className=\"shadow\">\n              <CardHeader className=\"border-0\">\n                <Row className=\"align-items-center\">\n                  <div className=\"col\">\n                    <h3 className=\"mb-0\">Social traffic</h3>\n                  </div>\n                  <div className=\"col text-right\">\n                    <Button\n                      color=\"primary\"\n                      href=\"#pablo\"\n                      onClick={(e) => e.preventDefault()}\n                      size=\"sm\"\n                    >\n                      See all\n                    </Button>\n                  </div>\n                </Row>\n              </CardHeader>\n              <Table className=\"align-items-center table-flush\" responsive>\n                <thead className=\"thead-light\">\n                  <tr>\n                    <th scope=\"col\">Referral</th>\n                    <th scope=\"col\">Visitors</th>\n                    <th scope=\"col\" />\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">Facebook</th>\n                    <td>1,480</td>\n                    <td>\n                      <div className=\"d-flex align-items-center\">\n                        <span className=\"mr-2\">60%</span>\n                        <div>\n                          <Progress\n                            max=\"100\"\n                            value=\"60\"\n                            barClassName=\"bg-gradient-danger\"\n                          />\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Facebook</th>\n                    <td>5,480</td>\n                    <td>\n                      <div className=\"d-flex align-items-center\">\n                        <span className=\"mr-2\">70%</span>\n                        <div>\n                          <Progress\n                            max=\"100\"\n                            value=\"70\"\n                            barClassName=\"bg-gradient-success\"\n                          />\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Google</th>\n                    <td>4,807</td>\n                    <td>\n                      <div className=\"d-flex align-items-center\">\n                        <span className=\"mr-2\">80%</span>\n                        <div>\n                          <Progress max=\"100\" value=\"80\" />\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Instagram</th>\n                    <td>3,678</td>\n                    <td>\n                      <div className=\"d-flex align-items-center\">\n                        <span className=\"mr-2\">75%</span>\n                        <div>\n                          <Progress\n                            max=\"100\"\n                            value=\"75\"\n                            barClassName=\"bg-gradient-info\"\n                          />\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">twitter</th>\n                    <td>2,645</td>\n                    <td>\n                      <div className=\"d-flex align-items-center\">\n                        <span className=\"mr-2\">30%</span>\n                        <div>\n                          <Progress\n                            max=\"100\"\n                            value=\"30\"\n                            barClassName=\"bg-gradient-warning\"\n                          />\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Card>\n          </Col>\n        </Row>\n      </Container>  */} \n    </>\n  );\n};\n\nexport default Index;\n","\n// reactstrap components\nimport { Button, Container, Row, Col } from \"reactstrap\";\nimport React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\n\n\n  function getFormValues() {\n    const storedValues = localStorage.getItem(\"user\");\n    if (!storedValues)\n      return {\n        email: \"\",\n        message: \"\",\n        name: \"\",\n        telephone: \"\",\n      };\n    return JSON.parse(storedValues);\n  }\n\n  \n\n\nconst UserHeader = () => {\n      const [user, setUser] = React.useState(getFormValues);\n\n      React.useEffect(() => {\n        localStorage.getItem(\"user\", JSON.stringify(user));\n      }, [user]);\n\n      console.log(\"User data\", user);\n      // const { user: currentUser } = useSelector((state) => state.auth);\n\n      if (!user) {\n        return <Redirect to=\"/login\" />;\n      }\n  return (\n    <>\n      <div\n        className=\"header pb-8 pt-5 pt-lg-8 d-flex align-items-center\"\n        style={{\n          minHeight: \"600px\",\n          backgroundImage:\n            \"url(\" +\n            require(\"../../assets/img/brand/qevla_logo.png\").default +\n            \")\",\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center top\",\n        }}\n      >\n        {/* Mask */}\n        <span className=\"mask bg-gradient-default opacity-8\" />\n        {/* Header container */}\n        <Container className=\"d-flex align-items-center\" fluid>\n          <Row>\n            <Col lg=\"7\" md=\"10\">\n              <h1 className=\"display-2 text-white\">Hello {user.first_name}</h1>\n              <p className=\"text-white mt-0 mb-5\">\n                This is your profile page. You can see the progress you've made\n                with your work and manage your projects or assigned tasks\n              </p>\n              <Button\n                color=\"info\"\n                href=\"#pablo\"\n                onClick={(e) => e.preventDefault()}\n              >\n                Edit profile\n              </Button>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </>\n  );\n};\n\nexport default UserHeader;\n","\nimport React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n// core components\nimport UserHeader from \"components/Headers/UserHeader.js\";\nimport userService from \"services/user.service\";\n\n  function getFormValues() {\n    const storedValues = localStorage.getItem(\"user\");\n    if (!storedValues)\n      return {\n        email: \"\",\n        message: \"\",\n        name: \"\",\n        telephone: \"\",\n      };\n    return JSON.parse(storedValues);\n  }\n\n  const Profile = () => {\n    const [user, setUser] = React.useState(getFormValues);\n\n    React.useEffect(() => {\n      localStorage.getItem(\"user\", JSON.stringify(user));\n    }, [user]);\n\n    console.log(\"User data\", user);\n    // const { user: currentUser } = useSelector((state) => state.auth);\n\n    if (!user) {\n      return <Redirect to=\"/login\" />;\n    }\n    return (\n      <>\n        <UserHeader />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <Col className=\"order-xl-2 mb-5 mb-xl-0\" xl=\"4\">\n              <Card className=\"card-profile shadow\">\n                <Row className=\"justify-content-center\">\n                  <Col className=\"order-lg-2\" lg=\"3\">\n                    <div className=\"card-profile-image\">\n                      <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                        <img\n                          alt=\"...\"\n                          className=\"rounded-circle\"\n                          src={\n                            require(\"../assets/img/theme/team-4-800x800.jpg\")\n                              .default\n                          }\n                        />\n                      </a>\n                    </div>\n                  </Col>\n                </Row>\n                <CardHeader className=\"text-center border-0 pt-8 pt-md-4 pb-0 pb-md-4\">\n                  <div className=\"d-flex justify-content-between\">\n                    <Button\n                      className=\"mr-4\"\n                      color=\"info\"\n                      href=\"#pablo\"\n                      onClick={(e) => e.preventDefault()}\n                      size=\"sm\"\n                    >\n                      {/* Approve */}\n                    </Button>\n                    <Button\n                      className=\"float-right\"\n                      color=\"default\"\n                      href=\"#pablo\"\n                      onClick={(e) => e.preventDefault()}\n                      size=\"sm\"\n                    >\n                      {/* Delete */}\n                    </Button>\n                  </div>\n                </CardHeader>\n                <CardBody className=\"pt-0 pt-md-4\">\n                  <Row>\n                    <div className=\"col\">\n                      <div className=\"card-profile-stats d-flex justify-content-center mt-md-5\">\n                        <div>\n                          <span className=\"heading\">22</span>\n                          <span className=\"description\">Total Tows</span>\n                        </div>\n                        <div>\n                          <span className=\"heading\">10</span>\n                          <span className=\"description\">Commissioned Tows</span>\n                        </div>\n                        <div>\n                          <span className=\"heading\">89</span>\n                          <span className=\"description\">Total tow Commission owed</span>\n                        </div>\n                      </div>\n                    </div>\n                  </Row>\n                  <div className=\"text-center\">\n                    <h3>\n                      {user.first_name} {user.last_name}\n                      <span className=\"font-weight-light\"></span>\n                    </h3>\n                    <div className=\"h5 font-weight-300\">\n                      <i className=\"ni location_pin mr-2\" />\n                      Current Address: <b>{user.vehicle_details.address}</b>\n                    </div>\n                    {/* <div className=\"h5 mt-4\">\n                      <i className=\"ni business_briefcase-24 mr-2\" />\n                      Solution Manager - Creative Tim Officer\n                    </div>\n                    <div>\n                      <i className=\"ni education_hat mr-2\" />\n                      University of Computer Science\n                    </div> */}\n                    <hr className=\"my-4\" />\n                    <p>\n                      {user.first_name} — registered on {user.createdAt}, with\n                      license <b>{user.vehicle_details.v_license}</b>\n                      {/* Nick Murphy — writes, performs and records all of his own\n                      music. */}\n                    </p>\n                    {/* <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                      Show more\n                    </a> */}\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col className=\"order-xl-1\" xl=\"8\">\n              <Card className=\"bg-secondary shadow\">\n                <CardHeader className=\"bg-white border-0\">\n                  <Row className=\"align-items-center\">\n                    <Col xs=\"8\">\n                      <h3 className=\"mb-0\">My account</h3>\n                    </Col>\n                    <Col className=\"text-right\" xs=\"4\">\n                      <Button\n                        color=\"primary\"\n                        href=\"#pablo\"\n                        onClick={(e) => e.preventDefault()}\n                        size=\"sm\"\n                      >\n                        Settings\n                      </Button>\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      User information\n                    </h6>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-username\"\n                            >\n                              Username\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={user.first_name}\n                              id=\"input-username\"\n                              placeholder=\"Username\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-email\"\n                            >\n                              Email address\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-email\"\n                              placeholder={user.email}\n                              type=\"email\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-first-name\"\n                            >\n                              First name\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={user.first_name}\n                              id=\"input-first-name\"\n                              placeholder=\"First name\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-last-name\"\n                            >\n                              Last name\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={user.last_name}\n                              id=\"input-last-name\"\n                              placeholder=\"Last name\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n                    <hr className=\"my-4\" />\n                    {/* Address */}\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      Contact information\n                    </h6>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col md=\"12\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-address\"\n                            >\n                              Address\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={user.vehicle_details.address}\n                              id=\"input-address\"\n                              placeholder=\"Vehicle Address\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-city\"\n                            >\n                              Phone Number\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={user.number}\n                              id=\"input-city\"\n                              placeholder=\"Phone Number\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n                    <hr className=\"my-4\" />\n                    {/* Address */}\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      Vehicle information\n                    </h6>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col md=\"12\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-address\"\n                            >\n                              Manufacturer\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={user.vehicle_details.address}\n                              id=\"input-address\"\n                              placeholder=\"Manufacturer\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-city\"\n                            >\n                              Vehicle Type\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={user.vehicle_details.address}\n                              id=\"input-city\"\n                              placeholder=\"Vehicle Type\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-country\"\n                            >\n                              Max Weight\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={user.vehicle_details.max_weight}\n                              id=\"input-country\"\n                              placeholder=\"Max Weight\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-country\"\n                            >\n                              Vehicle License\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-postal-code\"\n                              defaultValue={user.vehicle_details.v_license}\n                              placeholder=\"Vehicle License\"\n                              type=\"number\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n                    <hr className=\"my-4\" />\n                    {/* Description */}\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      Payment Details\n                    </h6>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col md=\"12\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-address\"\n                            >\n                              Account Holder Name\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={\n                                user.payment_details.bank_holder_name\n                              }\n                              id=\"input-address\"\n                              placeholder=\"Account Holder Name\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-city\"\n                            >\n                              Account Number\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={user.payment_details.account_number}\n                              id=\"input-city\"\n                              placeholder=\"Account Number\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-country\"\n                            >\n                              Bank Name\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={user.payment_details.bank_name}\n                              id=\"input-country\"\n                              placeholder=\"Bank Name\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  };\n\nexport default Profile;\n","import React, { useState, useEffect } from \"react\";\nimport { GoogleMap, InfoWindow, Marker } from \"@react-google-maps/api\";\n// core components\nimport Header from \"components/Headers/Header.js\";\nimport { endpoints } from \"../api-endpoints\";\n\nfunction Map() {\n  const [activeMarker, setActiveMarker] = useState(null);\n  const [drivers, setDrivers] = useState([]);\n  const marker = [];\n  const marker2 = [];\n  const markerAddress = [];\n  const [latLng, setLatlng] = useState();\n\n  const handleActiveMarker = (drivers) => {\n    if (drivers === activeMarker) {\n      return;\n    }\n    setActiveMarker(drivers);\n  };\n\n  useEffect(() => {\n    async function fetchUsers() {\n      const fullResponse = await fetch(endpoints.getDrivers);\n      const responseJson = await fullResponse.json();\n      setDrivers(responseJson.users);\n      console.log(\"Endpoint response>>>>>>>>:\", responseJson.users);\n      console.log(\"Endpoint called>>>>>>>>:\", endpoints.getDrivers);\n      setLatlng();\n    }\n\n    fetchUsers();\n  }, []);\n\n  drivers.forEach((user) => {\n    const driverInfo = (\n      <div>\n        {\" Driver Information\"}\n        <p>\n          Name:{\" \"}\n          <strong>\n            {user.first_name} {user.last_name}\n          </strong>\n        </p>\n        <p>\n          Phone Numeber: <strong>{user.number}</strong>\n        </p>\n        {\"Towing Vehicle Info \"}\n        <p>\n          Vehicle Name: <strong>{user.vehicle_details.v_manufacturer}</strong>\n        </p>\n        <p>\n          Vehicle License: <strong>{user.vehicle_details.v_license}</strong>\n        </p>\n      </div>\n    );\n    marker.push({\n      id: user.address.lat,\n      name: driverInfo,\n      position: user.address,\n    });\n  });\n\n  // markerAddress.forEach((address) => {\n  //     marker.push({\n  //       id: address.lat,\n  //       name: \"Qevla Driver new one\",\n  //       position: {lat : address.lat, lng: address.long}\n  //     });\n  //   });\n  console.log(\n    \"Created drivers>>>>>>> from headers from map markers used\",\n    markerAddress\n  );\n\n  // const markers = [\n  //   {\n  //     id: 1,\n  //     name: \"Qevla Driver\",\n  //     position: { lat: 6.45469, lng: 3.32042 },\n  //   },\n\n  //   {\n  //     id: 2,\n  //     name: \"Denver, Colorado\",\n  //     position: { lat: 39.739235, lng: -104.99025 },\n  //   },\n  //   // ,\n  //   // {\n  //   //   id: 3,\n  //   //   name: \"Los Angeles, California\",\n  //   //   position: { lat: 34.052235, lng: -118.243683 },\n  //   // },\n  //   // {\n  //   //   id: 4,\n  //   //   name: \"New York, New York\",\n  //   //   position: { lat: 40.712776, lng: -74.005974 },\n  //   // },\n  // ];\n  const google = window.google;\n\n  var qevLoc = new google.maps.LatLng(6.45084, 3.35011);\n  const handleOnLoad = (map) => {\n    var bounds = new google.maps.LatLngBounds();\n    bounds.extend(qevLoc);\n    marker.forEach(({ position }) => bounds.extend(position));\n    map.fitBounds(bounds);\n    // const bounds = new google.maps.LatLngBounds();\n    // marker.forEach(({ position }) => bounds.extend(position));\n    // map.fitBounds(bounds);\n  };\n  // console.log(\"Created drivers>>>>>>> from headers from map marker\", marker);\n  // let mylatLng = new google.maps.LatLng(6.45084, 3.35011);\n  // let lat = \"6.484570\";\n  // let lng = \"6.484570\";\n  return (\n    <>\n      <Header />\n      <GoogleMap\n        onLoad={handleOnLoad}\n        onClick={() => setActiveMarker(null)}\n        mapContainerStyle={{ height: \"600px\" }}\n        options={{\n          zoom: 10,\n          // center: { lat: \"6.484570\", long:\"6.484570\" },\n          scrollwheel: false,\n          zoomControl: true,\n          styles: [\n            {\n              featureType: \"administrative\",\n              elementType: \"labels.text.fill\",\n              stylers: [{ color: \"#444444\" }],\n            },\n            {\n              featureType: \"landscape\",\n              elementType: \"all\",\n              stylers: [{ color: \"#f2f2f2\" }],\n            },\n            {\n              featureType: \"poi\",\n              elementType: \"all\",\n              stylers: [{ visibility: \"off\" }],\n            },\n            {\n              featureType: \"road\",\n              elementType: \"all\",\n              stylers: [{ saturation: -100 }, { lightness: 45 }],\n            },\n            {\n              featureType: \"road.highway\",\n              elementType: \"all\",\n              stylers: [{ visibility: \"simplified\" }],\n            },\n            {\n              featureType: \"road.arterial\",\n              elementType: \"labels.icon\",\n              stylers: [{ visibility: \"off\" }],\n            },\n            {\n              featureType: \"transit\",\n              elementType: \"all\",\n              stylers: [{ visibility: \"off\" }],\n            },\n            {\n              featureType: \"water\",\n              elementType: \"all\",\n              stylers: [{ color: \"#5e72e4\" }, { visibility: \"on\" }],\n            },\n          ],\n        }}\n      >\n        {marker.map(({ id, name, position }) => (\n          <Marker\n            key={id}\n            position={position}\n            onClick={() => handleActiveMarker(id)}\n          >\n            {activeMarker === id ? (\n              <InfoWindow onCloseClick={() => setActiveMarker(null)}>\n                <div>{name}</div>\n              </InfoWindow>\n            ) : null}\n          </Marker>\n        ))}\n      </GoogleMap>\n    </>\n  );\n}\n\nexport default Map;\n","\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AuthService from \"../services/auth_service\";\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nconst Login = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const navigate = useHistory();\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await AuthService.login(email, password).then(\n        () => {\n          navigate.push(\"/admin/index\");\n          // window.location.reload();\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n      console.log(response.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handlePassChange = (e) => {\n    window.open(\"localhost:3001/api/auth/forgot-password\");\n  }\n\n  return (\n    <>\n      <Col lg=\"5\" md=\"7\">\n        <Card className=\"bg-secondary shadow border-0\">\n          <CardHeader className=\"bg-transparent pb-5\">\n            <div className=\"text-muted text-center mt-2 mb-3\">\n              <small>Sign in here</small>\n            </div>\n            <div className=\"btn-wrapper text-center\"></div>\n          </CardHeader>\n          <CardBody className=\"px-lg-5 py-lg-5\">\n            <div className=\"text-center text-muted mb-4\">\n              <small></small>\n            </div>\n            <Form role=\"form\" onSubmit={handleLogin}>\n              <FormGroup className=\"mb-3\">\n                <InputGroup className=\"input-group-alternative\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"ni ni-email-83\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input\n                    placeholder=\"Email address\"\n                    type=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                </InputGroup>\n              </FormGroup>\n              <FormGroup>\n                <InputGroup className=\"input-group-alternative\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"ni ni-lock-circle-open\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input\n                    type=\"password\"\n                    placeholder=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                </InputGroup>\n              </FormGroup>\n              <div className=\"custom-control custom-control-alternative custom-checkbox\">\n                <input\n                  className=\"custom-control-input\"\n                  id=\" customCheckLogin\"\n                  type=\"checkbox\"\n                />\n                <label\n                  className=\"custom-control-label\"\n                  htmlFor=\" customCheckLogin\"\n                >\n                  <span className=\"text-muted\">Remember me</span>\n                </label>\n              </div>\n              {/* <div className=\"text-center\">\n                <Button type=\"submit\" className=\"my-4\" color=\"primary\">\n                  Sign in\n                </Button>\n              </div> */}\n              <div className=\"my-4\" color=\"primary\">\n                <button\n                  className=\"btn btn-primary btn-block\"\n                  // disabled={loading}\n                >\n                  {/* {loading && (\n                    <span className=\"spinner-border spinner-border-sm\"></span>\n                  )} */}\n                  <span>Login</span>\n                </button>\n              </div>\n            </Form>\n          </CardBody>\n        </Card>\n        <Row className=\"mt-3\">\n          <Col xs=\"6\">\n            <a\n              className=\"text-light\"\n              href=\"#qev\"\n              // target=\"_blank\"\n              // rel=\"noopener noreferrer\"\n              onClick={handlePassChange}\n            >\n              <small>Forgot password?</small>\n            </a>\n          </Col>\n          <Col className=\"text-right\" xs=\"6\">\n            <a\n              className=\"text-light\"\n              href=\"#pablo\"\n              onClick={(e) => e.preventDefault()}\n            >\n              <small>Create new account</small>\n            </a>\n          </Col>\n        </Row>\n      </Col>\n    </>\n  );\n};\n\nexport default Login;","\n// reactstrap components\nimport { Button, Container, Row, Col } from \"reactstrap\";\nimport React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\n  \n\n\nconst DriverRegHeader = () => {\n  return (\n    <>\n      <div\n        className=\"header pb-8 pt-5 pt-lg-8 d-flex align-items-center\"\n        style={{\n          minHeight: \"300px\",\n          backgroundImage:\n            \"url(\" +\n            require(\"../../assets/img/brand/qevla_logo.png\").default +\n            \")\",\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center top\",\n        }}\n      >\n        {/* Mask */}\n        <span className=\"mask bg-gradient-default opacity-8\" />\n        {/* Header container */}\n        <Container className=\"d-flex align-items-center\" fluid>\n          {/* <Row>\n            <Col lg=\"7\" md=\"10\">\n              <h1 className=\"display-2 text-white\">Hello {user.first_name}</h1>\n              <p className=\"text-white mt-0 mb-5\">\n                This is your profile page. You can see the progress you've made\n                with your work and manage your projects or assigned tasks\n              </p>\n              <Button\n                color=\"info\"\n                href=\"#pablo\"\n                onClick={(e) => e.preventDefault()}\n              >\n                Edit profile\n              </Button>\n            </Col>\n          </Row> */}\n        </Container>\n      </div>\n    </>\n  );\n};\n\nexport default DriverRegHeader;\n","\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AuthService from \"../services/auth_service\";\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col,\n} from \"reactstrap\";\n\n  function getFormValues() {\n    const storedValues = localStorage.getItem(\"passReq\");\n    if (!storedValues)\n      return {\n        token: \"\",\n        userId: \"\",\n\n      };\n    return JSON.parse(storedValues);\n  }\n\n\nconst PasswordReset = () => {\n  const [passReq, setPassReq] = React.useState(getFormValues);\n  const [password, setPassword] = useState(\"\");\n\n  const navigate = useHistory();\n\n  React.useEffect(() => {\n    localStorage.getItem(\"passReq\", JSON.stringify(passReq));\n  }, [passReq]);\n\n  console.log(\"PasswordResetRequest stored data\", passReq);\n\n  const handlePassRequest = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await AuthService.passwordReset;\n(passReq.token, passReq.userId, password).then(\n  () => {\n    navigate.push(\"/auth/login\");\n    // window.location.reload();\n  },\n  (error) => {\n    console.log(error);\n  }\n);\n      console.log(response.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n    const handleLoginButton = (e) => {\n      e.preventDefault();\n      navigate.push(\"/auth/login\");\n    };\n  return (\n    <>\n      <Col lg=\"5\" md=\"7\">\n        <Card className=\"bg-secondary shadow border-0\">\n          <CardHeader className=\"bg-transparent pb-5\">\n            <div className=\"text-muted text-center mt-2 mb-3\">\n              <small>Sign in here</small>\n            </div>\n            <div className=\"btn-wrapper text-center\"></div>\n          </CardHeader>\n          <CardBody className=\"px-lg-5 py-lg-5\">\n            <div className=\"text-center text-muted mb-4\">\n              <small></small>\n            </div>\n            <Form role=\"form\" onSubmit={handlePassRequest}>\n              {/* <FormGroup className=\"mb-3\">\n                <InputGroup className=\"input-group-alternative\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"ni ni-email-83\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input\n                    placeholder=\"Email address\"\n                    type=\"email\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                </InputGroup>\n              </FormGroup> */}\n              <FormGroup>\n                <InputGroup className=\"input-group-alternative\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"ni ni-lock-circle-open\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input\n                    type=\"password\"\n                    placeholder=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                </InputGroup>\n              </FormGroup>\n              {/* <div className=\"custom-control custom-control-alternative custom-checkbox\">\n                <input\n                  className=\"custom-control-input\"\n                  id=\" customCheckLogin\"\n                  type=\"checkbox\"\n                />\n                <label\n                  className=\"custom-control-label\"\n                  htmlFor=\" customCheckLogin\"\n                >\n                  <span className=\"text-muted\">Remember me</span>\n                </label>\n              </div> */}\n              {/* <div className=\"text-center\">\n                <Button type=\"submit\" className=\"my-4\" color=\"primary\">\n                  Sign in\n                </Button>\n              </div> */}\n              <div className=\"my-4\" color=\"primary\">\n                <button\n                  className=\"btn btn-primary btn-block\"\n                  // disabled={loading}\n                >\n                  {/* {loading && (\n                    <span className=\"spinner-border spinner-border-sm\"></span>\n                  )} */}\n                  <span>Reset Password</span>\n                </button>\n              </div>\n            </Form>\n          </CardBody>\n        </Card>\n        <Row className=\"mt-3\">\n          {/* <Col xs=\"6\">\n            <a\n              className=\"text-light\"\n              href=\"#pablo\"\n              onClick={(e) => e.preventDefault()}\n            >\n              <small>Forgot passwordword?</small>\n            </a>\n          </Col> */}\n          <Col className=\"text-right\" xs=\"6\">\n            <a\n              className=\"text-light\"\n              href=\"auth/login\"\n              onClick={() => handleLoginButton()}\n            >\n              <small>Remembered password? Login!</small>\n            </a>\n          </Col>\n        </Row>\n      </Col>\n    </>\n  );\n};\n\nexport default PasswordReset;\n\n","\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AuthService from \"../services/auth_service\";\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nconst PasswordResetRequest = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const navigate = useHistory();\n\n  const handlePassRequest = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await AuthService.requestPasswordReset(\n        email\n      ).then(\n        () => {\n          navigate.push(\"/auth/reset-password\");\n          // window.location.reload();\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n      console.log(response.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n    const handleLoginButton = (e) => {\n      e.preventDefault();\n      navigate.push(\"/auth/login\");\n    };\n  return (\n    <>\n      <Col lg=\"5\" md=\"7\">\n        <Card className=\"bg-secondary shadow border-0\">\n          <CardHeader className=\"bg-transparent pb-5\">\n            <div className=\"text-muted text-center mt-2 mb-3\">\n              <small>Enter your email to request a password change</small>\n            </div>\n            <div className=\"btn-wrapper text-center\"></div>\n          </CardHeader>\n          <CardBody className=\"px-lg-5 py-lg-5\">\n            <Form role=\"form\" onSubmit={handlePassRequest}>\n              <FormGroup className=\"mb-3\">\n                <InputGroup className=\"input-group-alternative\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"ni ni-email-83\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input\n                    placeholder=\"Enter your email address\"\n                    type=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                </InputGroup>\n              </FormGroup>\n              <div className=\"my-4\" color=\"primary\">\n                <button className=\"btn btn-primary btn-block\">\n                  <span>Request Password Reset</span>\n                </button>\n              </div>\n            </Form>\n          </CardBody>\n        </Card>\n        <Row className=\"mt-3\">\n          <Col className=\"text-right\" xs=\"6\">\n            <a\n              className=\"text-light\"\n              href=\"auth/login\"\n              onClick={() => handleLoginButton()}\n            >\n              <small>Remembered password? Login!</small>\n            </a>\n          </Col>\n        </Row>\n      </Col>\n    </>\n  );\n};\n\nexport default PasswordResetRequest;\n\n","import Index from \"views/Index.js\";\nimport Profile from \"views/Profile.js\";\nimport Maps from \"views/Maps.js\";\nimport Register from \"views/Register.js\";\nimport Login from \"views/Login.js\";\nimport Drivers from \"views/Drivers.js\";\n// import Icons from \"views/Icons.js\";\nimport AddAdmin from \"views/AddAdmin\";\nimport AddDriver from \"views/AddDriver\";\nimport PasswordReset from \"views/PasswordReset\";\nimport PasswordResetRequest from \"views/PasswordResetRequest\";\n\n\n\n\nvar routes = [\n  {\n    path: \"/index\",\n    name: \"Dashboard\",\n    icon: \"ni ni-tv-2 text-primary\",\n    component: Index,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/maps\",\n    name: \"Maps\",\n    icon: \"ni ni-pin-3 text-orange\",\n    component: Maps,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/user-profile\",\n    name: \"User Profile\",\n    icon: \"ni ni-single-02 text-yellow\",\n    component: Profile,\n    layout: \"/admin\",\n  },\n  // {\n  //   path: \"/driver-profile/:id\",\n  //   name: \"Driver Profile\",\n  //   icon: \"ni ni-single-02 text-yellow\",\n  //   component: DriverProfile,\n  //   layout: \"/admin\",\n  // },\n\n  {\n    path: \"/drivers\",\n    name: \"Drivers\",\n    icon: \"ni ni-bullet-list-67 text-red\",\n    component: Drivers,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/add-admin\",\n    name: \"Add new Admin\",\n    icon: \"ni ni-key-25 text-info\",\n    component: AddAdmin,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/add-driver\",\n    name: \"Add New Driver\",\n    icon: \"ni ni-circle-08 text-pink\",\n    component: AddDriver,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/login\",\n    // name: \"Driver Profile\",\n    // icon: \"ni ni-single-02 text-yellow\",\n    component: Login,\n    layout: \"/auth\",\n  },\n  {\n    path: \"/reset-password\",\n    // name: \"Driver Profile\",\n    // icon: \"ni ni-single-02 text-yellow\",\n    component: PasswordReset,\n    layout: \"/auth\",\n  },\n  {\n    path: \"/request-reset-password\",\n    // name: \"Driver Profile\",\n    // icon: \"ni ni-single-02 text-yellow\",\n    component: PasswordResetRequest,\n    layout: \"/auth\",\n  },\n];\nexport default routes;\n","\nimport React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport DriverRegHeader from \"components/Headers/DriverRegHeader\";\n\n  const AddAdmin = () => {\n\n    return (\n      <>\n        <DriverRegHeader />\n        {/* Page content */}\n        <Container lassName=\"mt--14 my-auto\">\n          <Row lassName=\"mt--14\">\n            <Col className=\"order-xl-2 mb-5 mb-xl-0\" xl=\"4\">\n              <Card className=\"card-profile shadow\"></Card>\n            </Col>\n            <Col className=\"order-xl-1\" xl=\"8\">\n              <Card className=\"bg-secondary shadow\">\n                <CardHeader className=\"bg-white border-0\">\n                  <Row className=\"align-items-center\">\n                    <Col xs=\"8\">\n                      <h3 className=\"mb-0\">Add New Admin</h3>\n                    </Col>\n                    <Col className=\"text-right\" xs=\"4\"></Col>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      Personal information\n                    </h6>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-username\"\n                            >\n                              First name\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={\"\"}\n                              id=\"input-username\"\n                              placeholder=\"First Name\"\n                              name=\"first_name\"\n                              // onChange={() => handleOnChange}\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-username\"\n                            >\n                              Last name\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={\"\"}\n                              id=\"input-username\"\n                              placeholder=\"Last Name\"\n                              name=\"last_name\"\n                              // onChange={() => handleOnChange}\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-username\"\n                            >\n                              Phone Number\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={\"\"}\n                              id=\"number\"\n                              placeholder=\"Phone Number\"\n                              // onChange={() => handleOnChange}\n                              type=\"number\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"email\"\n                            >\n                              Email address\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"email\"\n                              placeholder={\"\"}\n                              // onChange={() => handleOnChange}\n                              type=\"email\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-first-name\"\n                            >\n                              DOB\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={\"\"}\n                              id=\"dbo\"\n                              placeholder=\"Date of birth\"\n                              // onChange={() => handleOnChange}\n                              type=\"date\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-last-name\"\n                            >\n                              Password\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={\"123456\"}\n                              id=\"password\"\n                              readOnly\n                              // placeholder=\"Last name\"\n                              // onChange={() => handleOnChange}\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n                    <hr className=\"my-4\" />\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      Contact information\n                    </h6>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col md=\"12\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-address\"\n                            >\n                              Address\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={\"\"}\n                              id=\"input-address\"\n                              placeholder=\"Vehicle Address\"\n                              // onChange={() => handleOnChange}\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Button variant=\"secondary\">Submit</Button>\n                    </div>\n                    <div className=\"left\"></div>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  };\n\nexport default AddAdmin;\n","\nimport React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport DriverRegHeader from \"components/Headers/DriverRegHeader\";\n\n  const AddDriver = () => {\n\n    return (\n      <>\n        <DriverRegHeader />\n        {/* Page content */}\n        <Container lassName=\"mt--14 my-auto\">\n          <Row lassName=\"mt--14\">\n            <Col className=\"order-xl-2 mb-5 mb-xl-0\" xl=\"4\">\n              <Card className=\"card-profile shadow\"></Card>\n            </Col>\n            <Col className=\"order-xl-1\" xl=\"8\">\n              <Card className=\"bg-secondary shadow\">\n                <CardHeader className=\"bg-white border-0\">\n                  <Row className=\"align-items-center\">\n                    <Col xs=\"8\">\n                      <h3 className=\"mb-0\">My account</h3>\n                    </Col>\n                    <Col className=\"text-right\" xs=\"4\">\n                      {/* <Button\n                        color=\"primary\"\n                        href=\"#pablo\"\n                        onClick={(e) => e.preventDefault()}\n                        size=\"sm\"\n                      >\n                        Settings\n                      </Button> */}\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      Personal information\n                    </h6>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-username\"\n                            >\n                              First name\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={\"\"}\n                              id=\"input-username\"\n                              placeholder=\"First Name\"\n                              name=\"first_name\"\n                              // onChange={() => handleOnChange}\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-username\"\n                            >\n                              Last name\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={\"\"}\n                              id=\"input-username\"\n                              placeholder=\"Last Name\"\n                              name=\"last_name\"\n                              // onChange={() => handleOnChange}\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-username\"\n                            >\n                              Phone Number\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={\"\"}\n                              id=\"number\"\n                              placeholder=\"Phone Number\"\n                              // onChange={() => handleOnChange}\n                              type=\"number\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"email\"\n                            >\n                              Email address\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"email\"\n                              placeholder={\"\"}\n                              // onChange={() => handleOnChange}\n                              type=\"email\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-first-name\"\n                            >\n                              DOB\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={\"\"}\n                              id=\"dbo\"\n                              placeholder=\"Date of birth\"\n                              // onChange={() => handleOnChange}\n                              type=\"date\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-last-name\"\n                            >\n                              Password\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={\"123456\"}\n                              id=\"password\"\n                              readOnly\n                              // placeholder=\"Last name\"\n                              // onChange={() => handleOnChange}\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n                    <hr className=\"my-4\" />\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      Vehicle information\n                    </h6>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col md=\"12\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-address\"\n                            >\n                              Manufacturer\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={\"\"}\n                              id=\"input-address\"\n                              placeholder=\"Manufacturer\"\n                              // onChange={() => handleOnChange}\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-city\"\n                            >\n                              Vehicle Type\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={\"\"}\n                              id=\"input-city\"\n                              placeholder=\"Vehicle Type\"\n                              // onChange={() => handleOnChange}\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-country\"\n                            >\n                              Max Weight\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={\"\"}\n                              id=\"input-country\"\n                              placeholder=\"Max Weight\"\n                              // onChange={() => handleOnChange}\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-country\"\n                            >\n                              Vehicle License\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-postal-code\"\n                              defaultValue={\"\"}\n                              placeholder=\"Vehicle License\"\n                              // onChange={() => handleOnChange}\n                              type=\"number\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n                    <hr className=\"my-4\" />\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      Payment Details\n                    </h6>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col md=\"12\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-address\"\n                            >\n                              Account Holder Name\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={\"\"}\n                              id=\"input-address\"\n                              placeholder=\"Account Holder Name\"\n                              // onChange={() => handleOnChange}\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-city\"\n                            >\n                              Account Number\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={\"\"}\n                              id=\"input-city\"\n                              placeholder=\"Account Number\"\n                              // onChange={() => handleOnChange}\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-country\"\n                            >\n                              Bank Name\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={\"\"}\n                              id=\"input-country\"\n                              placeholder=\"Bank Name\"\n                              // onChange={() => handleOnChange()}\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n                    <div className=\"align-items-center\">\n                    <Button variant=\"secondary\" >\n                      Submit\n                    </Button></div>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  };\n\nexport default AddDriver;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.1\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { useLocation, Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\nimport { Container } from \"reactstrap\";\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport AdminFooter from \"components/Footers/AdminFooter.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\n\nimport routes from \"routes.js\";\n\nconst Admin = (props) => {\n  const mainContent = React.useRef(null);\n  const location = useLocation();\n\n  React.useEffect(() => {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    mainContent.current.scrollTop = 0;\n  }, [location]);\n\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  const getBrandText = (path) => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        props.location.pathname.indexOf(routes[i].layout + routes[i].path) !==\n        -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n\n  return (\n    <>\n      <Sidebar\n        {...props}\n        routes={routes}\n        logo={{\n          innerLink: \"/admin/index\",\n          imgSrc: require(\"../assets/img/brand/qevla_logo.png\").default,\n          imgAlt: \"...\",\n        }}\n      />\n      <div className=\"main-content\" ref={mainContent}>\n        <AdminNavbar\n          {...props}\n          brandText={getBrandText(props.location.pathname)}\n        />\n        <Switch>\n          {getRoutes(routes)}\n          <Redirect from=\"*\" to=\"/admin/index\" />\n        </Switch>\n        <Container fluid>\n          <AdminFooter />\n        </Container>\n      </div>\n    </>\n  );\n};\n\nexport default Admin;\n","import { Link } from \"react-router-dom\";\n// reactstrap components\nimport {\n  UncontrolledCollapse,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nconst AdminNavbar = () => {\n  return (\n    <>\n      <Navbar className=\"navbar-top navbar-horizontal navbar-dark\" expand=\"md\">\n        <Container className=\"px-4\">\n          <NavbarBrand to=\"/\" tag={Link}>\n            <img\n              alt=\"...\"\n              src={\n                require(\"../../assets/img/brand/qevla_logo.png\").default\n              }\n            />\n          </NavbarBrand>\n          <button className=\"navbar-toggler\" id=\"navbar-collapse-main\">\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          <UncontrolledCollapse navbar toggler=\"#navbar-collapse-main\">\n            <div className=\"navbar-collapse-header d-md-none\">\n              <Row>\n                <Col className=\"collapse-brand\" xs=\"6\">\n                  <Link to=\"/\">\n                    <img\n                      alt=\"...\"\n                      src={\n                        require(\"../../assets/img/brand/qevla_logo.png\")\n                          .default\n                      }\n                    />\n                  </Link>\n                </Col>\n                <Col className=\"collapse-close\" xs=\"6\">\n                  <button className=\"navbar-toggler\" id=\"navbar-collapse-main\">\n                    <span />\n                    <span />\n                  </button>\n                </Col>\n              </Row>\n            </div>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink\n                  className=\"nav-link-icon\"\n                  to=\"/auth/register\"\n                  tag={Link}\n                >\n                  <i className=\"ni ni-circle-08\" />\n                  <span className=\"nav-link-inner--text\">Register</span>\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink className=\"nav-link-icon\" to=\"/auth/login\" tag={Link}>\n                  <i className=\"ni ni-key-25\" />\n                  <span className=\"nav-link-inner--text\">Login</span>\n                </NavLink>\n              </NavItem>\n            </Nav>\n          </UncontrolledCollapse>\n        </Container>\n      </Navbar>\n    </>\n  );\n};\n\nexport default AdminNavbar;\n","\nimport {  Container, Row, Col } from \"reactstrap\";\n\nconst Login = () => {\n  return (\n    <>\n      <footer className=\"py-5\">\n        <Container>\n          <Row className=\"align-items-center justify-content-xl-between\">\n            <Col xl=\"6\">\n              <div className=\"copyright text-center text-xl-left text-muted\">\n                © {new Date().getFullYear()}{\" \"}\n                <p\n                  className=\"font-weight-bold ml-1\"\n                  target=\"_blank\"\n                >\n                  Qevla Inc\n                </p>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </footer>\n    </>\n  );\n};\n\nexport default Login;\n","\nimport React from \"react\";\nimport { useLocation, Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\nimport { Container, Row, Col } from \"reactstrap\";\n\n// core components\nimport AuthNavbar from \"components/Navbars/AuthNavbar.js\";\nimport AuthFooter from \"components/Footers/AuthFooter.js\";\n\nimport routes from \"routes.js\";\n\nconst Auth = (props) => {\n  const mainContent = React.useRef(null);\n  const location = useLocation();\n\n  React.useEffect(() => {\n    document.body.classList.add(\"bg-default\");\n    return () => {\n      document.body.classList.remove(\"bg-default\");\n    };\n  }, []);\n  React.useEffect(() => {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    mainContent.current.scrollTop = 0;\n  }, [location]);\n\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/auth\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  return (\n    <>\n      <div className=\"main-content\" ref={mainContent}>\n        <AuthNavbar />\n        <div className=\"header bg-gradient-info py-7 py-lg-8\">\n          <Container>\n            <div className=\"header-body text-center mb-7\">\n              <Row className=\"justify-content-center\">\n                <Col lg=\"5\" md=\"6\">\n                  <h1 className=\"text-white\">Welcome!</h1>\n                  <p className=\"text-lead text-light\">\n                    Please login!\n                  </p>\n                </Col>\n              </Row>\n            </div>\n          </Container>\n          <div className=\"separator separator-bottom separator-skew zindex-100\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              preserveAspectRatio=\"none\"\n              version=\"1.1\"\n              viewBox=\"0 0 2560 100\"\n              x=\"0\"\n              y=\"0\"\n            >\n              <polygon\n                className=\"fill-default\"\n                points=\"2560 0 2560 100 0 100\"\n              />\n            </svg>\n          </div>\n        </div>\n        {/* Page content */}\n        <Container className=\"mt--8 pb-5\">\n          <Row className=\"justify-content-center\">\n            <Switch>\n              {getRoutes(routes)}\n              <Redirect from=\"*\" to=\"/auth/login\" />\n            </Switch>\n          </Row>\n        </Container>\n      </div>\n      <AuthFooter />\n    </>\n  );\n};\n\nexport default Auth;\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from \"../actions/types\";\n\nconst user = JSON.parse(localStorage.getItem(\"user\"));\n\nconst initialState = user\n  ? { isLoggedIn: true, user }\n  : { isLoggedIn: false, user: null };\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case REGISTER_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    case REGISTER_FAIL:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: true,\n        user: payload.user,\n      };\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n      };\n    default:\n      return state;\n  }\n}","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_MESSAGE:\n      return { message: payload };\n\n    case CLEAR_MESSAGE:\n      return { message: \"\" };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport auth from \"./auth\";\nimport message from \"./message\";\n\nexport default combineReducers({\n  auth,\n  message,\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"assets/plugins/nucleo/css/nucleo.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"assets/scss/argon-dashboard-react.scss\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\n\nimport AdminLayout from \"./layouts/Admin.js\";\nimport AuthLayout from \"./layouts/Auth.js\";\nimport { Provider } from \"react-redux\";\nimport store from \"store\";\n// import Login from \"components/Login.js\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/admin\" render={(props) => <AdminLayout {...props} />} />\n        <Route path=\"/auth\" render={(props) => <AuthLayout {...props} />} />\n        <Redirect from=\"/\" to=\"/auth/login\" />\n      </Switch>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n\n","export default __webpack_public_path__ + \"static/media/qevla_logo.0e390610.png\";","export default __webpack_public_path__ + \"static/media/team-4-800x800.99c612eb.jpg\";"],"sourceRoot":""}